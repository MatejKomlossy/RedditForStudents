{"version":3,"sources":["utils/data.js","utils/Formatter.jsx","utils/functions.js","components/Tables/MyBootstrapTable.jsx","components/Buttons/TableBtns.jsx","components/FetchComponents.jsx","utils/useDataApi.js","components/Modals/ConfirmModal.jsx","unsigned-records/RecordsToSignPage.jsx","unsigned-records/columns.js","components/CustomAlert.jsx","utils/wording.js","login/LoginForm.jsx","login/secret.jsx","login/LoginPage.jsx","login/LogoutPage.jsx","signed-records/SignedRecordsPage.jsx","signed-records/columns.js","components/Forms/MyFormGroup.jsx","components/Forms/CombinationForm.jsx","components/Modals/CombinationModal.jsx","components/Tables/Combinations.jsx","components/Forms/DocumentForm.jsx","components/Forms/TrainingForm.jsx","add-record/AddRecordPage.jsx","components/Buttons/EditBtn.jsx","saved-records/columns.js","components/Modals/EditRecordModal.jsx","saved-records/SavedRecordsPage.jsx","settings/SettingsPage.jsx","finder/Filter.jsx","finder/skill-matrix/ToggleBtn.jsx","finder/skill-matrix/SkillMatrixComponents.jsx","finder/skill-matrix/SkillMatrix.jsx","finder/report/ReportBtn.jsx","finder/FoundDocuments.jsx","finder/FoundTrainings.jsx","finder/FoundRecords.jsx","finder/FinderPage.jsx","finder/report/ReportDocument.jsx","Page404.jsx","finder/report/ReportTraining.jsx","Routes.jsx","images/logo.png","Navigation.jsx","utils/IdleTimer.js","App.js","index.js"],"names":["proxy_url","comboFields","comboFieldsSingular","types","FullName","_","employee","first_name","last_name","format_date","date","Time","Valid","substr","split","reverse","join","FormattedDate","row","FormattedDeadline","deadline","FormattedRelease","release_date","FormattedSuperiorDate","s_date","FormattedTrainingDate","signatures","FormattedEmployeeDate","e_date","Percentage","Math","round","complete","NameWithLink","link","href","target","rel","name","DocumentLabel","ExclamationName","style","color","marginBottom","expired","Date","now","employees","find","e","state","includes","buttonColumn","field","text","dataField","sort","headerStyle","width","recordType","record","Object","keys","require_superior","rec","isSuperior","console","log","superior_id","getUser","id","nonExpandableDocs","documents","map","doc","orderBy","order","JSON","parse","sessionStorage","getItem","removeUser","removeItem","isAdmin","role","goodMsg","body","variant","badMsg","successResponse","response","status","getFormID","form","getSelectOptions","hidden","value","uuid","prepareCombinations","combinations","c","combination","forEach","label","getOptionsForSelect","pairs","branches","n","divisions","departments","cities","getState","sign","cancel","sortSignaturesByEmployeeName","filter","a","b","getAssignedTo","document","assigned_to","combs","remEms","values","i","push","getFieldName","removedEmployees","getEmployeeName","f","toString","getEmployeeLabel","getDateObject","getDateString","resolveCombinations","c_string","length","r_string","sortEmployeesByName","department_id","dep","d","prepareFoundDocs","found","getLabels","cs","labels","Set","flat","doc_cs","getFetch","url","fetch","method","then","result","json","postFetch","MyBootstrapTable","title","data","columns","expandRow","classes","rest","TableHeader","borderRadius","textAlign","border","margin","padding","marginTop","keyField","hover","noDataIndication","defaultSorted","MissedBtn","cell","index","setModalInfo","setShowModal","asSuperior","Button","onClick","size","className","SignedBtn","FetchLoading","Spinner","animation","FetchError","useDataApi","useState","setData","error","setError","isLoaded","setIsLoaded","useEffect","res","ConfirmModal","showModal","modalInfo","handleAccept","closeModal","bodyText","Modal","show","onHide","centered","Header","closeButton","Title","Body","Footer","RecordsToSignPage","URL","trainings","setTrainings","setDocuments","employee_id","message","fetchSign","URLSearchParams","signAsEmployee","sign_id","record_type","updateTrainings","updateEmployeeDocs","signAsSuperior","signature_id","updateSuperiorDocs","t","update","s","trn_columns","formatter","formatExtraData","trainingsToSignColumns","doc_columns","documentsToSignColumns","expandColumns","documentsToSignExpandColumns","onlyOneExpanding","nonExpandable","renderer","CustomAlert","notification","Alert","wording","sk","loginPage","header","login","password","submit","wrongLogin","wrongCard","navigation","recordsToSign","signedRecords","addRecord","savedRecords","finder","settings","logout","en","LoginForm","onSubmit","language","setLanguage","useForm","register","handleSubmit","active","Container","Form","align","ButtonGroup","disabled","Group","Label","Control","ref","required","type","CryptoJS","require","changeString","inputText","howMany","toLowerCase","charCodeAt","HmacSHA256","repeat","enc","Base64","encodeURIComponent","LoginPage","setNotification","cardInput","cardInputTimeout","setTimeout","checkInput","findByCard","clearTimeout","event","engInput","String","fromCharCode","keyCode","isLetter","isNumber","isValuable","addEventListener","removeEventListener","setUser","user","setItem","stringify","window","location","reload","input","catch","to","LogoutPage","SignedRecordsPage","documentsColumns","trainingsColumns","MyFormGroup","placeholder","as","Row","column","sm","Col","CombinationForm","prefill","setCombination","useContext","PairContext","options","handleSelect","selector","opt","isMulti","defaultValue","isDisabled","onChange","CombinationModal","setAssignedTo","setEmptyAssign","setDisabled","setEmployees","preview","assignedTo","resolveEmployees","prev","undefined","prevState","Combinations","setPrefill","openModal","AddIcon","OverlayTrigger","placement","overlay","Tooltip","editCombination","deleteCombination","wrapperClasses","rowClasses","DocumentForm","setRecords","formData","setFormData","actual","submitData","setSubmitData","defaultValues","action","setAction","selectedType","setSelectedType","sent","setSent","currentID","setCurrentID","setCombinations","emptyAssign","executeSubmit","correctDocumentFormData","upsert","updateSavedRec","r","upsertConfirm","filterSavedRec","p","findIndex","validate","v","Check","inline","valueAsNumber","TrainingForm","attendees","setAttendees","emptyAttendees","setEmptyAttendees","getEmployeesNames","correctTrainingFormData","labelKey","multiple","selected","AddRecordPage","formType","setFormType","EditBtn","SendBtn","setRow","EditRecordModal","props","SavedRecordsPage","doc_data","trn_data","isLoaded2","error2","savedTrainingsColumns","savedDocumentsColumns","SettingsPage","cardsFile","setCardsFile","employeesFile","setEmployeesFile","notification2","setNotification2","clearErrors","crossOrigin","files","FormData","append","marginLeft","Filter","showSM","setShowSM","matrixByCombination","matrixBySuperior","searchByCombination","searchByPerson","es","setEs","ls","setLs","optionsStructure","lector","person","setPerson","searchType","setSearchType","l","searchStructure","branch","city","department","division","searchPerson","selectorStructure","isClearable","selectStructure","selectorPerson","selectPerson","backgroundColor","toggle","paddingRight","ToggleBtn","rowIndex","mark","unMarkState","styledBtn","getColor","borderColor","borderWidth","stt","new_employees","copy","getLabel","RowButtons","showLegend","setShowLegend","handleClick","Legend","Badge","textColor","background","height","fontSize","fontWeight","Card","Subtitle","Text","SkillMatrix","SMData","docs","sample","sortedSignatures","counter","job_title","getColumns","changedState","replace","resetSign","updateState","handleExport","ReportBtn","FoundDocuments","setFound","setReport","FoundTrainings","report","pathname","search","FoundRecords","FinderPage","setCs","setSMData","resetTables","superior","ReportDocument","match","reports","setReports","reqSuperior","setReqSuperior","params","prepareReport","ReportLink","rep","version","Page404","useLocation","ReportTraining","preData","setPreData","place","agency","headerClasses","Routes","admin","Private","Component","component","exact","path","render","Navigation","x","LoginNav","NavLink","LogoutNav","Name","Navbar","expand","bg","sticky","Brand","alt","src","logo","Toggle","Collapse","Nav","activeKey","IdleTimer","timeout","onTimeout","this","eventHandler","updateExpiredTime","bind","tracker","startInterval","interval","setInterval","parseInt","localStorage","cleanUp","timeoutTracker","clearInterval","createContext","App","setPairs","_pairs","timer","Provider","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.4864c5ff.chunk.js","sourcesContent":["//export const proxy_url = \"http://5.178.48.91:8180\";\r\n export const proxy_url = \"http://localhost:8180\";\r\n\r\nexport const TIMEOUT = 60 * 10; // 100 minutes\r\n\r\nexport const comboFields = [\"branches\", \"cities\", \"departments\", \"divisions\"];\r\nexport const comboFieldsSingular = [\"branch\", \"city\", \"department\", \"division\"];\r\n\r\nexport const types = [\"TPK\", \"OS\", \"PP\", \"PL\"];\r\n","import React from \"react\";\r\nimport { ExclamationTriangle } from \"react-bootstrap-icons\";\r\n\r\n/** Couple of simple formatting functions to displays some cells of table  */\r\nexport const FullName = (_, { employee }) => {\r\n  if (!employee) return;\r\n\r\n  return (\r\n    <>\r\n      {employee.first_name} {employee.last_name}\r\n    </>\r\n  );\r\n};\r\n\r\nexport const format_date = (date) => {\r\n  if (!date) return \"-\";\r\n  const { Time, Valid } = date;\r\n  if (!Valid) return \"-\";\r\n  return Time.substr(0, 10).split(\"-\").reverse().join(\".\");\r\n};\r\n\r\nexport const FormattedDate = (_, row) => {\r\n  return <>{format_date(row.date)}</>;\r\n};\r\n\r\nexport const FormattedDeadline = (_, row) => {\r\n  return <>{format_date(row.deadline)}</>;\r\n};\r\n\r\nexport const FormattedRelease = (_, row) => {\r\n  return <>{format_date(row.release_date)}</>;\r\n};\r\n\r\nexport const FormattedSuperiorDate = (_, row) => {\r\n  return <>{format_date(row.s_date)}</>;\r\n};\r\n\r\nexport const FormattedTrainingDate = (_, row) => {\r\n  return <>{format_date(row.signatures[0].date)}</>;\r\n};\r\n\r\nexport const FormattedEmployeeDate = (_, row) => {\r\n  return <>{format_date(row.e_date)}</>;\r\n};\r\n\r\nexport const Percentage = (_, row) =>\r\n  Math.round(row.complete * 100) / 100 + \"%\";\r\n\r\nexport const NameWithLink = (_, row) => {\r\n  let link = row.link;\r\n  if (link && link.substr(0, 3) === \"www\") {\r\n    link = \"https://\" + link;\r\n  }\r\n  return (\r\n    <a href={link} target=\"_blank\" rel=\"noreferrer\">\r\n      {row.name}\r\n    </a>\r\n  );\r\n};\r\n\r\nexport const DocumentLabel = (_, row) => {\r\n  const ExclamationName = () => (\r\n    <h5>\r\n      <ExclamationTriangle style={{ color: \"red\", marginBottom: \"6px\" }} />{\" \"}\r\n      {NameWithLink(_, row)}\r\n    </h5>\r\n  );\r\n\r\n  const expired =\r\n    row.deadline < Date.now() &&\r\n    row.employees.find((e) => e.state.includes(\"e\") || e.state.includes(\"s\"));\r\n\r\n  return <>{expired ? <ExclamationName /> : NameWithLink(_, row)}</>;\r\n};\r\n\r\nexport const FormattedEmployee = (_, row) => {\r\n  // const employee = employees[row-1]\r\n  const employee = {};\r\n  const percentage = 100; // TODO implement\r\n  return (\r\n    <div style={{ fontSize: \"12px\" }}>\r\n      {employee.name}, {employee.job}, {percentage}%\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport uuid from \"react-uuid\";\r\nimport { comboFields, comboFieldsSingular } from \"./data\";\r\nimport { proxy_url } from \"./data\";\r\nimport { format_date } from \"./Formatter\";\r\n\r\n// Tables\r\nexport const buttonColumn = (field = \"\", text = \"\") => {\r\n  return {\r\n    dataField: \"\" + field,\r\n    text: text,\r\n    sort: true,\r\n    headerStyle: { width: \"1%\" },\r\n  };\r\n};\r\n\r\nexport const recordType = (record) => {\r\n  return Object.keys(record).includes(\"link\") ? \"document\" : \"training\";\r\n};\r\n\r\nexport const require_superior = (rec) => rec.require_superior === true;\r\n\r\nexport const isSuperior = (row) => {\r\n  console.log(row.signatures[0].superior_id);\r\n  console.log(getUser().id);\r\n  return row.signatures[0].superior_id === getUser().id;\r\n};\r\n\r\nexport const nonExpandableDocs = (documents) => {\r\n  return documents.map((doc) => {\r\n    // TODO NEW treba doplnit podmienku. Expandable ma byt len pre konkretneho managera\r\n    if (!(require_superior(doc) && isSuperior(doc))) return doc.id;\r\n  });\r\n};\r\n\r\nexport const orderBy = (field, order = \"asc\") => {\r\n  return [{ dataField: field, order: order }];\r\n};\r\n\r\n// Authentication\r\nexport const setUser = (user) =>\r\n  sessionStorage.setItem(\"user\", JSON.stringify(user));\r\nexport const getUser = () => JSON.parse(sessionStorage.getItem(\"user\"));\r\nexport const removeUser = () => sessionStorage.removeItem(\"user\");\r\nexport const isAdmin = () => getUser() !== null && getUser().role === \"admin\";\r\n\r\n// Helpers\r\nexport const goodMsg = (body) => {\r\n  return { variant: \"success\", body: body };\r\n};\r\n\r\nexport const badMsg = (body) => {\r\n  return { variant: \"danger\", body: body };\r\n};\r\n\r\nexport const successResponse = (response) => {\r\n  return 200 <= response.status && response.status <= 299;\r\n};\r\n\r\nexport const getLanguage = () => JSON.parse(sessionStorage.getItem(\"language\"));\r\nexport const delay = (ms) => new Promise((res) => setTimeout(res, ms));\r\n\r\n// Add record forms\r\nexport const getFormID = (form) => (form ? form.id : 0);\r\n\r\nexport const getSelectOptions = (field) => {\r\n  return (\r\n    <>\r\n      <option hidden value=\"\">\r\n        Select option ...\r\n      </option>\r\n      {field.map((value) => (\r\n        <option value={value} key={uuid()}>\r\n          {value}\r\n        </option>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport const setOf = (array) => {\r\n  const set = [];\r\n  array.forEach((arr) => {\r\n    if (!set.find((res) => res.value === arr.value)) set.push(arr);\r\n  });\r\n  return set; // array of unique objects by their .value\r\n};\r\n\r\nexport const emptyCombination = (combination) => {\r\n  return comboFields.every((field) => combination[field].length === 0);\r\n};\r\n\r\nexport const prepareCombinations = (combinations) => {\r\n  return combinations.map((c) => {\r\n    const combination = {};\r\n    comboFieldsSingular.forEach((field) => {\r\n      combination[field] = {\r\n        value: c[`${field}_id`],\r\n        label: c[`${field}_name`],\r\n      };\r\n    });\r\n    return combination;\r\n  });\r\n};\r\n\r\nexport const getOptionsForSelect = (pairs) => {\r\n  return {\r\n    branches: pairs.branches?.map((n) => {\r\n      return { value: n.id, label: n.name };\r\n    }),\r\n    divisions: pairs.divisions?.map((n) => {\r\n      return { value: n.id, label: n.name };\r\n    }),\r\n    departments: pairs.departments?.map((n) => {\r\n      return { value: n.id, label: n.name };\r\n    }),\r\n    cities: pairs.cities?.map((n) => {\r\n      return { value: n.id, label: n.name };\r\n    }),\r\n  };\r\n};\r\n\r\nexport const resolveFilter = (f) => {\r\n  return {\r\n    branch: f.branches.map((v) => v.value).join(\",\"),\r\n    city: f.cities.map((v) => v.value).join(\",\"),\r\n    department: f.departments.map((v) => v.value).join(\",\"),\r\n    division: f.divisions.map((v) => v.value).join(\",\"),\r\n  };\r\n};\r\n\r\nfunction getState(sign, require_superior) {\r\n  if (sign.cancel) return \"-\";\r\n  // console.log(sign.e_date.Valid)\r\n  let state = sign.e_date.Valid ? \"\" : \"e\";\r\n  if (require_superior && !sign.s_date.Valid) {\r\n    state += \"s\";\r\n  }\r\n  return state;\r\n}\r\n\r\nexport const prepareSMData = (docs) => {\r\n  console.log(\"prepareSMData\", docs);\r\n  return docs.map((doc) => {\r\n    const sortedSignatures = sortSignaturesByEmployeeName(doc.signatures);\r\n    return {\r\n      id: doc.id,\r\n      name: doc.name,\r\n      require_superior: doc.require_superior,\r\n      deadline: doc.deadline.Time,\r\n      employees: sortedSignatures.map((sign) => {\r\n        return {\r\n          id: sign.employee.id,\r\n          sign_id: sign.id,\r\n          state: getState(sign, doc.require_superior),\r\n        };\r\n      }),\r\n    };\r\n  });\r\n};\r\n\r\nconst sortSignaturesByEmployeeName = (signatures) => {\r\n  return signatures\r\n    .filter((sign) => sign.employee !== null)\r\n    .sort(function (a, b) {\r\n      if (a.employee.last_name < b.employee.last_name) {\r\n        return -1;\r\n      }\r\n      if (a.employee.last_name > b.employee.last_name) {\r\n        return 1;\r\n      }\r\n      return 0;\r\n    });\r\n};\r\n\r\nexport const getAssignedTo = (document, pairs, employees) => {\r\n  if (!document) return [];\r\n\r\n  return document.assigned_to.split(\"&\").map((e) => {\r\n    const [combs, remEms, _] = e.split(\"#\");\r\n    const values = combs.split(\"; \");\r\n    const combination = { id: uuid() };\r\n\r\n    comboFields.forEach((field, i) => {\r\n      combination[field] = [];\r\n      if (values[i] !== \"x\") {\r\n        const ids = values[i].split(\",\");\r\n        ids.forEach((id) => {\r\n          combination[field].push({\r\n            value: id,\r\n            label: getFieldName(field, id, pairs),\r\n          });\r\n        });\r\n      }\r\n    });\r\n    combination.removedEmployees = [];\r\n    if (!remEms) return combination;\r\n\r\n    const e_ids = remEms.split(\",\");\r\n    e_ids.forEach((id) => {\r\n      combination.removedEmployees.push({\r\n        value: id,\r\n        label: getEmployeeName(id, employees, pairs.departments),\r\n      });\r\n    });\r\n    return combination;\r\n  });\r\n};\r\n\r\nexport const getFieldName = (field, id, pairs) => {\r\n  return pairs[field]?.find((f) => f.id == id)?.name || \"unknown\";\r\n};\r\n\r\nexport const getEmployeeName = (id, employees, departments) => {\r\n  if (!employees) return \"unknown\";\r\n  const e = employees.find((e) => e.id.toString() === id);\r\n  if (!e) return \"unknown\";\r\n  return getEmployeeLabel(e, departments);\r\n};\r\n\r\nexport const getSingularFieldName = (field) => {\r\n  switch (field) {\r\n    case \"branches\":\r\n      return \"branch\";\r\n    case \"divisions\":\r\n      return \"division\";\r\n    case \"departments\":\r\n      return \"department\";\r\n    case \"cities\":\r\n      return \"city\";\r\n  }\r\n};\r\n\r\nexport const getEmployeesNames = (formData, employees) => {\r\n  employees = sortEmployeesByName(employees);\r\n  if (!formData || !formData.employees) return [];\r\n  return formData.employees\r\n    .split(\",\")\r\n    .map((a) => employees.find((e) => e.id == a));\r\n};\r\n\r\nexport const prefillDocumentForm = (data) => {\r\n  if (!data) return {};\r\n  return {\r\n    ...data,\r\n    release_date: getDateString(data.release_date),\r\n    deadline: getDateString(data.deadline),\r\n  };\r\n};\r\n\r\nexport const prefillTrainingForm = (data) => {\r\n  if (!data) return {};\r\n  return {\r\n    ...data,\r\n    date: getDateString(data.date),\r\n    deadline: getDateString(data.deadline),\r\n  };\r\n};\r\n\r\nexport const correctTrainingFormData = (data, attendees) => {\r\n  return {\r\n    ...data,\r\n    date: getDateObject(data.date),\r\n    deadline: getDateObject(data.deadline),\r\n    employees: attendees.map((a) => a.id).join(\",\"),\r\n  };\r\n};\r\n\r\nexport const correctDocumentFormData = (data, combinations) => {\r\n  console.log(\"correctDocumentFormData\", data);\r\n  return {\r\n    ...data,\r\n    release_date: getDateObject(data.release_date),\r\n    deadline: getDateObject(data.deadline),\r\n    assigned_to: resolveCombinations(combinations),\r\n  };\r\n};\r\n\r\nconst getDateObject = (date) => {\r\n  return {\r\n    Time: date + \"T00:00:00Z\",\r\n    Valid: true,\r\n  };\r\n};\r\n\r\nconst getDateString = (date) => date.Time.substr(0, 10);\r\n\r\nexport const resolveCombinations = (combinations) => {\r\n  const n = combinations.map((combination) => {\r\n    let c_string = comboFields\r\n      .map((field) => {\r\n        const values = combination[field];\r\n        console.log(\"values\", values);\r\n        if (!values.length) return \"x\";\r\n        return values.map((c) => c.value).join(\",\");\r\n      })\r\n      .join(\"; \");\r\n    const r_string = combination.removedEmployees.map((c) => c.value).join(\",\");\r\n    return `${c_string}#${r_string}#`;\r\n  });\r\n  console.log(n);\r\n  return n.join(\"&\");\r\n};\r\n\r\nexport const sortEmployeesByName = (employees) => {\r\n  // employees = [...employees];\r\n  return employees.sort(function (a, b) {\r\n    if (a.last_name < b.last_name) {\r\n      return -1;\r\n    }\r\n    if (a.last_name > b.last_name) {\r\n      return 1;\r\n    }\r\n    return 0;\r\n  });\r\n};\r\n\r\nexport const prepareLectors = (lectors) => {\r\n  return lectors.map((l) => {\r\n    return {\r\n      value: l,\r\n      label: l,\r\n    };\r\n  });\r\n};\r\n\r\nexport const prepareEmployees = (employees, departments) => {\r\n  employees = sortEmployeesByName(employees);\r\n  return employees.map((e) => {\r\n    return {\r\n      value: e.id,\r\n      label: getEmployeeLabel(e, departments),\r\n    };\r\n  });\r\n};\r\n\r\nexport const getEmployeeLabel = (employee, departments) => {\r\n  const { id, first_name, last_name, department_id } = employee;\r\n  const dep = departments.find((d) => d.id === department_id)?.name;\r\n  return `${first_name} ${last_name} [${id}, ${dep}]`;\r\n};\r\n\r\nexport const prepareFoundDocs = (found, pairs) => {\r\n  if (!found.length) return [];\r\n\r\n  function getLabels(cs, field) {\r\n    const labels = cs.map((c) => c[field].map((f) => f.label));\r\n    const unique = [...new Set(labels.flat())];\r\n    // if (unique[0] === undefined) {\r\n    //   return \"*\";\r\n    // }\r\n    return unique.join(\", \");\r\n  }\r\n\r\n  return found.map((doc) => {\r\n    const doc_cs = getAssignedTo(doc, pairs);\r\n    return {\r\n      ...doc,\r\n      branches: getLabels(doc_cs, \"branches\"),\r\n      cities: getLabels(doc_cs, \"cities\"),\r\n      divisions: getLabels(doc_cs, \"divisions\"),\r\n      departments: getLabels(doc_cs, \"departments\"),\r\n    };\r\n  });\r\n};\r\n\r\nexport const getDate = (date) => {\r\n  const f = format_date(date);\r\n  return f === \"01.01.0001\" ? \"-\" : f;\r\n};\r\n\r\n// fetch\r\nexport const getFetch = (url) => {\r\n  return fetch(proxy_url + url, {\r\n    method: \"GET\",\r\n  }).then((result) => result.json());\r\n};\r\n\r\nexport const postFetch = (url, body) => {\r\n  console.log(\"body\", body);\r\n  return fetch(proxy_url + url, {\r\n    method: \"POST\",\r\n    body: body,\r\n  }).then((result) => result.json());\r\n};\r\n\r\nexport const reloadPage = () => window.location.reload(false);\r\nexport const redirectTo = (path) => window.location.replace(path);\r\n","import BootstrapTable from \"react-bootstrap-table-next\";\r\nimport React from \"react\";\r\n\r\nconst MyBootstrapTable = ({\r\n  title,\r\n  data,\r\n  columns,\r\n  order,\r\n  expandRow,\r\n  classes,\r\n  ...rest\r\n}) => {\r\n  const TableHeader = () => {\r\n    if (!title) return null;\r\n    return (\r\n      <h5\r\n        style={{\r\n          borderRadius: \"0.25em\",\r\n          textAlign: \"center\",\r\n          border: \"2px solid gray\",\r\n          margin: \"2% 0\",\r\n          padding: \"0.5em\",\r\n          marginTop: \"1.5%\",\r\n        }}\r\n      >\r\n        {title}\r\n      </h5>\r\n    );\r\n  };\r\n\r\n  const EmptyTable = () => <i>Table is empty</i>;\r\n\r\n  return (\r\n    <>\r\n      <TableHeader />\r\n      <BootstrapTable\r\n        keyField=\"id\"\r\n        hover\r\n        classes={classes}\r\n        data={data}\r\n        columns={columns}\r\n        noDataIndication={EmptyTable}\r\n        defaultSorted={order}\r\n        expandRow={expandRow}\r\n        {...rest}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MyBootstrapTable;\r\n","import React from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { isSuperior, require_superior } from \"../../utils/functions\";\r\nimport { FormattedEmployeeDate } from \"../../utils/Formatter\";\r\n\r\nexport const MissedBtn = (\r\n  cell,\r\n  row,\r\n  index,\r\n  { setModalInfo, setShowModal, asSuperior }\r\n) => {\r\n  const handleClick = () => {\r\n    if (require_superior(row) && isSuperior(row)) {\r\n      return;\r\n    }\r\n    setShowModal(true);\r\n    setModalInfo({\r\n      ...row,\r\n      asSuperior: asSuperior,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Button onClick={handleClick} size=\"sm\" className=\"btn-block\">\r\n      {require_superior(row) && isSuperior(row) ? \"Details\" : \"Sign\"}\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport const SignedBtn = (cell, row) => {\r\n  return require_superior(row) && isSuperior(row) ? (\r\n    <Button size=\"sm\">Details</Button>\r\n  ) : (\r\n    FormattedEmployeeDate(cell, row.signatures[0])\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\n\r\nexport const FetchLoading = () => <Spinner animation=\"border\" className=\"m-5\"/>\r\nexport const FetchError = ({e}) => <h6 className=\"p-5\">{e}</h6>","import React, { useEffect, useState } from \"react\";\r\nimport { proxy_url } from \"./data\";\r\n\r\n/** Universal fetch with GET method and error and loading state */\r\nconst useDataApi = (url) => {\r\n  const [data, setData] = useState();\r\n  const [error, setError] = useState();\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n\r\n  useEffect(() => {\r\n    console.log(\"url\", url);\r\n    fetch(proxy_url +url, {\r\n      method: \"GET\",\r\n    })\r\n      .then((response) => response.json())\r\n      .then(\r\n        (res) => {\r\n          setIsLoaded(true);\r\n          setData(res);\r\n        },\r\n        (error) => {\r\n          setIsLoaded(true);\r\n          setError(error);\r\n        }\r\n      );\r\n  }, []); // Runs once\r\n\r\n  return [data, isLoaded, error];\r\n};\r\n\r\nexport default useDataApi;\r\n","import React from \"react\";\r\nimport { Button, Modal } from \"react-bootstrap\";\r\n\r\nconst ConfirmModal = ({ showModal, setShowModal, modalInfo, handleAccept }) => {\r\n  console.log(modalInfo);\r\n  const closeModal = () => setShowModal(false);\r\n\r\n  const onAccept = () => {\r\n    handleAccept();\r\n    closeModal();\r\n  };\r\n\r\n  let bodyText = \"\";\r\n  if (modalInfo.body) {\r\n    bodyText = modalInfo.body;\r\n  } else if (modalInfo.asSuperior) {\r\n    const employeeName = () =>\r\n      `${modalInfo.employee.first_name} ${modalInfo.employee.last_name}`;\r\n    bodyText = `Do you really want do sign for ${employeeName()}`;\r\n  } else {\r\n    bodyText = `Do you really want do sign the document named ${modalInfo.name}`;\r\n  }\r\n\r\n  return (\r\n    <Modal show={showModal} onHide={closeModal} centered>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Confirm</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <p>{bodyText}</p>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"danger\" onClick={onAccept}>\r\n          Accept\r\n        </Button>\r\n        <Button variant=\"secondary\" onClick={closeModal}>\r\n          Close\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ConfirmModal;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport MyBootstrapTable from \"../components/Tables/MyBootstrapTable\";\r\nimport {\r\n  documentsToSignColumns,\r\n  documentsToSignExpandColumns,\r\n  trainingsToSignColumns,\r\n} from \"./columns\";\r\nimport {\r\n  getUser, isSuperior,\r\n  nonExpandableDocs,\r\n  orderBy,\r\n  recordType,\r\n  successResponse,\r\n} from \"../utils/functions\";\r\nimport { FetchError, FetchLoading } from \"../components/FetchComponents\";\r\nimport useDataApi from \"../utils/useDataApi\";\r\nimport ConfirmModal from \"../components/Modals/ConfirmModal\";\r\nimport { proxy_url } from \"../utils/data\";\r\n\r\nconst RecordsToSignPage = () => {\r\n  const URL = `/unsigned/signatures/${getUser().id}`;\r\n  const [data, isLoaded, error] = useDataApi(URL);\r\n\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [modalInfo, setModalInfo] = useState([]);\r\n\r\n  const [trainings, setTrainings] = useState([]);\r\n  const [documents, setDocuments] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      data.documents.forEach(doc => {\r\n        if (isSuperior(doc)) {\r\n          // toto je hack, lebo z db mi pride vzdy jeden podpis s empty employee,\r\n          // nechavam ho ale preto, lebo sa da podla neho zistit, ci je require_superior a zaroven isSuperior\r\n          doc.signatures = doc.signatures.filter(sign => sign.employee && sign.employee_id !== sign.superior_id)\r\n        }\r\n      })\r\n      setDocuments(data.documents);\r\n      setTrainings(data.trainings);\r\n    }\r\n  }, [data]);\r\n\r\n  if (error) {\r\n    return <FetchError e={`Error: ${error.message}`} />;\r\n  } else if (!isLoaded || !data) {\r\n    return <FetchLoading />;\r\n  }\r\n\r\n  const handleAccept = () => {\r\n    if (modalInfo.asSuperior) {\r\n      signAsSuperior(modalInfo.id);\r\n    } else {\r\n      signAsEmployee(modalInfo.signatures[0].id);\r\n    }\r\n    setShowModal(false);\r\n  };\r\n\r\n  /** Update sign date to Date.now()\r\n   * @param url:\r\n   *    '/sign' update employee date\r\n   *    '/sign/superior' update superior date\r\n   * @param id: id of the document_signature\r\n   * */\r\n  const fetchSign = (url, id) => {\r\n    return fetch(proxy_url +url, {\r\n      method: \"POST\",\r\n      body: new URLSearchParams(`id=${id}`),\r\n    });\r\n  };\r\n\r\n  const signAsEmployee = (sign_id) => {\r\n    const record_type = recordType(modalInfo);\r\n    fetchSign(`/sign/${record_type}`, sign_id).then((res) => {\r\n      if (successResponse(res)) {\r\n        if (record_type === \"training\") updateTrainings(sign_id);\r\n        else updateEmployeeDocs(sign_id);\r\n      }\r\n    });\r\n  };\r\n\r\n  const signAsSuperior = (signature_id) => {\r\n    fetchSign(\"/sign/superior\", signature_id).then((res) => {\r\n      if (successResponse(res)) {\r\n        updateSuperiorDocs(signature_id);\r\n      }\r\n    });\r\n  };\r\n\r\n  const updateTrainings = (signature_id) => {\r\n    setTrainings(trainings.filter((t) => t.signatures[0].id !== signature_id));\r\n  };\r\n\r\n  const updateEmployeeDocs = (signature_id) => {\r\n    setDocuments(documents.filter((d) => d.signatures[0].id !== signature_id));\r\n  };\r\n\r\n  const updateSuperiorDocs = (signature_id) => {\r\n    const update = documents.map((d) => {\r\n      return {\r\n        ...d,\r\n        signatures: d.signatures.filter((s) => s.id !== signature_id),\r\n      };\r\n    });\r\n    setDocuments(update.filter((d) => d.signatures.length));\r\n  };\r\n\r\n  const trn_columns = trainingsToSignColumns(setModalInfo, setShowModal);\r\n  const doc_columns = documentsToSignColumns(setModalInfo, setShowModal);\r\n  const expandColumns = documentsToSignExpandColumns(\r\n    setModalInfo,\r\n    setShowModal\r\n  );\r\n\r\n  const expandRow = {\r\n    onlyOneExpanding: true,\r\n    nonExpandable: nonExpandableDocs(documents),\r\n    renderer: (cell) => (\r\n      <MyBootstrapTable\r\n        classes=\"inner-table\"\r\n        data={cell.signatures}\r\n        columns={expandColumns}\r\n        order={orderBy(\"employee.last_name\")}\r\n      />\r\n    ),\r\n  };\r\n\r\n  console.log(data);\r\n\r\n  return (\r\n    <>\r\n      {/* DOCUMENTS */}\r\n      <MyBootstrapTable\r\n        title=\"Documents to sign\"\r\n        data={documents}\r\n        columns={doc_columns}\r\n        order={orderBy(\"deadline.Time\")}\r\n        expandRow={expandRow}\r\n      />\r\n      {/* TRAININGS */}\r\n      <MyBootstrapTable\r\n        title=\"Trainings to sign\"\r\n        data={trainings}\r\n        columns={trn_columns}\r\n        order={orderBy(\"deadline.Time\")}\r\n      />\r\n      <ConfirmModal\r\n        showModal={showModal}\r\n        setShowModal={setShowModal}\r\n        modalInfo={modalInfo}\r\n        handleAccept={handleAccept}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RecordsToSignPage;\r\n","import {\r\n  FormattedDate,\r\n  FormattedDeadline,\r\n  FormattedEmployeeDate,\r\n  FormattedRelease,\r\n  FullName,\r\n  NameWithLink,\r\n} from \"../utils/Formatter\";\r\nimport { MissedBtn } from \"../components/Buttons/TableBtns\";\r\nimport { buttonColumn } from \"../utils/functions\";\r\n\r\nexport const trainingsToSignColumns = (setModalInfo, setShowModal) => [\r\n  {\r\n    dataField: \"name\",\r\n    text: \"Name\",\r\n    sort: true,\r\n  },\r\n  {\r\n    dataField: \"date.Time\",\r\n    text: \"Date\",\r\n    sort: true,\r\n    formatter: FormattedDate,\r\n  },\r\n  {\r\n    dataField: \"deadline.Time\",\r\n    text: \"Deadline\",\r\n    sort: true,\r\n    formatter: FormattedDeadline,\r\n  },\r\n  {\r\n    ...buttonColumn(),\r\n    formatter: MissedBtn,\r\n    formatExtraData: {\r\n      setModalInfo: setModalInfo,\r\n      setShowModal: setShowModal,\r\n    },\r\n  },\r\n];\r\n\r\nexport const documentsToSignColumns = (setModalInfo, setShowModal) => [\r\n  {\r\n    dataField: \"name\",\r\n    text: \"Name\",\r\n    sort: true,\r\n    formatter: NameWithLink,\r\n  },\r\n  {\r\n    dataField: \"release_date.Time\",\r\n    text: \"Release\",\r\n    sort: true,\r\n    formatter: FormattedRelease,\r\n  },\r\n  {\r\n    dataField: \"deadline.Time\",\r\n    text: \"Deadline\",\r\n    sort: true,\r\n    formatter: FormattedDeadline,\r\n  },\r\n  {\r\n    ...buttonColumn(),\r\n    formatter: MissedBtn,\r\n    formatExtraData: {\r\n      setModalInfo: setModalInfo,\r\n      setShowModal: setShowModal,\r\n      asSuperior: false,\r\n    },\r\n  },\r\n];\r\n\r\nexport const documentsToSignExpandColumns = (setModalInfo, setShowModal) => [\r\n  {\r\n    dataField: \"employee.id\",\r\n    text: \"Employee ID\",\r\n    sort: true,\r\n  },\r\n  {\r\n    dataField: \"employee.last_name\",\r\n    text: \"Full name\",\r\n    sort: true,\r\n    formatter: FullName,\r\n  },\r\n  {\r\n    dataField: \"e_date.Time\",\r\n    text: \"Sign Date\",\r\n    sort: true,\r\n    formatter: FormattedEmployeeDate,\r\n  },\r\n  {\r\n    ...buttonColumn(),\r\n    formatter: MissedBtn,\r\n    formatExtraData: {\r\n      setModalInfo: setModalInfo,\r\n      setShowModal: setShowModal,\r\n      asSuperior: true,\r\n    },\r\n  },\r\n];\r\n","import Alert from \"react-bootstrap/Alert\";\r\n\r\nexport const CustomAlert = ({ notification }) => {\r\n  if (!notification) return null;\r\n  return <Alert variant={notification.variant}>{notification.body}</Alert>;\r\n};\r\n","export const wording = {\r\n  sk: {\r\n    loginPage: {\r\n      header: \"Prihlasovanie\",\r\n      login: \"Login\",\r\n      password: \"Heslo\",\r\n      submit: \"Prihlásiť sa\",\r\n      notification: {\r\n        wrongLogin: \"Zlé prihlasovacie údaje\",\r\n        wrongCard: \"Nepodarilo sa prihlásenie kartou\",\r\n      },\r\n    },\r\n    navigation: {\r\n      login: \"Prihlasit sa\",\r\n      recordsToSign: \"Na podpísanie\",\r\n      signedRecords: \"Podpísané\",\r\n      addRecord: \"Pridať\",\r\n      savedRecords: \"Uložené\",\r\n      finder: \"Vyhľadávanie\",\r\n      settings: \"Nastavenia\",\r\n      logout: \"Odhlásiť sa\",\r\n    },\r\n  },\r\n  en: {\r\n    loginPage: {\r\n      header: \"Login\",\r\n      login: \"Login\",\r\n      password: \"Password\",\r\n      submit: \"Login\",\r\n      notification: {\r\n        wrongLogin: \"Wrong login input\",\r\n        wrongCard: \"Wrong card input\",\r\n      },\r\n    },\r\n    navigation: {\r\n      login: \"Login\",\r\n      recordsToSign: \"To sign\",\r\n      signedRecords: \"Signed\",\r\n      addRecord: \"Add new\",\r\n      savedRecords: \"Saved\",\r\n      finder: \"Finder\",\r\n      settings: \"Settings\",\r\n      logout: \"Logout\",\r\n    },\r\n  },\r\n};\r\n","import React from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Button, ButtonGroup, Form, Container } from \"react-bootstrap\";\r\nimport { CustomAlert } from \"../components/CustomAlert\";\r\nimport { wording } from \"../utils/wording\";\r\n\r\nconst LoginForm = ({ onSubmit, language, setLanguage, notification }) => {\r\n  const { register, handleSubmit } = useForm();\r\n\r\n  const active = (id) => language === id;\r\n  const changeLanguage = (e) => setLanguage(e.target.id);\r\n\r\n  // TODO https://www.npmjs.com/package/react-i18next\r\n  const { header, login, password, submit } = wording[language].loginPage;\r\n\r\n  return (\r\n    <Container className=\"login-container\">\r\n      <Form onSubmit={handleSubmit(onSubmit)}>\r\n        {/* HEADER */}\r\n        <h3 align=\"center\">{header}</h3>\r\n        {/* LANGUAGE BTN */}\r\n        <ButtonGroup\r\n          onClick={changeLanguage}\r\n          className=\"container-fluid p-0 mt-4 mb-5 btn-group\"\r\n        >\r\n          <Button id=\"sk\" active={active(\"sk\")}>\r\n            Slovak\r\n          </Button>\r\n          <Button id=\"cz\" active={active(\"cz\")} disabled>\r\n            Czech\r\n          </Button>\r\n          <Button id=\"en\" active={active(\"en\")}>\r\n            English\r\n          </Button>\r\n          <Button id=\"hu\" active={active(\"hu\")} disabled>\r\n            Hungary\r\n          </Button>\r\n        </ButtonGroup>\r\n        {/* NAME */}\r\n        <Form.Group>\r\n          <Form.Label>{login}</Form.Label>\r\n          <Form.Control name=\"login\" ref={register} required />\r\n        </Form.Group>\r\n        {/* PASS */}\r\n        <Form.Group>\r\n          <Form.Label>{password}</Form.Label>\r\n          <Form.Control\r\n            name=\"password\"\r\n            type=\"password\"\r\n            ref={register}\r\n            required\r\n          />\r\n        </Form.Group>\r\n        {/* ALERT */}\r\n        {notification && <CustomAlert notification={notification} />}\r\n        {/* SUBMIT BTN */}\r\n        <Button type=\"submit\" variant=\"dark\" className=\"btn-block\">\r\n          {submit}\r\n        </Button>\r\n      </Form>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","const CryptoJS = require(\"crypto-js\");\r\n\r\nexport const changeString  = (inputText) => {\r\n    inputText = inputText.toString().toLowerCase()\r\n    const howMany = inputText.charCodeAt(0)%12+7\r\n    const sha = CryptoJS.HmacSHA256(inputText.repeat(howMany), 'Doli-Doli');\r\n    let result = sha.toString(CryptoJS.enc.Base64)\r\n    result = encodeURIComponent(result.toString())\r\n    console.log(result)\r\n    return result\r\n};","import React, { useEffect, useState } from \"react\";\r\nimport { Redirect } from \"react-router\";\r\nimport LoginForm from \"./LoginForm\";\r\nimport { badMsg, getUser, reloadPage } from \"../utils/functions\";\r\nimport { wording } from \"../utils/wording\";\r\nimport { proxy_url } from \"../utils/data\";\r\nimport { changeString } from \"./secret\";\r\n\r\nconst LoginPage = () => {\r\n  const [notification, setNotification] = useState();\r\n  const [language, setLanguage] = useState(\"sk\");\r\n\r\n  const {\r\n    notification: { wrongLogin, wrongCard },\r\n  } = wording[language].loginPage;\r\n\r\n  let cardInput = \"\";\r\n  const maxCardInputTimeDifference = 40;\r\n  const cardInputLength = 10;\r\n  let t = cardInputTimeout();\r\n  clearTimeout(t);\r\n\r\n  function cardInputTimeout() {\r\n    return setTimeout(checkInput, maxCardInputTimeDifference);\r\n  }\r\n\r\n  function isLetter(e) {\r\n    let aKeycode = 65;\r\n    let zKeycode = 90;\r\n    return e.keyCode >= aKeycode && e.keyCode <= zKeycode;\r\n  }\r\n\r\n  function isNumber(e) {\r\n    let zeroKeycode = 48;\r\n    let nineKeycode = 57;\r\n    return e.keyCode >= zeroKeycode && e.keyCode <= nineKeycode;\r\n  }\r\n\r\n  function isValuable(e) {\r\n    return isLetter(e) || isNumber(e);\r\n  }\r\n\r\n  function resetCardInput() {\r\n    cardInput = \"\";\r\n  }\r\n\r\n  function checkInput() {\r\n    if (cardInput.length === cardInputLength) {\r\n      findByCard(cardInput);\r\n    }\r\n    resetCardInput();\r\n  }\r\n\r\n  const event = (e) => {\r\n    let engInput = String.fromCharCode(e.keyCode).toLowerCase();\r\n    if (isValuable(e)) {\r\n      cardInput += engInput;\r\n      clearTimeout(t);\r\n      t = cardInputTimeout();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.addEventListener(\"keydown\", event);\r\n    return () => document.removeEventListener(\"keydown\", event); // cleanup\r\n  });\r\n\r\n  const setUser = (data) => {\r\n    const user = {\r\n      id: data.id,\r\n      role: data.role,\r\n      first_name: data.first_name,\r\n      last_name: data.last_name,\r\n    };\r\n    // console.log(data);\r\n    sessionStorage.setItem(\"user\", JSON.stringify(user));\r\n    reloadPage();\r\n  };\r\n\r\n  const onSubmit = (data) => {\r\n    fetch(proxy_url + \"/auth/login\", {\r\n      method: \"POST\",\r\n      body: new URLSearchParams(\r\n        `login=${data.login}&password=${changeString(data.password)}`\r\n      ),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setUser(data);\r\n      })\r\n      .catch(() => setNotification(badMsg(wrongLogin)));\r\n  };\r\n\r\n  const findByCard = (input) => {\r\n    fetch(proxy_url + \"/auth/kiosk\", {\r\n      method: \"POST\",\r\n      body: new URLSearchParams(`card=${input}`),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setUser(data);\r\n      })\r\n      .catch(() => setNotification(badMsg(wrongCard)));\r\n  };\r\n\r\n  if (getUser()) {\r\n    return <Redirect to=\"/records-to-sign\" />;\r\n  }\r\n  return (\r\n    <LoginForm\r\n      onSubmit={onSubmit}\r\n      language={language}\r\n      setLanguage={setLanguage}\r\n      notification={notification}\r\n    />\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n","import React from \"react\";\r\nimport { Redirect } from \"react-router\";\r\nimport { removeUser } from \"../utils/functions\";\r\n\r\nconst LogoutPage = () => {\r\n  removeUser();\r\n\r\n  return <Redirect to=\"/login\" />;\r\n};\r\n\r\nexport default LogoutPage;\r\n","import React from \"react\";\r\nimport { getUser, nonExpandableDocs, orderBy } from \"../utils/functions\";\r\nimport useDataApi from \"../utils/useDataApi\";\r\nimport { FetchError, FetchLoading } from \"../components/FetchComponents\";\r\nimport MyBootstrapTable from \"../components/Tables/MyBootstrapTable\";\r\nimport {\r\n  signedDocumentsColumns,\r\n  signedDocumentsExpandColumns,\r\n  signedTrainingsExpandColumns,\r\n} from \"./columns\";\r\n\r\nconst SignedRecordsPage = () => {\r\n  const URL = `/signed/signatures/${getUser().id}`;\r\n  const [data, isLoaded, error] = useDataApi(URL);\r\n\r\n  if (error) {\r\n    return <FetchError e={`Error: ${error.message}`} />;\r\n  } else if (!isLoaded || !data) {\r\n    return <FetchLoading />;\r\n  }\r\n  console.log(\"signed\", data);\r\n  const documentsColumns = signedDocumentsColumns();\r\n  const expandColumns = signedDocumentsExpandColumns();\r\n\r\n  const trainingsColumns = signedTrainingsExpandColumns();\r\n\r\n  const expandRow = {\r\n    onlyOneExpanding: true,\r\n    nonExpandable: nonExpandableDocs(data.documents),\r\n    renderer: (cell) => (\r\n      <MyBootstrapTable\r\n        classes=\"inner-table\"\r\n        data={cell.signatures}\r\n        columns={expandColumns}\r\n        order={orderBy(\"employee.last_name\")}\r\n      />\r\n    ),\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <MyBootstrapTable\r\n        title=\"Signed Documents\"\r\n        data={data.documents}\r\n        columns={documentsColumns}\r\n        expandRow={expandRow}\r\n        order={orderBy(\"release_date.Time\", \"desc\")}\r\n      />\r\n      <MyBootstrapTable\r\n        title=\"Signed Trainings\"\r\n        data={data.trainings}\r\n        columns={trainingsColumns}\r\n        order={orderBy(\"date.Time\", \"desc\")}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SignedRecordsPage;\r\n","import {\r\n  FormattedDate,\r\n  FormattedEmployeeDate,\r\n  FormattedRelease,\r\n  FormattedSuperiorDate,\r\n  FormattedTrainingDate,\r\n  FullName,\r\n  NameWithLink,\r\n} from \"../utils/Formatter\";\r\nimport { SignedBtn } from \"../components/Buttons/TableBtns\";\r\n\r\nexport const signedDocumentsColumns = () => [\r\n  {\r\n    dataField: \"name\",\r\n    text: \"Name\",\r\n    sort: true,\r\n    formatter: NameWithLink,\r\n  },\r\n  {\r\n    dataField: \"release_date.Time\",\r\n    text: \"Release\",\r\n    sort: true,\r\n    formatter: FormattedRelease,\r\n  },\r\n  {\r\n    dataField: \"signatures[0].e_date.Time\",\r\n    text: \"Signed date\",\r\n    sort: true,\r\n    formatter: SignedBtn,\r\n  },\r\n];\r\n\r\nexport const signedDocumentsExpandColumns = () => [\r\n  {\r\n    dataField: \"employee.id\",\r\n    text: \"Employee ID\",\r\n    sort: true,\r\n  },\r\n  {\r\n    dataField: \"employee.last_name\",\r\n    text: \"Full name\",\r\n    sort: true,\r\n    formatter: FullName,\r\n  },\r\n  {\r\n    dataField: \"e_date.Time\",\r\n    text: \"Employee Sign\",\r\n    sort: true,\r\n    formatter: FormattedEmployeeDate,\r\n  },\r\n  {\r\n    dataField: \"s_date.Time\",\r\n    text: \"My Sign\",\r\n    sort: true,\r\n    formatter: FormattedSuperiorDate,\r\n  },\r\n];\r\n\r\nexport const signedTrainingsExpandColumns = () => [\r\n  {\r\n    dataField: \"name\",\r\n    text: \"Name\",\r\n    sort: true,\r\n  },\r\n  {\r\n    dataField: \"date.Time\",\r\n    text: \"Took place\",\r\n    sort: true,\r\n    formatter: FormattedDate,\r\n  },\r\n  {\r\n    dataField: \"signatures[0].date.Time\", // always array with length of 1 [by SQL query]\r\n    text: \"Signed date\",\r\n    sort: true,\r\n    formatter: FormattedTrainingDate,\r\n  },\r\n];\r\n","import { Col, Form, Row } from \"react-bootstrap\";\r\nimport React from \"react\";\r\n\r\nconst MyFormGroup = ({\r\n  label,\r\n  name,\r\n  placeholder,\r\n  type,\r\n  register,\r\n  as,\r\n  required,\r\n}) => {\r\n  return (\r\n    <Form.Group as={Row}>\r\n      <Form.Label column sm=\"3\">\r\n        {label}\r\n      </Form.Label>\r\n      <Col>\r\n        <Form.Control\r\n          name={name}\r\n          placeholder={placeholder}\r\n          ref={register}\r\n          type={type}\r\n          as={as}\r\n          required={required}\r\n        />\r\n      </Col>\r\n    </Form.Group>\r\n  );\r\n};\r\n\r\nexport default MyFormGroup;\r\n","import React, { useContext } from \"react\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Select from \"react-select\";\r\nimport { CustomAlert } from \"../CustomAlert\";\r\nimport { PairContext } from \"../../App\";\r\nimport { getOptionsForSelect } from \"../../utils/functions\";\r\n\r\nconst CombinationForm = ({\r\n  prefill,\r\n  disabled,\r\n  employees,\r\n  combinations: cs,\r\n  combination,\r\n  setCombination,\r\n  notification,\r\n}) => {\r\n  console.log(cs);\r\n\r\n  const pairs = useContext(PairContext);\r\n  const options = getOptionsForSelect(pairs);\r\n\r\n  const handleSelect = (data, { name: field }) => {\r\n    setCombination({ ...combination, [field]: data });\r\n  };\r\n\r\n  const selector = (name, label, opt = options[name]) => (\r\n    <>\r\n      {label}\r\n      <Select\r\n        isMulti={true}\r\n        placeholder=\"\"\r\n        name={name}\r\n        options={opt}\r\n        defaultValue={prefill ? prefill[name] : []}\r\n        isDisabled={\r\n          (prefill && name !== \"removedEmployees\") || disabled.includes(name)\r\n        }\r\n        onChange={(data, e) => handleSelect(data, e)}\r\n      />\r\n      <br />\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <Col className=\"p-0\">\r\n      {selector(\"branches\", \"Branches\")}\r\n      {selector(\"divisions\", \"Divisions\")}\r\n      {selector(\"departments\", \"Departments\")}\r\n      {selector(\"cities\", \"Cities\")}\r\n      {employees && selector(\"removedEmployees\", \"Remove employees\", employees)}\r\n      {notification && <CustomAlert notification={notification} />}\r\n    </Col>\r\n  );\r\n};\r\n\r\nexport default CombinationForm;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { Button, Col, Container, Modal } from \"react-bootstrap\";\r\nimport CombinationForm from \"../Forms/CombinationForm\";\r\nimport uuid from \"react-uuid\";\r\nimport {\r\n  badMsg,\r\n  getEmployeeLabel,\r\n  getFetch,\r\n  resolveCombinations,\r\n} from \"../../utils/functions\";\r\nimport { PairContext } from \"../../App\";\r\nimport { comboFields } from \"../../utils/data\";\r\n\r\nconst CombinationModal = ({\r\n  prefill,\r\n  combinations,\r\n  setAssignedTo,\r\n  setEmptyAssign,\r\n  closeModal,\r\n}) => {\r\n  const pairs = useContext(PairContext);\r\n\r\n  const [disabled, setDisabled] = useState([]);\r\n  const [notification, setNotification] = useState();\r\n  const [employees, setEmployees] = useState();\r\n  const [combination, setCombination] = useState(\r\n    prefill\r\n      ? prefill\r\n      : {\r\n          branches: [],\r\n          divisions: [],\r\n          departments: [],\r\n          cities: [],\r\n          removedEmployees: [],\r\n        }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (prefill) {\r\n      preview();\r\n    }\r\n  }, []);\r\n\r\n  function preview() {\r\n    setDisabled(comboFields);\r\n    const assignedTo = resolveCombinations([combination]);\r\n\r\n    getFetch(`/employees/${assignedTo}`)\r\n      .then((data) => {\r\n        if (!data.length) {\r\n          setNotification(badMsg(\"not valid combination\"));\r\n          return;\r\n        }\r\n        resolveEmployees(data);\r\n      })\r\n      .catch((e) => {\r\n        setNotification(badMsg(\"not valid combination\"));\r\n        console.log(\"Errrrrrrrrrrror\", e);\r\n      });\r\n  }\r\n\r\n  const resolveEmployees = (data) => {\r\n    setEmployees(\r\n      data.map((d) => {\r\n        return {\r\n          value: d.id,\r\n          label: getEmployeeLabel(d, pairs.departments),\r\n        };\r\n      })\r\n    );\r\n  };\r\n\r\n  const save = () => {\r\n    setAssignedTo((prev) => {\r\n      return prev.map((c) => {\r\n        if (c.id === prefill?.id) {\r\n          return { ...combination, id: uuid() };\r\n        }\r\n        return c;\r\n      });\r\n    });\r\n\r\n    closeModal();\r\n  };\r\n\r\n  const add = () => {\r\n    const assignedTo = resolveCombinations([combination]);\r\n    getFetch(`/employees/${assignedTo}`)\r\n      .then((data) => {\r\n        if (!data.length) {\r\n          setNotification(badMsg(\"not valid combination\"));\r\n          return;\r\n        }\r\n\r\n        setNotification(undefined);\r\n        setEmptyAssign([false]);\r\n\r\n        setAssignedTo((prevState) => {\r\n          return [...prevState, { ...combination, id: uuid() }];\r\n        });\r\n\r\n        closeModal();\r\n      })\r\n      .catch((e) => {\r\n        setNotification(badMsg(\"not valid combination\"));\r\n        console.log(\"Errrrrrrrrrrror\", e);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Modal show={true} onHide={closeModal} centered>\r\n      <Container className=\"pt-3 pb-3 pl-5 pr-5\">\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Add new combination</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <CombinationForm\r\n            prefill={prefill}\r\n            disabled={disabled}\r\n            employees={employees}\r\n            combinations={combinations}\r\n            combination={combination}\r\n            setCombination={setCombination}\r\n            notification={notification}\r\n            setNotification={setNotification}\r\n          />\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Col className=\"text-center\">\r\n            {prefill ? (\r\n              <Button onClick={save} size=\"sm\" className=\"mr-2\">\r\n                Save\r\n              </Button>\r\n            ) : (\r\n              <>\r\n                <Button onClick={preview} size=\"sm\" className=\"mr-2\">\r\n                  Preview\r\n                </Button>\r\n                <Button onClick={add} size=\"sm\" className=\"mr-2\">\r\n                  Add\r\n                </Button>\r\n              </>\r\n            )}\r\n            <Button onClick={closeModal} variant=\"secondary\" size=\"sm\">\r\n              close\r\n            </Button>\r\n          </Col>\r\n        </Modal.Footer>\r\n      </Container>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default CombinationModal;\r\n","import React, { useState } from \"react\";\r\nimport { Plus, XSquare, Pencil } from \"react-bootstrap-icons\";\r\nimport CombinationModal from \"../Modals/CombinationModal\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { buttonColumn } from \"../../utils/functions\";\r\nimport { OverlayTrigger, Tooltip } from \"react-bootstrap\";\r\nimport MyBootstrapTable from \"./MyBootstrapTable\";\r\n\r\nconst Combinations = ({\r\n  combinations,\r\n  assignedTo,\r\n  setAssignedTo,\r\n  setEmptyAssign,\r\n}) => {\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [prefill, setPrefill] = useState();\r\n\r\n  const openModal = () => setShowModal(true);\r\n  const closeModal = () => {\r\n    setPrefill(undefined);\r\n    setShowModal(false);\r\n  };\r\n\r\n  const EditIcon = (_, row) => {\r\n    const editCombination = (row) => {\r\n      setPrefill(row);\r\n      openModal();\r\n    };\r\n\r\n    return (\r\n      <OverlayTrigger\r\n        placement=\"right\"\r\n        overlay={\r\n          <Tooltip id=\"tooltip-right\" className=\"text-left\">\r\n            {!row.removedEmployees || !row.removedEmployees.length ? (\r\n              <p>Empty</p>\r\n            ) : (\r\n              row.removedEmployees.map((e) => <p key={e.value}>{e.label}</p>)\r\n            )}\r\n          </Tooltip>\r\n        }\r\n      >\r\n        <Pencil size=\"25\" color=\"black\" onClick={() => editCombination(row)} />\r\n      </OverlayTrigger>\r\n    );\r\n  };\r\n\r\n  const DeleteIcon = (_, row) => {\r\n    const deleteCombination = (row) => {\r\n      setAssignedTo((prevState) => {\r\n        return prevState.filter((c) => c.id !== row.id);\r\n      });\r\n    };\r\n\r\n    return (\r\n      <XSquare size=\"25\" color=\"red\" onClick={() => deleteCombination(row)} />\r\n    );\r\n  };\r\n\r\n  const AddIcon = () => (\r\n    <Button variant=\"dark\" onClick={openModal} size=\"sm\" className=\"mb-2\">\r\n      <Plus size=\"20\" color=\"white\" />\r\n      <span>add combination</span>\r\n    </Button>\r\n  );\r\n\r\n  const getLabels = (field) => <>{field?.map((f) => f.label).join(\",\")}</>;\r\n  const Branches = (_, row) => getLabels(row.branches);\r\n  const Divisions = (_, row) => getLabels(row.divisions);\r\n  const Departments = (_, row) => getLabels(row.departments);\r\n  const Cities = (_, row) => getLabels(row.cities);\r\n\r\n  const columns = [\r\n    {\r\n      dataField: \"branches\",\r\n      text: \"Branches\",\r\n      formatter: Branches,\r\n    },\r\n    {\r\n      dataField: \"divisions\",\r\n      text: \"Divisions\",\r\n      formatter: Divisions,\r\n    },\r\n    {\r\n      dataField: \"departments\",\r\n      text: \"Departments\",\r\n      formatter: Departments,\r\n    },\r\n    {\r\n      dataField: \"cities\",\r\n      text: \"Cities\",\r\n      formatter: Cities,\r\n    },\r\n    {\r\n      ...buttonColumn(\"edit\"),\r\n      formatter: EditIcon,\r\n    },\r\n    {\r\n      ...buttonColumn(\"del\"),\r\n      formatter: DeleteIcon,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <MyBootstrapTable\r\n        data={assignedTo}\r\n        columns={columns}\r\n        // horizontal scroll\r\n        wrapperClasses=\"table-responsive\"\r\n        rowClasses=\"text-nowrap\"\r\n      />\r\n      <AddIcon />\r\n      {showModal && (\r\n        <CombinationModal\r\n          prefill={prefill}\r\n          combinations={combinations}\r\n          setAssignedTo={setAssignedTo}\r\n          setEmptyAssign={setEmptyAssign}\r\n          closeModal={closeModal}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Combinations;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport MyFormGroup from \"./MyFormGroup\";\r\nimport { Form, Row, Col, Button } from \"react-bootstrap\";\r\nimport Combinations from \"../Tables/Combinations\";\r\nimport { CustomAlert } from \"../CustomAlert\";\r\nimport { proxy_url, types as t } from \"../../utils/data\";\r\nimport {\r\n  badMsg,\r\n  goodMsg,\r\n  correctDocumentFormData,\r\n  getSelectOptions,\r\n  prefillDocumentForm,\r\n  successResponse,\r\n  getAssignedTo,\r\n  prepareCombinations,\r\n  getFormID,\r\n} from \"../../utils/functions\";\r\nimport { PairContext } from \"../../App\";\r\nimport ConfirmModal from \"../Modals/ConfirmModal\";\r\n\r\nconst DocumentForm = ({ setRecords, formData, setFormData, actual }) => {\r\n  const pairs = useContext(PairContext);\r\n\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [submitData, setSubmitData] = useState({});\r\n\r\n  const { register, handleSubmit } = useForm({\r\n    defaultValues: prefillDocumentForm(formData),\r\n  });\r\n\r\n  const types = t;\r\n  const [action, setAction] = useState();\r\n  const [selectedType, setSelectedType] = useState(\r\n    formData ? formData.type : \"\"\r\n  );\r\n\r\n  const [sent, setSent] = useState(false);\r\n  const [currentID, setCurrentID] = useState(getFormID(formData));\r\n  const [notification, setNotification] = useState();\r\n  const [combinations, setCombinations] = useState([]);\r\n  const [assignedTo, setAssignedTo] = useState([]);\r\n  const [emptyAssign, setEmptyAssign] = useState([true]);\r\n  useEffect(() => setNotification(undefined), emptyAssign);\r\n\r\n  useEffect(() => {\r\n    fetch(proxy_url + \"/combinations\", {\r\n      method: \"GET\",\r\n    })\r\n      .then((response) => response.json())\r\n      .then((res) => {\r\n        setCombinations(prepareCombinations(res));\r\n      })\r\n      .catch((e) => console.log(e));\r\n\r\n    fetch(proxy_url + \"/employees/all\", {\r\n      method: \"GET\",\r\n    })\r\n      .then((response) => response.json())\r\n      .then((res) => {\r\n        setAssignedTo(getAssignedTo(formData, pairs, res));\r\n      })\r\n      .catch((e) => console.log(e));\r\n  }, []);\r\n\r\n  const onSubmit = (data) => {\r\n    if (assignedTo.length === 0) {\r\n      setNotification(badMsg(\"At least one combination is required\"));\r\n      return;\r\n    }\r\n\r\n    setSubmitData(data);\r\n\r\n    if (action === \"send\") {\r\n      setShowModal(true);\r\n    } else {\r\n      executeSubmit(data);\r\n    }\r\n  };\r\n\r\n  const executeSubmit = (data) => {\r\n    console.log(\"raw\", assignedTo);\r\n    data = correctDocumentFormData(data || submitData, assignedTo);\r\n    console.log(\"data\", data);\r\n\r\n    if (action === \"save\") {\r\n      if (currentID) {\r\n        data = { ...data, id: currentID };\r\n        upsert(data, \"update\");\r\n        updateSavedRec(data);\r\n      } else {\r\n        upsert(data, \"create\").then((r) => setCurrentID(r?.id));\r\n      }\r\n    }\r\n    if (action === \"send\") {\r\n      if (currentID) {\r\n        data = { ...data, id: currentID };\r\n        if (actual) {\r\n          upsertConfirm(data, \"create/confirm\").then((r) =>\r\n            setCurrentID(r?.id)\r\n          );\r\n        } else {\r\n          upsertConfirm(data, \"update/confirm\");\r\n        }\r\n      } else {\r\n        upsertConfirm(data, \"create/confirm\").then((r) => setCurrentID(r?.id));\r\n      }\r\n      setSent(true);\r\n    }\r\n  };\r\n\r\n  const upsert = (data, action) => {\r\n    console.log(data);\r\n    return fetch(proxy_url + `/document/${action}`, {\r\n      method: \"POST\",\r\n      body: JSON.stringify(data),\r\n    })\r\n      .then((res) => {\r\n        if (successResponse(res)) {\r\n          setNotification(goodMsg(`${action} was successful`));\r\n        } else {\r\n          setNotification(badMsg(`${action} failed`));\r\n        }\r\n        return res.json();\r\n      })\r\n      .catch((e) => console.log(\"error\", e));\r\n  };\r\n  const upsertConfirm = (data, action) => {\r\n    console.log(data);\r\n    return fetch(proxy_url + `/document/${action}`, {\r\n      method: \"POST\",\r\n      body: JSON.stringify(data),\r\n    })\r\n      .then((res) => {\r\n        // if (successResponse(res)) {\r\n        setNotification(goodMsg(`${action} was successful`));\r\n        if (setRecords) filterSavedRec(data); // update table data\r\n        if (setFormData) setFormData(undefined); // hide modal\r\n        // } else {\r\n        //   setNotification(badMsg(`${action} failed`));\r\n        // }\r\n        console.log(res);\r\n        return res.json();\r\n      })\r\n      .catch((e) => {\r\n        setNotification(badMsg(`${action} failed`));\r\n        console.log(\"error\", e);\r\n      });\r\n  };\r\n\r\n  const filterSavedRec = (data) => {\r\n    setRecords((prevState) => prevState.filter((p) => p.id !== data.id));\r\n  };\r\n\r\n  const updateSavedRec = (data) => {\r\n    if (!setRecords) return;\r\n\r\n    setRecords((prevState) => {\r\n      let update = prevState;\r\n      const foundID = prevState.findIndex((p) => p.id === data.id);\r\n      update[foundID] = data;\r\n      return update;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Form\r\n      onChange={() => setNotification(undefined)}\r\n      onSubmit={handleSubmit(onSubmit)}\r\n    >\r\n      {/* TYPE* */}\r\n      <Form.Group as={Row}>\r\n        <Form.Label column sm=\"3\">\r\n          Type*\r\n        </Form.Label>\r\n        <Col>\r\n          <Form.Control\r\n            onChange={(e) => setSelectedType(e.target.value)}\r\n            as=\"select\"\r\n            name=\"type\"\r\n            ref={register({ validate: (v) => v !== \"\" })}\r\n            required\r\n            value={selectedType}\r\n          >\r\n            {getSelectOptions(types)}\r\n          </Form.Control>\r\n        </Col>\r\n      </Form.Group>\r\n      {/* REQUIRE SUPERIOR */}\r\n      <Form.Group as={Row}>\r\n        <Form.Label column sm=\"3\">\r\n          {\" \"}\r\n        </Form.Label>\r\n        <Col>\r\n          <Form.Check\r\n            inline\r\n            label=\"require superior\"\r\n            name=\"require_superior\"\r\n            ref={register}\r\n          />\r\n        </Col>\r\n      </Form.Group>\r\n      {/* NAME */}\r\n      <MyFormGroup\r\n        label=\"Document name*\"\r\n        name=\"name\"\r\n        placeholder=\"Enter document name\"\r\n        register={register}\r\n        required\r\n      />\r\n      {/* DOCUMENT NUMBER */}\r\n      <MyFormGroup\r\n        label=\"Document number*\"\r\n        name=\"order_number\"\r\n        type=\"number\"\r\n        placeholder=\"Enter number\"\r\n        register={register({ valueAsNumber: true })}\r\n        required\r\n      />\r\n      {/* VERSION */}\r\n      <MyFormGroup\r\n        label=\"Version*\"\r\n        name=\"version\"\r\n        placeholder=\"Enter version\"\r\n        register={register}\r\n        required\r\n      />\r\n      {/* LINK */}\r\n      <MyFormGroup\r\n        label=\"Link to sharepoint\"\r\n        name=\"link\"\r\n        placeholder=\"Enter document link to sharepoint\"\r\n        register={register}\r\n      />\r\n      {/* RELEASE */}\r\n      <MyFormGroup\r\n        label=\"Release date*\"\r\n        name=\"release_date\"\r\n        type=\"date\"\r\n        register={register}\r\n        required\r\n      />\r\n      {/* DEADLINE */}\r\n      <MyFormGroup\r\n        label=\"Days to deadline*\"\r\n        name=\"deadline\"\r\n        type=\"date\"\r\n        register={register}\r\n        required\r\n      />\r\n      {/* NOTE */}\r\n      <MyFormGroup\r\n        label=\"Note\"\r\n        name=\"note\"\r\n        as=\"textarea\"\r\n        placeholder=\"Enter note\"\r\n        register={register}\r\n      />\r\n      {/* COMBINATIONS */}\r\n      <Combinations\r\n        combinations={combinations}\r\n        assignedTo={assignedTo}\r\n        setAssignedTo={setAssignedTo}\r\n        emptyAssign={emptyAssign}\r\n        setEmptyAssign={setEmptyAssign}\r\n      />\r\n      {/* ALERTS */}\r\n      {notification && <CustomAlert notification={notification} />}\r\n      {/* SAVE | SEND BUTTONS */}\r\n      <div className=\"pt-1 btn-block text-right\">\r\n        <Button\r\n          variant=\"outline-primary\"\r\n          type=\"submit\"\r\n          className=\"mr-1\"\r\n          disabled={sent}\r\n          onClick={() => setAction(\"save\")}\r\n        >\r\n          Save\r\n        </Button>\r\n        <Button type=\"submit\" onClick={() => setAction(\"send\")} disabled={sent}>\r\n          {actual ? \"Send as new version\" : \"Send\"}\r\n        </Button>\r\n      </div>\r\n      {showModal && (\r\n        <ConfirmModal\r\n          handleAccept={executeSubmit}\r\n          showModal={showModal}\r\n          setShowModal={setShowModal}\r\n          modalInfo={{\r\n            body: \"Do you really want to send the record to the employees?\",\r\n          }}\r\n          // style={{ border: \"10px solid #6c757d\" }}\r\n        />\r\n      )}\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default DocumentForm;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport MyFormGroup from \"./MyFormGroup\";\r\nimport { Row, Col, Form, Button } from \"react-bootstrap\";\r\nimport { Typeahead } from \"react-bootstrap-typeahead\";\r\nimport \"react-bootstrap-typeahead/css/Typeahead.css\";\r\nimport { CustomAlert } from \"../CustomAlert\";\r\nimport {\r\n  badMsg,\r\n  goodMsg,\r\n  correctTrainingFormData,\r\n  successResponse,\r\n  prefillTrainingForm,\r\n  getEmployeesNames,\r\n  getFormID,\r\n  getEmployeeLabel,\r\n} from \"../../utils/functions\";\r\nimport { PairContext } from \"../../App\";\r\nimport { proxy_url } from \"../../utils/data\";\r\nimport ConfirmModal from \"../Modals/ConfirmModal\";\r\n\r\nconst TrainingForm = ({ setRecords, formData, setFormData, actual }) => {\r\n  const pairs = useContext(PairContext);\r\n\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [submitData, setSubmitData] = useState({});\r\n\r\n  const { register, handleSubmit } = useForm({\r\n    defaultValues: prefillTrainingForm(formData),\r\n  });\r\n\r\n  const [action, setAction] = useState();\r\n\r\n  const [sent, setSent] = useState(false);\r\n  const [currentID, setCurrentID] = useState(getFormID(formData));\r\n  const [notification, setNotification] = useState();\r\n  const [employees, setEmployees] = useState([]);\r\n  const [attendees, setAttendees] = useState([]);\r\n  const [emptyAttendees, setEmptyAttendees] = useState([true]);\r\n  useEffect(() => setNotification(undefined), emptyAttendees);\r\n\r\n  useEffect(() => {\r\n    fetch(proxy_url + \"/employees/all\", {\r\n      method: \"GET\",\r\n    })\r\n      .then((response) => response.json())\r\n      .then((res) => {\r\n        setEmployees(res);\r\n        setAttendees(getEmployeesNames(formData, res));\r\n      })\r\n      .catch((e) => console.log(e));\r\n  }, []);\r\n\r\n  const onSubmit = (data) => {\r\n    console.log(\"data onSubmit\", data);\r\n    if (!attendees.length) {\r\n      setNotification(badMsg(\"At least one employee is required\"));\r\n      return;\r\n    }\r\n\r\n    setSubmitData(data);\r\n\r\n    if (action === \"send\") {\r\n      setShowModal(true);\r\n    } else {\r\n      executeSubmit(data);\r\n    }\r\n  };\r\n\r\n  const executeSubmit = (data) => {\r\n    data = correctTrainingFormData(data || submitData, attendees);\r\n\r\n    if (action === \"save\") {\r\n      if (currentID) {\r\n        data = { ...data, id: currentID };\r\n        upsert(data, \"update\");\r\n        updateSavedRec(data);\r\n      } else {\r\n        upsert(data, \"create\").then((r) => setCurrentID(r?.id));\r\n      }\r\n    }\r\n    if (action === \"send\") {\r\n      if (currentID) {\r\n        data = { ...data, id: currentID };\r\n        if (actual) {\r\n          upsertConfirm(data, \"create/confirm\").then((r) =>\r\n            setCurrentID(r?.id)\r\n          );\r\n        } else {\r\n          upsertConfirm(data, \"update/confirm\");\r\n        }\r\n      } else {\r\n        upsertConfirm(data, \"create/confirm\").then((r) => setCurrentID(r?.id));\r\n      }\r\n      setSent(true);\r\n    }\r\n  };\r\n\r\n  const upsert = (data, action) => {\r\n    return fetch(proxy_url + `/training/${action}`, {\r\n      method: \"POST\",\r\n      body: JSON.stringify(data),\r\n    })\r\n      .then((res) => {\r\n        if (successResponse(res)) {\r\n          setNotification(goodMsg(`${action} was successful`));\r\n        } else {\r\n          setNotification(badMsg(`${action} failed`));\r\n        }\r\n        return res.json();\r\n      })\r\n      .catch((e) => console.log(\"error\", e));\r\n  };\r\n\r\n  const upsertConfirm = (data, action) => {\r\n    console.log(data);\r\n    return fetch(proxy_url + `/training/${action}`, {\r\n      method: \"POST\",\r\n      body: JSON.stringify(data),\r\n    })\r\n      .then((res) => {\r\n        if (successResponse(res)) {\r\n          setNotification(goodMsg(`${action} was successful`));\r\n          if (setRecords) filterSavedRec(data); // update table data\r\n          if (setFormData) setFormData(undefined); // hide modal\r\n        } else {\r\n          setNotification(badMsg(`${action} failed`));\r\n        }\r\n        console.log(res);\r\n        return res.json();\r\n      })\r\n      .catch((e) => console.log(\"error\", e));\r\n  };\r\n\r\n  const filterSavedRec = (data) => {\r\n    setRecords((prevState) => prevState.filter((p) => p.id !== data.id));\r\n  };\r\n\r\n  const updateSavedRec = (data) => {\r\n    if (!setRecords) return;\r\n\r\n    setRecords((prevState) => {\r\n      let update = prevState;\r\n      const foundID = prevState.findIndex((p) => p.id === data.id);\r\n      update[foundID] = data;\r\n      return update;\r\n    });\r\n  };\r\n\r\n  const addAttendees = (attendee) => {\r\n    setAttendees(attendee);\r\n    setEmptyAttendees([false]);\r\n  };\r\n\r\n  return (\r\n    <Form\r\n      onChange={() => setNotification(undefined)}\r\n      onSubmit={handleSubmit(onSubmit)}\r\n    >\r\n      {/* NAME */}\r\n      <MyFormGroup\r\n        label=\"Training name*\"\r\n        name=\"name\"\r\n        placeholder=\"Enter document name\"\r\n        register={register}\r\n        required\r\n      />\r\n      {/* TRAINEE */}\r\n      <MyFormGroup\r\n        label=\"Name of lector\"\r\n        name=\"lector\"\r\n        placeholder=\"Enter document link to sharepoint\"\r\n        register={register}\r\n      />\r\n      {/* AGENCY */}\r\n      <MyFormGroup\r\n        label=\"Name of agency\"\r\n        name=\"agency\"\r\n        placeholder=\"Enter agency\"\r\n        register={register}\r\n      />\r\n      {/* PLACE */}\r\n      <MyFormGroup\r\n        label=\"Place\"\r\n        name=\"place\"\r\n        placeholder=\"Enter place\"\r\n        register={register}\r\n      />\r\n      {/* DATE */}\r\n      <MyFormGroup\r\n        label=\"Date*\"\r\n        name=\"date\"\r\n        type=\"date\"\r\n        placeholder=\"Enter date\"\r\n        register={register}\r\n        required\r\n      />\r\n      {/* DEADLINE */}\r\n      <MyFormGroup\r\n        label=\"Days to deadline*\"\r\n        name=\"deadline\"\r\n        type=\"date\"\r\n        defaultValue=\"14\"\r\n        register={register}\r\n        required\r\n      />\r\n      {/* DURATION */}\r\n      <MyFormGroup\r\n        label=\"Duration\"\r\n        name=\"duration\"\r\n        type=\"number\"\r\n        placeholder=\"Enter duration\"\r\n        register={register({ valueAsNumber: true })}\r\n      />\r\n      {/* AGENDA */}\r\n      <MyFormGroup\r\n        label=\"Agenda*\"\r\n        name=\"agenda\"\r\n        as=\"textarea\"\r\n        placeholder=\"Enter agenda\"\r\n        register={register}\r\n        required\r\n      />\r\n      {/* LIST OF EMPLOYEES */}\r\n      <Form.Group as={Row}>\r\n        <Form.Label column sm=\"3\">\r\n          Add employees*\r\n        </Form.Label>\r\n        <Col>\r\n          <Typeahead\r\n            id=\"basic-typeahead-single\"\r\n            name=\"employees\"\r\n            labelKey={(e) => getEmployeeLabel(e, pairs.departments)}\r\n            multiple\r\n            placeholder=\"Choose an employees...\"\r\n            selected={attendees}\r\n            options={employees}\r\n            onChange={(selected) => {\r\n              addAttendees(selected);\r\n              // this._typeahead.getInstance().focus();\r\n            }}\r\n            // ref={typeahead => this._typeahead = typeahead}\r\n          />\r\n        </Col>\r\n      </Form.Group>\r\n      {/* ALERTS */}\r\n      {notification && <CustomAlert notification={notification} />}\r\n      {/* SAVE | SEND BUTTONS */}\r\n      <div className=\"pt-1 btn-block text-right\">\r\n        <Button\r\n          variant=\"outline-primary\"\r\n          type=\"submit\"\r\n          className=\"mr-1\"\r\n          disabled={sent}\r\n          onClick={() => setAction(\"save\")}\r\n        >\r\n          Save\r\n        </Button>\r\n        <Button type=\"submit\" onClick={() => setAction(\"send\")} disabled={sent}>\r\n          Send\r\n        </Button>\r\n      </div>\r\n      {showModal && (\r\n        <ConfirmModal\r\n          handleAccept={executeSubmit}\r\n          showModal={showModal}\r\n          setShowModal={setShowModal}\r\n          modalInfo={{\r\n            body: \"Do you really want to send the record to the employees?\",\r\n          }}\r\n        />\r\n      )}\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default TrainingForm;\r\n","import React, { useState } from \"react\";\r\nimport { Button, ButtonGroup, Container } from \"react-bootstrap\";\r\nimport DocumentForm from \"../components/Forms/DocumentForm\";\r\nimport TrainingForm from \"../components/Forms/TrainingForm\";\r\n\r\nconst AddRecordPage = () => {\r\n  const [formType, setFormType] = useState(\"document\");\r\n\r\n  const handleClick = (event) => setFormType(event.target.id);\r\n  const active = (id) => formType === id && \"active\";\r\n\r\n  return (\r\n    <Container className=\"w-75\">\r\n      <ButtonGroup onClick={handleClick} className=\"btn-group btn-header\">\r\n        <Button id=\"document\" className={active(\"document\")}>\r\n          Document\r\n        </Button>\r\n        <Button id=\"training\" className={active(\"training\")}>\r\n          Online training\r\n        </Button>\r\n      </ButtonGroup>\r\n      {formType === \"document\" && <DocumentForm />}\r\n      {formType === \"training\" && <TrainingForm />}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default AddRecordPage;\r\n","import Button from \"react-bootstrap/Button\";\r\nimport React from \"react\";\r\n\r\nconst EditBtn = (cell, row, index, { setFormData }) => {\r\n  return (\r\n    <Button\r\n      variant=\"outline-primary\"\r\n      onClick={() => setFormData(row)}\r\n      size=\"sm\"\r\n    >\r\n      Edit\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default EditBtn;\r\n","import {\r\n  FormattedDate,\r\n  FormattedDeadline,\r\n  FormattedRelease,\r\n} from \"../utils/Formatter\";\r\nimport { buttonColumn } from \"../utils/functions\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport React from \"react\";\r\nimport EditBtn from \"../components/Buttons/EditBtn\";\r\n\r\nconst SendBtn = (cell, row, index, { setRow, setShowModal }) => {\r\n  return (\r\n    <Button\r\n      id=\"save\"\r\n      size=\"sm\"\r\n      onClick={() => {\r\n        setRow(row);\r\n        setShowModal(true);\r\n      }}\r\n    >\r\n      Send\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport const savedDocumentsColumns = (setFormData, setRow, setShowModal) => [\r\n  {\r\n    dataField: \"name\",\r\n    text: \"Name\",\r\n    sort: true,\r\n  },\r\n  {\r\n    dataField: \"release_date.Time\",\r\n    text: \"Release\",\r\n    sort: true,\r\n    formatter: FormattedRelease,\r\n  },\r\n  {\r\n    dataField: \"deadline.Time\",\r\n    text: \"Deadline\",\r\n    sort: true,\r\n    formatter: FormattedDeadline,\r\n  },\r\n  {\r\n    ...buttonColumn(\"EditBtn\"),\r\n    formatter: EditBtn,\r\n    formatExtraData: {\r\n      setFormData: setFormData,\r\n    },\r\n  },\r\n  {\r\n    ...buttonColumn(\"SendBtn\"),\r\n    formatter: SendBtn,\r\n    formatExtraData: {\r\n      setRow: setRow,\r\n      setShowModal: setShowModal,\r\n    },\r\n  },\r\n];\r\n\r\nexport const savedTrainingsColumns = (setFormData, setRow, setShowModal) => [\r\n  {\r\n    dataField: \"name\",\r\n    text: \"Name\",\r\n    sort: true,\r\n  },\r\n  {\r\n    dataField: \"date.Time\",\r\n    text: \"Release\",\r\n    sort: true,\r\n    formatter: FormattedDate,\r\n  },\r\n  {\r\n    dataField: \"place\",\r\n    text: \"Place\",\r\n    sort: true,\r\n  },\r\n  {\r\n    ...buttonColumn(\"EditBtn\"),\r\n    formatter: EditBtn,\r\n    formatExtraData: {\r\n      setFormData: setFormData,\r\n    },\r\n  },\r\n  {\r\n    ...buttonColumn(\"SendBtn\"),\r\n    formatter: SendBtn,\r\n    formatExtraData: {\r\n      setRow: setRow,\r\n      setShowModal: setShowModal,\r\n    },\r\n  },\r\n];\r\n","import React from \"react\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport DocumentForm from \"../Forms/DocumentForm\";\r\nimport TrainingForm from \"../Forms/TrainingForm\";\r\nimport { recordType } from \"../../utils/functions\";\r\n\r\nconst EditRecordModal = ({ setRecords, formData, setFormData, actual }) => {\r\n  const closeModal = () => setFormData(undefined);\r\n  const type = recordType(formData);\r\n\r\n  const props = { setRecords, formData, setFormData, actual };\r\n\r\n  return (\r\n    <Modal show={true} onHide={closeModal} centered size=\"lg\">\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Edit {type}</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        {type === \"document\" ? (\r\n          <DocumentForm {...props} />\r\n        ) : (\r\n          <TrainingForm {...props} />\r\n        )}\r\n      </Modal.Body>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default EditRecordModal;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport MyBootstrapTable from \"../components/Tables/MyBootstrapTable\";\r\nimport { savedDocumentsColumns, savedTrainingsColumns } from \"./columns\";\r\nimport useDataApi from \"../utils/useDataApi\";\r\nimport { FetchError, FetchLoading } from \"../components/FetchComponents\";\r\nimport {\r\n  badMsg,\r\n  goodMsg,\r\n  orderBy,\r\n  recordType,\r\n  successResponse,\r\n} from \"../utils/functions\";\r\nimport { CustomAlert } from \"../components/CustomAlert\";\r\nimport EditRecordModal from \"../components/Modals/EditRecordModal\";\r\nimport { proxy_url } from \"../utils/data\";\r\nimport ConfirmModal from \"../components/Modals/ConfirmModal\";\r\n\r\nconst SavedRecordsPage = () => {\r\n  const [doc_data, isLoaded, error] = useDataApi(\"/document/edited\");\r\n  const [trn_data, isLoaded2, error2] = useDataApi(\"/training/edited\");\r\n\r\n  const [documents, setDocuments] = useState([]);\r\n  const [trainings, setTrainings] = useState([]);\r\n\r\n  const [notification, setNotification] = useState();\r\n  const [formData, setFormData] = useState();\r\n\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [row, setRow] = useState();\r\n\r\n  useEffect(() => {\r\n    if (doc_data && trn_data) {\r\n      setDocuments(doc_data);\r\n      setTrainings(trn_data);\r\n    }\r\n  }, [doc_data, trn_data]);\r\n\r\n  /** Send record to relevant employees */\r\n  const handleClick = () => {\r\n    fetch(proxy_url + `/${recordType(row)}/confirm/${row.id}`, {\r\n      method: \"GET\",\r\n    })\r\n      .then((res) => {\r\n        if (successResponse(res)) {\r\n          updateSavedRec();\r\n          setNotification(goodMsg(`Record ${row.name} was successfully sent`));\r\n        } else {\r\n          setNotification(badMsg(`Record ${row.name} failed`));\r\n        }\r\n      })\r\n      .catch((e) => console.log(e));\r\n  };\r\n\r\n  /** Remove sent record */\r\n  const updateSavedRec = () => {\r\n    if (recordType(row) === \"document\") {\r\n      setDocuments((prev) => prev.filter((rec) => rec.id !== row.id));\r\n    } else {\r\n      setTrainings((prev) => prev.filter((rec) => rec.id !== row.id));\r\n    }\r\n  };\r\n\r\n  if (error) {\r\n    return <FetchError e={`Error: ${error.message}`} />;\r\n  } else if (error2) {\r\n    return <FetchError e={`Error: ${error2.message}`} />;\r\n  } else if (!isLoaded || !doc_data || !isLoaded2 || !trn_data) {\r\n    return <FetchLoading />;\r\n  }\r\n\r\n  const trn_columns = savedTrainingsColumns(setFormData, setRow, setShowModal);\r\n  const doc_columns = savedDocumentsColumns(setFormData, setRow, setShowModal);\r\n\r\n  return (\r\n    <>\r\n      {/* DOCUMENTS */}\r\n      <MyBootstrapTable\r\n        title=\"Saved documents\"\r\n        data={documents}\r\n        columns={doc_columns}\r\n        order={orderBy(\"deadline.Time\")}\r\n      />\r\n      {/* TRAININGS */}\r\n      <MyBootstrapTable\r\n        title=\"Saved trainings\"\r\n        data={trainings}\r\n        columns={trn_columns}\r\n        order={orderBy(\"deadline.Time\")}\r\n      />\r\n      {notification && <CustomAlert notification={notification} />}\r\n      {formData && (\r\n        <EditRecordModal\r\n          setRecords={\r\n            recordType(formData) === \"document\" ? setDocuments : setTrainings\r\n          }\r\n          formData={formData}\r\n          setFormData={setFormData}\r\n        />\r\n      )}\r\n      {showModal && (\r\n        <ConfirmModal\r\n          handleAccept={handleClick}\r\n          showModal={showModal}\r\n          setShowModal={setShowModal}\r\n          modalInfo={{\r\n            body: \"Do you really want to send the record to the employees?\",\r\n          }}\r\n          // style={{ border: \"10px solid #6c757d\" }}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SavedRecordsPage;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Button, Form } from \"react-bootstrap\";\r\nimport {badMsg, getSelectOptions, goodMsg, successResponse} from \"../utils/functions\";\r\nimport { proxy_url } from \"../utils/data\";\r\nimport {CustomAlert} from \"../components/CustomAlert\";\r\n\r\nconst SettingsPage = () => {\r\n  const import_types = [\"import_1\", \"import_2\", \"import_3\", \"import_4\", \"import_5\"];\r\n  const [selectedType, setSelectedType] = useState();\r\n\r\n  const [cardsFile, setCardsFile] = useState(null);\r\n  const [employeesFile, setEmployeesFile] = useState({});\r\n\r\n  const [notification, setNotification] = useState();\r\n  const [notification2, setNotification2] = useState();\r\n\r\n  // const [showDeleted, setShowDeleted] = useState(null);\r\n  // useEffect(() => {\r\n  //   let sessionDel = sessionStorage.getItem(\"showDeleted\");\r\n  //   if (sessionDel === null) {\r\n  //     sessionStorage.setItem(\"showDeleted\", false);\r\n  //   } else if (showDeleted === null) {\r\n  //     setShowDeleted(sessionDel);\r\n  //   } else {\r\n  //     document.getElementById(\"checkShowDeleted\").checked = JSON.parse(\r\n  //       showDeleted\r\n  //     );\r\n  //     sessionStorage.setItem(\"showDeleted\", showDeleted);\r\n  //   }\r\n  // }, [showDeleted]);\r\n\r\n  // const placeholderOption = () => {\r\n  //   return (\r\n  //     <option key={-1} disabled value=\"default\">\r\n  //       Select import type\r\n  //     </option>\r\n  //   );\r\n  // };\r\n\r\n  const changeCards = (e) => setCardsFile(e.target.files[0]);\r\n\r\n  const uploadCards = (e) => {\r\n    clearErrors();\r\n\r\n    const data = new FormData();\r\n    let name = `kiosk_upload_${Date.now()}`;\r\n\r\n    data.append(\"file\", cardsFile);\r\n    data.append(\"name\", name);\r\n\r\n    console.log(cardsFile);\r\n\r\n    if (!cardsFile) {\r\n      setNotification(badMsg(\"File is not set\"));\r\n      return\r\n    }\r\n\r\n    fetch(proxy_url + \"/file/upload\", {\r\n      method: \"POST\",\r\n      body: data,\r\n    }).then((response) => {\r\n        console.log(response)\r\n        if (successResponse(response)) {\r\n          setNotification(goodMsg(\"Successfully uploaded.\"));\r\n        } else {\r\n          setNotification(badMsg(\"Import was unsuccessful\"));\r\n        }\r\n      })\r\n      .catch((e) => setNotification(badMsg((\"Error submitting form! \" + e))));\r\n  };\r\n\r\n  const changeEmployees = (e) => setEmployeesFile(e.target.files[0]);\r\n\r\n  const uploadEmployees = () => {\r\n    clearErrors();\r\n\r\n    const data = new FormData();\r\n    let name = `employees_upload_${Date.now()}`;\r\n\r\n    if (!selectedType) {\r\n      setNotification2(badMsg(\"Select type\"));\r\n      return\r\n    }\r\n\r\n    data.append(\"file\", employeesFile);\r\n    data.append(\"name\", name);\r\n    data.append(\"import\", selectedType);\r\n\r\n    if (!employeesFile) {\r\n      setNotification2(badMsg(\"File is not set\"));\r\n      return\r\n    }\r\n\r\n    fetch(proxy_url + \"/file/upload\", {\r\n      method: \"POST\",\r\n      body: data,\r\n    }).then((response) =>  {\r\n        if (successResponse(response)) {\r\n          setNotification2(goodMsg(\"Successfully uploaded.\"));\r\n        } else {\r\n          setNotification2(badMsg((\"Import was unsuccessful\")));\r\n        }\r\n      })\r\n      .catch((e) => setNotification2(badMsg((\"Error submitting form! \" + e))));\r\n  };\r\n\r\n  const clearErrors = () => {\r\n    setNotification(undefined);\r\n    setNotification2(undefined);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <script crossOrigin=\"true\" />\r\n      <p className=\"pt-5\">\r\n        <strong>IMPORT EMPLOYEES</strong>\r\n      </p>\r\n      <Form>\r\n        <select\r\n          onChange={(e) => setSelectedType(e.target.value)}\r\n          // ref={register({validate: v => v !== \"\"})}\r\n          name=\"type\"\r\n          required\r\n          value={selectedType}\r\n        >\r\n          {getSelectOptions(import_types)}\r\n        </select>\r\n        <span> Choose import</span>\r\n        <br />\r\n        <input type=\"file\" required onChange={changeEmployees} />\r\n        <Button type=\"button\" onClick={uploadEmployees}>\r\n          Upload\r\n        </Button>\r\n        {/* ALERTS */}\r\n        {notification2 && <CustomAlert notification={notification2} />}\r\n      </Form>\r\n      <hr />\r\n      <p className=\"pt-5\">\r\n        <strong>IMPORT CARDS</strong>\r\n      </p>\r\n      <Form>\r\n        <p style={{marginBottom: \"4px\"}}>Upload file with employee card information</p>\r\n        <input type=\"file\" id=\"cardsFile\" onChange={changeCards} />\r\n        <Button type=\"button\" onClick={uploadCards}>\r\n          Upload\r\n        </Button>\r\n        {/* ALERTS */}\r\n        {notification && <CustomAlert notification={notification} />}\r\n      </Form>\r\n      <hr />\r\n      {/* SHOW DELETED EMPLOYEES */}\r\n      {/*<div className=\"form-check mt-5\">*/}\r\n      {/*  <input*/}\r\n      {/*    className=\"form-check-input\"*/}\r\n      {/*    type=\"checkbox\"*/}\r\n      {/*    value=\"\"*/}\r\n      {/*    id=\"checkShowDeleted\"*/}\r\n      {/*    onClick={setShowDeleted(!showDeleted)}*/}\r\n      {/*  />*/}\r\n      {/*  <strong>SHOW DELETED EMPLOYEES</strong>*/}\r\n      {/*  <span>{\" <-- not implemented :(\"}</span>*/}\r\n      {/*</div>*/}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SettingsPage;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { Button, Col, Form, Row } from \"react-bootstrap\";\r\nimport Select from \"react-select\";\r\nimport { PairContext } from \"../App\";\r\nimport {\r\n  getFetch,\r\n  getOptionsForSelect,\r\n  prepareEmployees,\r\n  prepareLectors,\r\n  resolveFilter,\r\n} from \"../utils/functions\";\r\n\r\nconst Filter = ({\r\n  showSM,\r\n  setShowSM,\r\n  matrixByCombination,\r\n  matrixBySuperior,\r\n  searchByCombination,\r\n  searchByPerson,\r\n}) => {\r\n  const pairs = useContext(PairContext);\r\n  const [es, setEs] = useState([]); // all employees\r\n  const [ls, setLs] = useState([]); // all lectors\r\n\r\n  const optionsStructure = getOptionsForSelect(pairs);\r\n\r\n  const [combination, setCombinations] = useState({\r\n    branches: [],\r\n    cities: [],\r\n    departments: [],\r\n    divisions: [],\r\n  });\r\n\r\n  const [person, setPerson] = useState({\r\n    employee: \"\",\r\n    lector: \"\",\r\n  });\r\n\r\n  const [searchType, setSearchType] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    getFetch(\"/employees/all\").then((res) => {\r\n      console.log(\"employees\", res);\r\n      setEs(prepareEmployees(res, pairs.departments));\r\n    });\r\n    getFetch(\"/lectors/all\").then((res) => setLs(prepareLectors(res)));\r\n  }, []);\r\n\r\n  const selectStructure = (data, { name: field }) =>\r\n    setCombinations({ ...combination, [field]: data });\r\n\r\n  const selectPerson = (data, { name: field }) =>\r\n    setPerson({ ...person, [field]: data });\r\n\r\n  const searchStructure = () => {\r\n    setSearchType(\"structure\");\r\n\r\n    if (!showSM) {\r\n      searchByCombination(resolveFilter(combination));\r\n      return;\r\n    }\r\n\r\n    matrixByCombination({\r\n      branch: \"\",\r\n      city: combination.cities.map((v) => v.value).join(\",\"),\r\n      department: combination.departments.map((v) => v.value).join(\",\"),\r\n      division: \"\",\r\n    });\r\n  };\r\n\r\n  const searchPerson = () => {\r\n    setSearchType(\"person\");\r\n\r\n    if (showSM) {\r\n      matrixBySuperior(person);\r\n    } else {\r\n      searchByPerson(person);\r\n    }\r\n  };\r\n\r\n  const handleToggleSearch = () => {\r\n    const toggle = !showSM;\r\n    setShowSM(toggle);\r\n\r\n    if (!toggle) {\r\n      if (searchType === \"structure\") {\r\n        searchStructure();\r\n      } else {\r\n        searchPerson();\r\n      }\r\n      return;\r\n    }\r\n\r\n    if (searchType === \"structure\") {\r\n      console.log(\"searchStructure\");\r\n      matrixByCombination({\r\n        branch: \"\",\r\n        city: combination.cities.map((v) => v.value).join(\",\"),\r\n        department: combination.departments.map((v) => v.value).join(\",\"),\r\n        division: \"\",\r\n      });\r\n    } else {\r\n      matrixBySuperior(person.employee);\r\n    }\r\n  };\r\n\r\n  const selectorStructure = (name) => (\r\n    <div style={style}>\r\n      <Select\r\n        isClearable\r\n        isMulti\r\n        value={combination[name]}\r\n        name={name}\r\n        placeholder={`Select ${name}`}\r\n        options={optionsStructure[name]}\r\n        onChange={(data, s) => selectStructure(data, s)}\r\n      />\r\n    </div>\r\n  );\r\n\r\n  const selectorPerson = (name, label, options, value) => (\r\n    <div style={style}>\r\n      <Select\r\n        isClearable\r\n        value={value}\r\n        name={name}\r\n        placeholder={label}\r\n        options={options}\r\n        onChange={(data, p) => selectPerson(data, p)}\r\n      />\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <Form>\r\n      <Row className=\"pb-2\">\r\n        <Button\r\n          style={{\r\n            backgroundColor:\r\n              searchType === \"structure\" ? \"#f3c404f2 \" : \"#343a40\",\r\n            border: \"none\",\r\n          }}\r\n          onClick={searchStructure}\r\n        >\r\n          Search structure\r\n        </Button>\r\n        {selectorStructure(\"branches\")}\r\n        {selectorStructure(\"divisions\")}\r\n        {selectorStructure(\"departments\")}\r\n        {selectorStructure(\"cities\")}\r\n        <Col className=\"text-right pr-0\">\r\n          <Button\r\n            className=\"mr-3\"\r\n            variant=\"outline-primary\"\r\n            onClick={handleToggleSearch}\r\n          >\r\n            {`${showSM ? \"Table\" : \"Matrix\"}`}\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Button\r\n          style={{\r\n            backgroundColor: searchType === \"person\" ? \"#f3c404f2 \" : \"#343a40\",\r\n            border: \"none\",\r\n            paddingRight: \"26px\",\r\n          }}\r\n          onClick={searchPerson}\r\n        >\r\n          Search person\r\n        </Button>\r\n        {selectorPerson(\"employee\", \"Select employee\", es, person.employee)}\r\n        {selectorPerson(\"lector\", \"Select lector\", ls, person.lector)}\r\n      </Row>\r\n    </Form>\r\n  );\r\n};\r\n\r\nconst style = {\r\n  width: \"20%\",\r\n  marginLeft: \"4px\",\r\n};\r\n\r\nexport default Filter;\r\n","import React from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nconst ToggleBtn = (c, row, rowIndex, { id, data, setData, i }) => {\r\n  const document = data[rowIndex];\r\n  let state = document.employees[i]?.state || \"_\";\r\n  const mark = state.includes(\"X\");\r\n  if (mark) state = unMarkState();\r\n\r\n  function markState() {\r\n    return \"X\" + state;\r\n  }\r\n\r\n  function unMarkState() {\r\n    if (!state.includes(\"X\")) return state;\r\n    if (state.length === 1 && state !== \"X\") return state;\r\n    return state.substr(1);\r\n  }\r\n\r\n  const handleClick = () => {\r\n    const stt = mark ? unMarkState() : markState();\r\n\r\n    const new_employees = [...document.employees];\r\n    new_employees[i] = {\r\n      ...new_employees[i],\r\n      state: stt,\r\n    };\r\n\r\n    const copy = [...data];\r\n    copy[rowIndex] = { ...document, employees: new_employees };\r\n    setData(copy);\r\n  };\r\n\r\n  const getColor = (state) => {\r\n    switch (state) {\r\n      case \"-\":\r\n        return \"gray\";\r\n      case \"_\":\r\n        return \"cornflowerblue\";\r\n      case \"es\":\r\n        return \"tomato\";\r\n      case \"e\":\r\n        return \"orange\";\r\n      case \"s\":\r\n        return \"gold\";\r\n      default:\r\n        return \"green\";\r\n      // TODO implement *\r\n    }\r\n  };\r\n\r\n  const getLabel = () => {\r\n    const labels = [\r\n      { state: \"-\", label: \"no need\" },\r\n      { state: \"es\", label: \"miss e+s\" },\r\n      { state: \"e\", label: \"miss e\" },\r\n      { state: \"s\", label: \"miss s\" },\r\n      { state: \"\", label: \"well done\" },\r\n      { state: \"X\", label: \"bug\" },\r\n      { state: \"_\", label: \"not send\" },\r\n    ];\r\n    return labels.find((l) => l.state === state)?.label;\r\n  };\r\n\r\n  const styledBtn = {\r\n    backgroundColor: getColor(state),\r\n    color: state === \"s\" ? \"black\" : \"white\",\r\n    borderColor: mark ? \"black\" : \"white\",\r\n    borderWidth: \"5px\",\r\n  };\r\n\r\n  return (\r\n    <Button style={styledBtn} onClick={handleClick} className=\"btn-block\">\r\n      {getLabel()}\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default ToggleBtn;\r\n","import React from \"react\";\r\nimport { Button, ButtonGroup, Col, Row, Card } from \"react-bootstrap\";\r\nimport { ExclamationTriangle } from \"react-bootstrap-icons\";\r\n\r\nexport const RowButtons = ({\r\n  data,\r\n  setAction,\r\n  setModalInfo,\r\n  setShowModal,\r\n  handleAccept,\r\n  showLegend,\r\n  setShowLegend,\r\n}) => {\r\n  const handleClick = (e) => {\r\n    const action = e.target.id;\r\n    setAction(action);\r\n    if (action === \"cancel\") {\r\n      handleAccept();\r\n    } else {\r\n      setModalInfo({\r\n        body: `Do you really want to ${action} selected signatures?`,\r\n      });\r\n      setShowModal(true);\r\n    }\r\n  };\r\n\r\n  const disabled = data.length === 0;\r\n\r\n  return (\r\n    <Row className=\"mb-3\">\r\n      <Col className=\"text-left\">\r\n        <ButtonGroup className=\"div-btn\" size=\"sm\">\r\n          {/* maybe https://react-bootstrap.github.io/components/overlays/ ? */}\r\n          <Button onClick={() => setShowLegend(!showLegend)}>\r\n            {showLegend ? \"Hide legend\" : \"Show legend\"}\r\n          </Button>\r\n        </ButtonGroup>\r\n      </Col>\r\n      <Col className=\"text-right\">\r\n        <ButtonGroup className=\"div-btn\" onClick={handleClick} size=\"sm\">\r\n          <Button id=\"sign\" size=\"sm\" disabled={disabled}>\r\n            Sign\r\n          </Button>\r\n          <Button id=\"cancelDuty\" size=\"sm\" disabled={disabled}>\r\n            Cancel duty\r\n          </Button>\r\n          <Button id=\"trainAgain\" size=\"sm\" disabled={disabled}>\r\n            Train again\r\n          </Button>\r\n          <Button\r\n            id=\"cancel\"\r\n            size=\"sm\"\r\n            onClick={handleClick}\r\n            disabled={disabled}\r\n          >\r\n            Cancel\r\n          </Button>\r\n        </ButtonGroup>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport const Legend = () => {\r\n  const Badge = ({ color, textColor = \"white\", label, text }) => {\r\n    const style = {\r\n      background: color,\r\n      borderColor: color,\r\n      color: textColor,\r\n      width: \"80px\",\r\n      height: \"20px\",\r\n      fontSize: \".7rem\",\r\n      fontWeight: \"bold\",\r\n      padding: \"0\",\r\n    };\r\n    return (\r\n      <p>\r\n        <span>\r\n          <Button style={style}>{label}</Button>\r\n          {` ${text}`}\r\n        </span>\r\n      </p>\r\n    );\r\n  };\r\n\r\n  const cardStyle = {\r\n    width: \"30rem\",\r\n    marginTop: \"1rem\",\r\n    fontSize: \".7rem\",\r\n    marginBottom: \".75rem\",\r\n  };\r\n\r\n  return (\r\n    <Card style={cardStyle}>\r\n      <Card.Body>\r\n        <Card.Subtitle className=\"mb-3 text-muted\">Legend:</Card.Subtitle>\r\n        <Card.Text>\r\n          <Badge\r\n            label=\"no need\"\r\n            text=\"Zamestnanec bol odznačený z potreby oboznámenia\"\r\n            color=\"gray\"\r\n          />\r\n          <Badge\r\n            label=\"miss e+s\"\r\n            text=\"Ani zamestnanec ani nadriadený ešte nepotvrdili\"\r\n            color=\"tomato\"\r\n          />\r\n          <Badge label=\"miss e\" text=\"Zamestnanec nepotvrdil\" color=\"orange\" />\r\n          <Badge\r\n            label=\"miss s\"\r\n            text=\"Nadriadený nepotvrdil\"\r\n            color=\"gold\"\r\n            textColor=\"white\"\r\n          />\r\n          <Badge label=\"well done\" text=\"Dokument je potvrdený\" color=\"green\" />\r\n          <Badge\r\n            label=\"not sent\"\r\n            text=\"Este neodoslane\"\r\n            color=\"cornflowerblue\"\r\n          />\r\n          <p>\r\n            <ExclamationTriangle\r\n              style={{ color: \"red\", marginBottom: \"4px\" }}\r\n            />{\" \"}\r\n            Uplynul deadline a chýbajú podpisy\r\n          </p>\r\n          <p>\r\n            hviezdička <strong>*</strong> znamena, ze zamestnanec sa opakovane\r\n            preškoluje\r\n          </p>\r\n        </Card.Text>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport ToggleBtn from \"./ToggleBtn\";\r\nimport ConfirmModal from \"../../components/Modals/ConfirmModal\";\r\nimport { Legend, RowButtons } from \"./SkillMatrixComponents\";\r\nimport {\r\n  buttonColumn,\r\n  prepareSMData,\r\n  sortEmployeesByName,\r\n} from \"../../utils/functions\";\r\nimport { DocumentLabel } from \"../../utils/Formatter\";\r\nimport MyBootstrapTable from \"../../components/Tables/MyBootstrapTable\";\r\nimport { proxy_url } from \"../../utils/data\";\r\n\r\nconst SkillMatrix = ({ SMData }) => {\r\n  const [data, setData] = useState([]);\r\n  const [employees, setEmployees] = useState([]);\r\n  // const [signatures, setSignatures] = useState([]);\r\n\r\n  useEffect(() => {\r\n    console.log(\"SMData\", SMData);\r\n\r\n    if (!SMData.documents) return;\r\n\r\n    const sample = SMData.documents[0];\r\n    if (!sample || !sample.signatures) {\r\n      setData([]);\r\n      return;\r\n    }\r\n\r\n    setEmployees(sortEmployeesByName(SMData.employees));\r\n    setData(prepareSMData(SMData.documents));\r\n  }, [SMData, SMData.documents]);\r\n\r\n  const [showLegend, setShowLegend] = useState(false);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [modalInfo, setModalInfo] = useState({});\r\n  const [action, setAction] = useState(\"\");\r\n\r\n  const columns = getColumns();\r\n\r\n  function getColumns() {\r\n    const columns = [\r\n      {\r\n        dataField: \"name\",\r\n        text: \"Document Name\",\r\n        formatter: DocumentLabel,\r\n        headerStyle: { width: \"1%\" },\r\n        sort: true,\r\n      },\r\n    ];\r\n\r\n    let counter = 0;\r\n    console.log(data);\r\n    employees.forEach((e) => {\r\n      const name = `${e.first_name} ${e.last_name}, ${e.job_title}`;\r\n      columns.push({\r\n        ...buttonColumn(e.id, name),\r\n        // headerFormatter: FormattedEmployee,\r\n        // headerTitle: (col, row) => \"e.job\",\r\n        formatter: ToggleBtn,\r\n        formatExtraData: {\r\n          id: e.id,\r\n          data: data,\r\n          setData: setData,\r\n          // signatures: signatures,\r\n          // setSignatures: setSignatures,\r\n          i: counter++ % employees.length,\r\n        },\r\n      });\r\n    });\r\n\r\n    return columns;\r\n  }\r\n\r\n  function changedState(e) {\r\n    return e.state.includes(\"X\");\r\n  }\r\n\r\n  function sign(state) {\r\n    if (state === \"s\") return \"\";\r\n    return \"e\";\r\n  }\r\n\r\n  function cancelSign() {\r\n    return \"-\";\r\n  }\r\n\r\n  function resetSign(require_superior) {\r\n    return require_superior ? \"es\" : \"s\";\r\n  }\r\n\r\n  function updateState(require_superior, e) {\r\n    if (!changedState(e)) return e;\r\n\r\n    let state = e.state.replace(\"X\", \"\");\r\n\r\n    if (action === \"sign\") {\r\n      if (state === \"-\" || state === \"e\" || state === \"\") {\r\n        return { ...e, state: state };\r\n      }\r\n      fetch(proxy_url + \"/sign/superior\", {\r\n        method: \"POST\",\r\n        body: new URLSearchParams(`id=${e.sign_id}`),\r\n      });\r\n      // }).then((res) => {\r\n      // if (successResponse(res)) {\r\n      return { ...e, state: sign(state) };\r\n      // }\r\n      // });\r\n    }\r\n    if (action === \"cancelDuty\") {\r\n      if (state === \"-\") return { ...e, state: state };\r\n      fetch(proxy_url + \"/cancels\", {\r\n        method: \"POST\",\r\n        body: new URLSearchParams(e.sign_id.toString()),\r\n      });\r\n      return { ...e, state: cancelSign() };\r\n    }\r\n    if (action === \"trainAgain\") {\r\n      if (require_superior && state === \"e+s\") return { ...e, state: state };\r\n      if (!require_superior && state === \"e\") return { ...e, state: state };\r\n      fetch(proxy_url + \"/resigns\", {\r\n        method: \"POST\",\r\n        body: new URLSearchParams(e.sign_id.toString()),\r\n      });\r\n      state = resetSign(e.sign_id, require_superior);\r\n      return { ...e, state: state };\r\n    }\r\n  }\r\n\r\n  const handleAccept = () => {\r\n    const update = data.map((d) => {\r\n      return {\r\n        ...d,\r\n        employees: d.employees.map((e) => updateState(d.require_superior, e)),\r\n      };\r\n    });\r\n    setData(update);\r\n  };\r\n\r\n  const handleExport = () => {}; // TODO Export\r\n\r\n  return (\r\n    <>\r\n      <MyBootstrapTable\r\n        title=\"SkillMatrix\"\r\n        classes=\"skill-matrix-table\"\r\n        data={data}\r\n        columns={columns}\r\n        // horizontal scroll\r\n        wrapperClasses=\"table-responsive\"\r\n        rowClasses=\"text-nowrap\"\r\n      />\r\n      <RowButtons\r\n        data={data}\r\n        setAction={setAction}\r\n        setModalInfo={setModalInfo}\r\n        setShowModal={setShowModal}\r\n        handleAccept={handleAccept}\r\n        handleExport={handleExport}\r\n        showLegend={showLegend}\r\n        setShowLegend={setShowLegend}\r\n      />\r\n      {showLegend && <Legend />}\r\n      <ConfirmModal\r\n        showModal={showModal}\r\n        setShowModal={setShowModal}\r\n        modalInfo={modalInfo}\r\n        handleAccept={handleAccept}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SkillMatrix;\r\n","import React from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { recordType } from \"../../utils/functions\";\r\n\r\nconst ReportBtn = (cell, row) => {\r\n  return (\r\n    <Button\r\n      href={`/${recordType(row)}/report/${row.id}`}\r\n      type={\"link\"}\r\n      size=\"sm\"\r\n    >\r\n      Report\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default ReportBtn;\r\n","import React, { useState } from \"react\";\r\nimport EditBtn from \"../components/Buttons/EditBtn\";\r\nimport EditRecordModal from \"../components/Modals/EditRecordModal\";\r\nimport ReportBtn from \"./report/ReportBtn\";\r\nimport { buttonColumn, orderBy } from \"../utils/functions\";\r\nimport { FormattedRelease, Percentage } from \"../utils/Formatter\";\r\nimport MyBootstrapTable from \"../components/Tables/MyBootstrapTable\";\r\nimport { Redirect } from \"react-router\";\r\n\r\nconst FoundDocuments = ({ found, setFound }) => {\r\n  const [formData, setFormData] = useState();\r\n  const [report, setReport] = useState();\r\n\r\n  const columns = [\r\n    {\r\n      dataField: \"name\",\r\n      text: \"Name\",\r\n      sort: true,\r\n    },\r\n    {\r\n      dataField: \"release_date.Time\",\r\n      text: \"Release\",\r\n      formatter: FormattedRelease,\r\n      sort: true,\r\n    },\r\n    {\r\n      dataField: \"type\",\r\n      text: \"Type\",\r\n      sort: true,\r\n    },\r\n    {\r\n      dataField: \"branches\",\r\n      text: \"Branches\",\r\n      sort: true,\r\n    },\r\n    {\r\n      dataField: \"divisions\",\r\n      text: \"Divisions\",\r\n      sort: true,\r\n    },\r\n    {\r\n      dataField: \"departments\",\r\n      text: \"Departments\",\r\n      sort: true,\r\n    },\r\n    {\r\n      dataField: \"cities\",\r\n      text: \"Cities\",\r\n      sort: true,\r\n    },\r\n    {\r\n      dataField: \"complete\",\r\n      text: \"State\",\r\n      formatter: Percentage,\r\n      sort: true,\r\n    },\r\n    {\r\n      ...buttonColumn(\"EditBtn\"),\r\n      formatter: EditBtn,\r\n      formatExtraData: {\r\n        setFormData: setFormData,\r\n      },\r\n    },\r\n    {\r\n      ...buttonColumn(\"ReportBtn\"),\r\n      formatter: ReportBtn,\r\n      formatExtraData: {\r\n        setReport: setReport,\r\n      },\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <MyBootstrapTable\r\n        title=\"Found documents\"\r\n        data={found}\r\n        columns={columns}\r\n        defaultSorted={orderBy(\"name\")}\r\n        // horizontal scroll\r\n        wrapperClasses=\"table-responsive\"\r\n        rowClasses=\"text-nowrap\"\r\n      />\r\n      {formData && (\r\n        <EditRecordModal\r\n          setRecords={setFound}\r\n          formData={formData}\r\n          setFormData={setFormData}\r\n          actual={true}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FoundDocuments;\r\n","import React, { useState } from \"react\";\r\nimport EditBtn from \"../components/Buttons/EditBtn\";\r\nimport EditRecordModal from \"../components/Modals/EditRecordModal\";\r\nimport ReportBtn from \"./report/ReportBtn\";\r\nimport { buttonColumn, orderBy } from \"../utils/functions\";\r\nimport { FormattedDate, Percentage } from \"../utils/Formatter\";\r\nimport MyBootstrapTable from \"../components/Tables/MyBootstrapTable\";\r\nimport { Redirect } from \"react-router\";\r\n\r\nconst FoundTrainings = ({ found, setFound }) => {\r\n  const [formData, setFormData] = useState();\r\n  const [report, setReport] = useState();\r\n\r\n  const columns = [\r\n    {\r\n      dataField: \"name\",\r\n      text: \"Name\",\r\n      sort: true,\r\n    },\r\n    {\r\n      dataField: \"date.Time\",\r\n      text: \"Release\",\r\n      formatter: FormattedDate,\r\n      sort: true,\r\n    },\r\n    {\r\n      dataField: \"lector\",\r\n      text: \"Lector\",\r\n      sort: true,\r\n    },\r\n    {\r\n      dataField: \"agency\",\r\n      text: \"Agency\",\r\n      sort: true,\r\n    },\r\n    {\r\n      dataField: \"place\",\r\n      text: \"Place\",\r\n      sort: true,\r\n    },\r\n    {\r\n      dataField: \"complete\",\r\n      text: \"State\",\r\n      formatter: Percentage,\r\n      sort: true,\r\n    },\r\n    {\r\n      ...buttonColumn(\"EditBtn\"),\r\n      formatter: EditBtn,\r\n      formatExtraData: {\r\n        setFormData: setFormData,\r\n      },\r\n    },\r\n    {\r\n      ...buttonColumn(\"ReportBtn\"),\r\n      formatter: ReportBtn,\r\n      formatExtraData: {\r\n        setReport: setReport,\r\n      },\r\n    },\r\n  ];\r\n\r\n  if (report) {\r\n    return (\r\n      <Redirect\r\n        to={{\r\n          pathname: `/training/report`,\r\n          search: \"\" + report.id,\r\n        }}\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <MyBootstrapTable\r\n        title=\"Found trainings\"\r\n        data={found}\r\n        columns={columns}\r\n        defaultSorted={orderBy(\"name\")}\r\n        // horizontal scroll\r\n        wrapperClasses=\"table-responsive\"\r\n        rowClasses=\"text-nowrap\"\r\n      />\r\n      {formData && (\r\n        <EditRecordModal\r\n          setRecords={setFound}\r\n          formData={formData}\r\n          setFormData={setFormData}\r\n          actual={true}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FoundTrainings;\r\n","import React from \"react\";\r\nimport FoundDocuments from \"./FoundDocuments\";\r\nimport FoundTrainings from \"./FoundTrainings\";\r\n\r\nconst FoundRecords = ({ documents, setDocuments, trainings, setTrainings }) => {\r\n  return (\r\n    <>\r\n      <FoundDocuments found={documents} setFound={setDocuments} />\r\n      <FoundTrainings found={trainings} setFound={setTrainings} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FoundRecords;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport Filter from \"./Filter\";\r\nimport SkillMatrix from \"./skill-matrix/SkillMatrix\";\r\nimport {\r\n  getFetch,\r\n  prepareCombinations,\r\n  postFetch,\r\n  prepareFoundDocs,\r\n} from \"../utils/functions\";\r\nimport { PairContext } from \"../App\";\r\nimport FoundRecords from \"./FoundRecords\";\r\nimport { FetchLoading } from \"../components/FetchComponents\";\r\nimport { proxy_url } from \"../utils/data\";\r\n\r\nconst FinderPage = () => {\r\n  const pairs = useContext(PairContext);\r\n  const [cs, setCs] = useState([]); // all combinations\r\n\r\n  const [documents, setDocuments] = useState([]);\r\n  const [trainings, setTrainings] = useState([]);\r\n\r\n  const [SMData, setSMData] = useState([]);\r\n  const [showSM, setShowSM] = useState();\r\n\r\n  useEffect(() => {\r\n    getFetch(\"/combinations\").then((res) => setCs(prepareCombinations(res)));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getFetch(\"/document/actual\").then((res) => {\r\n      setDocuments(prepareFoundDocs(res, pairs));\r\n      console.log(\"document\", res);\r\n    });\r\n    getFetch(\"/training/all\").then((res) => {\r\n      console.log(\"training\", res);\r\n      setTrainings(res);\r\n    });\r\n  }, [cs]);\r\n\r\n  const resetTables = () => {\r\n    setDocuments([]);\r\n    setTrainings([]);\r\n  };\r\n\r\n  const searchByCombination = (filter) => {\r\n    resetTables();\r\n    postFetch(`/document/filter`, JSON.stringify(filter)).then((r) =>\r\n      setDocuments(prepareFoundDocs(r, pairs))\r\n    );\r\n  };\r\n\r\n  const searchByPerson = (person) => {\r\n    if (!person.employee && !person.lector) return;\r\n\r\n    const id = person.employee.value;\r\n\r\n    console.log(\"person\", person);\r\n    postFetch(`/training/filter`, `${JSON.stringify({\r\n      employee: id,\r\n      lector: person.lector.value,\r\n    })}`).then((r) => console.log(\"training by filter\", r));\r\n\r\n    resetTables();\r\n\r\n    // TEST\r\n    getFetch(`/document/manager/${id}`).then((res) => {\r\n      console.log(\"/document/manager/\", res);\r\n      setDocuments(res);\r\n    });\r\n    // return;\r\n\r\n    // getFetch(`/signed/signatures/${id}`).then((r) => {\r\n    //   console.log(\"rrrrrrrrrrrrrrrrrrrrr\", r);\r\n    //   // let trainings = addCompleteness(r.trainings, 100);\r\n    //   // setTrainings((prevState) => [...prevState, ...trainings]);\r\n    //\r\n    //   let docs = addCompleteness(r.documents, 100);\r\n    //   prepareFoundDocs(docs, pairs).forEach((doc) => {\r\n    //     if (!documents.includes(doc)) {\r\n    //       setDocuments((prevState) => [...prevState, doc]);\r\n    //     }\r\n    //   });\r\n    // });\r\n    //\r\n    // getFetch(`/unsigned/signatures/${id}`).then((r) => {\r\n    //   console.log(\"rrrrrrrrrrrrrrrrrrrrr\", r);\r\n    //   // let trainings = addCompleteness(r.trainings, 0);\r\n    //   // setTrainings((prevState) => [...prevState, ...trainings]);\r\n    //\r\n    //   let docs = addCompleteness(r.documents, 0);\r\n    //   prepareFoundDocs(docs, pairs).forEach((doc) => {\r\n    //     if (!documents.includes(doc)) {\r\n    //       setDocuments((prevState) => [...prevState, doc]);\r\n    //     }\r\n    //   });\r\n    // });\r\n  };\r\n\r\n  const matrixByCombination = (combination) => {\r\n    fetch(proxy_url + `/skill/matrix`, {\r\n      method: \"POST\",\r\n      body: new URLSearchParams(`filter=${JSON.stringify(combination)}`),\r\n    })\r\n      .then((result) => result.json())\r\n      .then((res) => {\r\n        console.log(`/skill/matrix by combination`, res);\r\n        setSMData(res);\r\n      });\r\n  };\r\n\r\n  const matrixBySuperior = (superior) => {\r\n    fetch(proxy_url + `/skill/matrix`, {\r\n      method: \"POST\",\r\n      body: new URLSearchParams(`superior_id=${superior.value}`),\r\n    })\r\n      .then((result) => result.json())\r\n      .then((res) => {\r\n        console.log(`/skill/matrix by superior`, res);\r\n        setSMData(res);\r\n      });\r\n  };\r\n\r\n  function addCompleteness(records, percentage) {\r\n    return records.map((rec) => {\r\n      return { ...rec, complete: percentage };\r\n    });\r\n  }\r\n\r\n  if (!cs.length) {\r\n    return <FetchLoading />;\r\n  }\r\n\r\n  return (\r\n    <div style={{ marginTop: \"1%\" }} className=\"finder\">\r\n      <Filter\r\n        showSM={showSM}\r\n        setShowSM={setShowSM}\r\n        matrixByCombination={matrixByCombination}\r\n        matrixBySuperior={matrixBySuperior}\r\n        searchByCombination={searchByCombination}\r\n        searchByPerson={searchByPerson}\r\n      />\r\n      {showSM ? (\r\n        <SkillMatrix SMData={SMData} />\r\n      ) : (\r\n        <FoundRecords\r\n          documents={documents}\r\n          setDocuments={setDocuments}\r\n          trainings={trainings}\r\n          setTrainings={setTrainings}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FinderPage;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { getFetch, orderBy } from \"../../utils/functions\";\r\nimport MyBootstrapTable from \"../../components/Tables/MyBootstrapTable\";\r\nimport { format_date } from \"../../utils/Formatter\";\r\n\r\nconst ReportDocument = ({ match }) => {\r\n  const [reports, setReports] = useState([]);\r\n\r\n  const [employees, setEmployees] = useState([]);\r\n  const [reqSuperior, setReqSuperior] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const id = match.params.id;\r\n\r\n    getFetch(`/document/report/${id}`).then((res) => {\r\n      console.log(\"res\", res);\r\n      console.log(\"id\", id);\r\n      if (res.length === 1 && res[0].id == id) {\r\n        console.log(\"hello\");\r\n        prepareReport(res[0]);\r\n      } else {\r\n        setReports(res);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  const prepareReport = (res) => {\r\n    setReqSuperior(res.require_superior);\r\n\r\n    setEmployees(\r\n      res.signatures.map((sign) => {\r\n        const { employee: e } = sign;\r\n        return {\r\n          id: sign.employee_id,\r\n          name: `${e.first_name} ${e.last_name}`,\r\n          e_date: format_date(sign.e_date),\r\n          s_date: format_date(sign.s_date),\r\n        };\r\n      })\r\n    );\r\n  };\r\n\r\n  let columns = [\r\n    {\r\n      dataField: \"name\",\r\n      text: \"Full name\",\r\n      sort: true,\r\n    },\r\n    {\r\n      dataField: \"e_date\",\r\n      text: \"Sign Date\",\r\n      sort: true,\r\n    },\r\n  ];\r\n\r\n  if (reqSuperior) {\r\n    columns = [\r\n      ...columns,\r\n      {\r\n        dataField: \"s_date\",\r\n        text: \"Superior\",\r\n        sort: true,\r\n      },\r\n    ];\r\n  }\r\n\r\n  const title = `Prezencna listina`;\r\n\r\n  const ReportLink = ({ rep }) => {\r\n    return (\r\n      <p>\r\n        <a href={`/document/report/${rep.id}`}>{`${rep.name}, version: ${\r\n          rep.version\r\n        }, date: ${format_date(rep.release_date)}`}</a>\r\n      </p>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {reports.map((rep) => (\r\n        <ReportLink rep={rep} />\r\n      ))}\r\n      <MyBootstrapTable\r\n        title={title}\r\n        data={employees}\r\n        columns={columns}\r\n        defaultSorted={orderBy(\"name\")}\r\n        // horizontal scroll\r\n        wrapperClasses=\"table-responsive\"\r\n        rowClasses=\"text-nowrap\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ReportDocument;\r\n","import React from \"react\";\r\nimport { useLocation } from \"react-router\";\r\n\r\nconst Page404 = () => {\r\n  const pathname = useLocation().pathname;\r\n\r\n  return (\r\n    <>\r\n      <h2 className=\"pt-5\">Error 404: Page not found</h2>\r\n      <h5 className=\"pt-3\">\r\n        Not match for <code>{pathname}</code>\r\n      </h5>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Page404;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { getFetch, orderBy } from \"../../utils/functions\";\r\nimport MyBootstrapTable from \"../../components/Tables/MyBootstrapTable\";\r\nimport { format_date } from \"../../utils/Formatter\";\r\n\r\nconst ReportTraining = ({ match }) => {\r\n  const [preData, setPreData] = useState([]);\r\n  const [employees, setEmployees] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const id = match.params.id;\r\n\r\n    getFetch(`/training/report/${id}`).then((res) => {\r\n      console.log(\"res\", res);\r\n      setPreData([\r\n        {\r\n          label: \"Názov školenia:\",\r\n          value: res.name,\r\n        },\r\n        {\r\n          label: \"Dátum a miesto konania školenia:\",\r\n          value: format_date(res.date) + \" \" + res.place,\r\n        },\r\n        {\r\n          label: \"Názov vzdelávacej agentúry:\",\r\n          value: res.agency,\r\n        },\r\n        {\r\n          label: \"Meno a priezvisko školiteľa:\",\r\n          value: res.lector,\r\n        },\r\n        {\r\n          label: \"Podpis školiteľa:\",\r\n          value: \"?\",\r\n        },\r\n      ]);\r\n\r\n      setEmployees(\r\n        res.signatures.map((sign) => {\r\n          const e = sign.employee;\r\n          return {\r\n            id: e.id,\r\n            // name: `${e.first_name} ${e.last_name}`,\r\n            name: `${e.first_name} ${e.last_name}`,\r\n            date: format_date(sign.date),\r\n          };\r\n        })\r\n      );\r\n    });\r\n  }, []);\r\n\r\n  const columns = [\r\n    {\r\n      dataField: \"name\",\r\n      text: \"Full name\",\r\n      sort: true,\r\n    },\r\n    {\r\n      dataField: \"department\",\r\n      text: \"Department\",\r\n      sort: true,\r\n    },\r\n    {\r\n      dataField: \"date\",\r\n      text: \"Sign Date\",\r\n      sort: true,\r\n    },\r\n  ];\r\n\r\n  const title = `Prezencna listina`;\r\n\r\n  const preColumns = [\r\n    {\r\n      dataField: \"label\",\r\n      text: \"\",\r\n    },\r\n    {\r\n      dataField: \"value\",\r\n      text: \"\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div>\r\n      <MyBootstrapTable\r\n        title={title}\r\n        data={preData}\r\n        columns={preColumns}\r\n        defaultSorted={orderBy(\"name\")}\r\n        headerClasses=\"d-none\"\r\n        classes=\"report\"\r\n      />\r\n      <br />\r\n      <MyBootstrapTable\r\n        data={employees}\r\n        columns={columns}\r\n        defaultSorted={orderBy(\"name\")}\r\n        // horizontal scroll\r\n        wrapperClasses=\"table-responsive\"\r\n        rowClasses=\"text-nowrap\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ReportTraining;\r\n","import React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport { Redirect } from \"react-router\";\r\n\r\nimport Container from \"react-bootstrap/Container\";\r\nimport { getUser, isAdmin } from \"./utils/functions\";\r\n\r\nimport RecordsToSignPage from \"./unsigned-records/RecordsToSignPage\";\r\nimport LoginPage from \"./login/LoginPage\";\r\nimport LogoutPage from \"./login/LogoutPage\";\r\nimport SignedRecordsPage from \"./signed-records/SignedRecordsPage\";\r\nimport AddRecordPage from \"./add-record/AddRecordPage\";\r\nimport SavedRecordsPage from \"./saved-records/SavedRecordsPage\";\r\nimport SettingsPage from \"./settings/SettingsPage\";\r\nimport FinderPage from \"./finder/FinderPage\";\r\nimport ReportDocument from \"./finder/report/ReportDocument\";\r\nimport Page404 from \"./Page404\";\r\nimport ReportTraining from \"./finder/report/ReportTraining\";\r\n\r\nconst Routes = () => {\r\n  const user = getUser();\r\n  const admin = isAdmin();\r\n\r\n  /** Show the component only when the user is logged in\r\n   *  Otherwise, redirect the user to login page */\r\n  const Private = ({ component: Component, ...rest }) => {\r\n    if (!user) {\r\n      return <Redirect to=\"/login\" />;\r\n    }\r\n    return <Route {...rest} component={Component} />;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Container>\r\n        <Switch>\r\n          {/* HomeRoute */}\r\n          <Route\r\n            exact\r\n            path=\"/\"\r\n            render={() => {\r\n              return getUser() ? (\r\n                <Redirect to=\"/records-to-sign\" component={RecordsToSignPage} />\r\n              ) : (\r\n                <Redirect to=\"/login\" component={LoginPage} />\r\n              );\r\n            }}\r\n          />\r\n          <Route path=\"/login\" component={LoginPage} />\r\n          <Route path=\"/logout\" component={LogoutPage} />\r\n          <Private path=\"/records-to-sign\" component={RecordsToSignPage} />\r\n          <Private path=\"/signed-records\" component={SignedRecordsPage} />\r\n          {admin && (\r\n            <>\r\n              <Private path=\"/add-record\" component={AddRecordPage} />\r\n              <Private path=\"/saved-record\" component={SavedRecordsPage} />\r\n              <Private path=\"/settings\" component={SettingsPage} />\r\n              <Private path=\"/document/report/:id\" component={ReportDocument} />\r\n              <Private path=\"/training/report/:id\" component={ReportTraining} />\r\n            </>\r\n          )}\r\n          <Route path=\"*\" component={Page404} />\r\n        </Switch>\r\n      </Container>\r\n      <div className=\"large-container\">\r\n        {admin && <Private path=\"/finder\" component={FinderPage} />}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Routes;\r\n","export default __webpack_public_path__ + \"static/media/logo.923adaad.png\";","import React from \"react\";\r\nimport { Navbar, Nav, NavLink } from \"react-bootstrap\";\r\nimport { getLanguage, getUser, isAdmin } from \"./utils/functions\";\r\nimport { wording } from \"./utils/wording\";\r\nimport { useLocation } from \"react-router\";\r\nimport logo from \"./images/logo.png\"\r\nconst Navigation = () => {\r\n  const user = getUser();\r\n  const admin = isAdmin();\r\n\r\n  const language = getLanguage();\r\n  let x = language === \"sk\" ? wording.sk : wording.en; // TODO languages !!!\r\n  x = x.navigation;\r\n\r\n  const LoginNav = () => (\r\n    <>\r\n      <NavLink href=\"/records-to-sign\">{x.recordsToSign}</NavLink>\r\n      <NavLink href=\"/signed-records\">{x.signedRecords}</NavLink>\r\n      {admin && (\r\n        <>\r\n          <NavLink href=\"/add-record\">{x.addRecord}</NavLink>\r\n          <NavLink href=\"/saved-record\">{x.savedRecords}</NavLink>\r\n          <NavLink href=\"/finder\">{x.finder}</NavLink>\r\n          <NavLink href=\"/settings\">{x.settings}</NavLink>\r\n        </>\r\n      )}\r\n      <NavLink href=\"/logout\">{x.logout}</NavLink>\r\n    </>\r\n  );\r\n\r\n  const LogoutNav = () => <NavLink href=\"/login\">{x.login}</NavLink>;\r\n\r\n  const Name = () => {\r\n    const name = user ? `${user.first_name} ${user.last_name}` : \"\";\r\n    return <span style={{ color: \"white\" }}>{name}</span>;\r\n  };\r\n\r\n  return (\r\n    <Navbar\r\n      expand=\"md\"\r\n      bg=\"dark\"\r\n      variant=\"dark\"\r\n      sticky=\"top\"\r\n      className=\"navigation\"\r\n    >\r\n      <Navbar.Brand href=\"/\">\r\n        <img\r\n          alt=\"logo\"\r\n          src={logo}\r\n          width=\"50\"\r\n          height=\"50\"\r\n          className=\"d-inline-block align-top\"\r\n        />\r\n      </Navbar.Brand>\r\n      <Name />\r\n      <Navbar.Toggle />\r\n      <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n        <Nav\r\n          className=\"ml-auto\"\r\n          variant=\"pills\"\r\n          activeKey={useLocation().pathname}\r\n        >\r\n          {user ? <LoginNav /> : <LogoutNav />}\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","class IdleTimer {\r\n\r\n  constructor({ timeout, onTimeout }) {\r\n    this.timeout = timeout;\r\n    this.onTimeout = onTimeout;\r\n\r\n    this.eventHandler = this.updateExpiredTime.bind(this);\r\n    this.tracker();\r\n    this.startInterval();\r\n  }\r\n\r\n  startInterval() {\r\n    this.updateExpiredTime();\r\n\r\n    this.interval = setInterval(() => {\r\n      const expiredTime = parseInt(localStorage.getItem(\"_expiredTime\"), 10);\r\n      if (expiredTime < Date.now()) {\r\n        if (this.onTimeout) {\r\n          this.onTimeout();\r\n          this.cleanUp();\r\n        }\r\n      }\r\n    }, 1000);\r\n  }\r\n\r\n  updateExpiredTime() {\r\n    if (this.timeoutTracker) {\r\n      clearTimeout(this.timeoutTracker);\r\n    }\r\n    this.timeoutTracker = setTimeout(() => {\r\n      localStorage.setItem(\"_expiredTime\", Date.now() + this.timeout * 1000);\r\n    }, 300);\r\n  }\r\n\r\n  tracker() {\r\n    window.addEventListener(\"mousemove\", this.eventHandler);\r\n    window.addEventListener(\"scroll\", this.eventHandler);\r\n    window.addEventListener(\"keydown\", this.eventHandler);\r\n  }\r\n\r\n  cleanUp() {\r\n    localStorage.removeItem(\"_expiredTime\");\r\n    clearInterval(this.interval);\r\n    window.removeEventListener(\"mousemove\", this.eventHandler);\r\n    window.removeEventListener(\"scroll\", this.eventHandler);\r\n    window.removeEventListener(\"keydown\", this.eventHandler);\r\n  }\r\n}\r\nexport default IdleTimer;\r\n","import React, { createContext, useEffect, useState } from \"react\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport Routes from \"./Routes\";\r\n\r\nimport Navigation from \"./Navigation.jsx\";\r\nimport { getUser, removeUser, getFetch, redirectTo } from \"./utils/functions\";\r\nimport IdleTimer from \"./utils/IdleTimer\";\r\n\r\nimport { comboFields, TIMEOUT } from \"./utils/data\";\r\n\r\nexport const PairContext = createContext(undefined);\r\n\r\nfunction App() {\r\n  const [pairs, setPairs] = useState({\r\n    branches: [],\r\n    divisions: [],\r\n    cities: [],\r\n    departments: [],\r\n  });\r\n\r\n  /** Load all branches, divisions etc. to easily find names for their ids */\r\n  useEffect(() => {\r\n    const _pairs = {};\r\n    comboFields.forEach((field) => {\r\n      getFetch(`/${field}`).then((data) => (_pairs[field] = data));\r\n    });\r\n    setPairs(_pairs);\r\n  }, []);\r\n\r\n  /** Set timer to logout not active user after TIMEOUT expired\r\n   *  onTimeOut the user will be logout and redirect to /login\r\n   *  - TIMEOUT can be changed in ./utils/data */\r\n  useEffect(() => {\r\n    const timer = new IdleTimer({\r\n      timeout: TIMEOUT,\r\n      onTimeout: () => {\r\n        if (getUser()) {\r\n          removeUser();\r\n          redirectTo(\"/login\");\r\n        }\r\n      },\r\n    });\r\n    return () => timer.cleanUp();\r\n  }, []);\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <Navigation />\r\n      <PairContext.Provider value={pairs}>\r\n        <Routes />\r\n      </PairContext.Provider>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './main.css';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}