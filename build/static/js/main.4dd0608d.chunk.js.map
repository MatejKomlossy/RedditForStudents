{"version":3,"sources":["utils/data.js","utils/functions.js","components/Tables/MyBootstrapTable.jsx","utils/Formatter.jsx","components/Buttons/TableBtns.jsx","components/FetchComponents.jsx","utils/useDataApi.js","components/Modals/ConfirmModal.jsx","unsigned-records/RecordsToSignPage.jsx","unsigned-records/columns.js","components/CustomAlert.jsx","utils/wording.js","login/LoginForm.jsx","login/LoginPage.jsx","login/secret.jsx","login/LogoutPage.jsx","signed-records/SignedRecordsPage.jsx","signed-records/columns.js","components/Forms/MyFormGroup.jsx","components/Forms/CombinationForm.jsx","components/Modals/CombinationModal.jsx","components/Tables/Combinations.jsx","components/Forms/DocumentForm.jsx","components/Forms/TrainingForm.jsx","add-record/AddRecordPage.jsx","components/Buttons/EditBtn.jsx","saved-records/columns.js","components/Modals/EditRecordModal.jsx","saved-records/SavedRecordsPage.jsx","settings/SettingsPage.jsx","finder/FilterDocuments.jsx","finder/skill-matrix/ToggleBtn.jsx","finder/skill-matrix/SkillMatrixComponents.jsx","finder/skill-matrix/SkillMatrix.jsx","finder/report/ReportBtn.jsx","finder/report/ReportDocumentModal.jsx","finder/FoundDocuments.jsx","finder/report/ReportTrainingModal.jsx","finder/FoundTrainings.jsx","finder/FilterTrainings.jsx","finder/FinderPage.jsx","Page404.jsx","Routes.jsx","images/logo.png","Navigation.jsx","utils/IdleTimer.js","App.js","index.js"],"names":["proxy_url","comboFields","comboFieldsSingular","types","getTimestamp","today","Date","timestamp","getDate","getMonth","getFullYear","getHours","getMinutes","console","log","buttonColumn","field","text","dataField","sort","headerStyle","width","recordType","record","Object","keys","includes","requireSuperior","rec","require_superior","isSuperior","doc","signatures","length","superior_id","getUser","id","nonExpandableDocs","documents","map","orderBy","order","goodMsg","body","variant","badMsg","successResponse","response","status","getSelectOptions","hidden","value","uuid","getOptionsForSelect","pairs","branches","n","label","name","divisions","departments","cities","resolveFilter","f","branch","v","join","city","department","division","getState","sign","cancel","state","e_date","Valid","s_date","getAssignedTo","document","employees","assigned_to","split","e","combs","remEms","values","combination","forEach","i","push","getFieldName","removedEmployees","getEmployeeName","find","toString","getEmployeeLabel","getDateObject","date","Time","getDateString","substr","resolveCombinations","combinations","c_string","c","r_string","sortEmployeesByName","a","b","last_name","employee","first_name","department_id","dep","d","prepareFoundDocs","found","getLabels","cs","labels","unique","Set","flat","undefined","doc_cs","getFetch","url","fetch","method","then","result","json","postFetch","isAdmin","role","JSON","parse","sessionStorage","getItem","removeUser","removeItem","MyBootstrapTable","title","data","columns","expandRow","classes","rest","TableHeader","style","borderRadius","textAlign","border","margin","padding","marginTop","keyField","hover","noDataIndication","defaultSorted","FullName","_","format_date","reverse","FormattedDate","row","FormattedDeadline","deadline","FormattedRelease","release_date","FormattedSuperiorDate","FormattedTrainingDate","FormattedEmployeeDate","Percentage","Math","round","complete","NameWithLink","link","href","target","rel","DocumentLabel","ExclamationName","color","marginBottom","expired","now","MissedBtn","cell","index","setModalInfo","setShowModal","asSuperior","Button","onClick","size","className","SignedBtn","FetchLoading","Spinner","animation","FetchError","useDataApi","useState","setData","error","setError","isLoaded","setIsLoaded","useEffect","res","ConfirmModal","showModal","modalInfo","handleAccept","closeModal","bodyText","Modal","show","onHide","centered","Header","closeButton","Title","Body","Footer","RecordsToSignPage","URL","trainings","setTrainings","setDocuments","message","fetchSign","URLSearchParams","signAsEmployee","signature_id","me","record_type","updateTrainings","updateSuperiorDocs","updateEmployeeDocs","signAsSuperior","filter","t","update","s","trn_columns","formatter","formatExtraData","trainingsToSignColumns","doc_columns","documentsToSignColumns","expandColumns","documentsToSignExpandColumns","onlyOneExpanding","nonExpandable","renderer","CustomAlert","notification","Alert","wording","sk","loginPage","header","login","password","submit","wrongLogin","wrongCard","navigation","recordsToSign","signedRecords","addRecord","savedRecords","finder","settings","logout","en","LoginForm","onSubmit","language","setLanguage","useForm","register","handleSubmit","active","Container","Form","align","ButtonGroup","disabled","Group","Label","Control","ref","required","type","LoginPage","require","setNotification","cardInput","cardInputTimeout","setTimeout","checkInput","findByCard","clearTimeout","event","engInput","String","fromCharCode","keyCode","toLowerCase","isLetter","isNumber","isValuable","addEventListener","removeEventListener","setUser","user","setItem","stringify","window","location","reload","input","catch","to","pass","LogoutPage","SignedRecordsPage","documentsColumns","trainingsColumns","MyFormGroup","placeholder","as","Row","column","sm","Col","CombinationForm","prefill","setCombination","useContext","PairContext","options","handleSelect","selector","opt","isMulti","defaultValue","isDisabled","onChange","CombinationModal","setAssignedTo","setEmptyAssign","setDisabled","setEmployees","preview","assignedTo","resolveEmployees","prev","prevState","Combinations","setPrefill","openModal","AddIcon","OverlayTrigger","placement","overlay","Tooltip","editCombination","deleteCombination","wrapperClasses","rowClasses","DocumentForm","setRecords","formData","actual","setFormData","submitData","setSubmitData","defaultValues","action","setAction","selectedType","setSelectedType","sent","setSent","currentID","setCurrentID","setCombinations","emptyAssign","prepareCombinations","executeSubmit","correctDocumentFormData","upsert","updateSavedRec","r","upsertConfirm","filterSavedRec","p","findIndex","validate","Check","inline","valueAsNumber","TrainingForm","attendees","setAttendees","emptyAttendees","setEmptyAttendees","getEmployeesNames","correctTrainingFormData","labelKey","multiple","selected","AddRecordPage","formType","setFormType","EditBtn","SendBtn","setRow","EditRecordModal","props","SavedRecordsPage","doc_data","trn_data","isLoaded2","error2","savedTrainingsColumns","savedDocumentsColumns","SettingsPage","cardsFile","setCardsFile","employeesFile","setEmployeesFile","notification2","setNotification2","clearErrors","crossOrigin","files","FormData","append","Error","IsWarning","Msg","initCombination","initPerson","lector","marginLeft","activeBtn","backgroundColor","passiveBtn","FilterDocuments","showSM","setShowSM","setSMData","getAllRecords","person","setPerson","optionsStructure","searchType","setSearchType","searched","setSearched","handleSearch","toggle","searchForMatrix","searchForTable","tableByPerson","tableByCombination","matrixByPerson","matrixByCombination","getBtnStyle","colors","selectorStructure","isClearable","selectStructure","selectPerson","ToggleBtn","rowIndex","mark","unMarkState","styledBtn","getColor","borderColor","borderWidth","stt","new_employees","copy","l","getLabel","RowButtons","showLegend","setShowLegend","handleClick","Legend","Badge","textColor","background","height","fontSize","fontWeight","Card","Subtitle","Text","SkillMatrix","SMData","sample","sortedEmployees","j","emp","signature","employee_id","sign_id","counter","job_title","getColumns","changedState","replace","resetSign","updateState","handleExport","ReportBtn","setReport","ReportDocumentModal","reports","setReports","activeReport","setActiveReport","reqSuperior","setReqSuperior","preData","setPreData","componentRef","useRef","handlePrint","useReactToPrint","content","current","rep","prepareReport","sorted","superiors","ids","res2","emps","ReportLink","version","marginRight","position","right","display","src","left","headerClasses","bottom","FoundDocuments","setFound","report","ReportTrainingModal","place","agency","FoundTrainings","FilterTrainings","lectors","setLectors","persons","setPersons","selectorPerson","FinderPage","prepareEmployees","Page404","pathname","useLocation","Routes","admin","Private","Component","component","exact","path","render","Navigation","x","LoginNav","NavLink","LogoutNav","Name","Navbar","expand","bg","sticky","Brand","alt","logo","Toggle","Collapse","Nav","activeKey","IdleTimer","timeout","onTimeout","this","eventHandler","updateExpiredTime","bind","tracker","startInterval","interval","setInterval","parseInt","localStorage","cleanUp","timeoutTracker","clearInterval","createContext","App","setPairs","_pairs","timer","Provider","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.4dd0608d.chunk.js","sourcesContent":["// export const proxy_url = \"http://5.178.48.91:8180\";\nexport const proxy_url = \"http://localhost:8180\";\nexport const TIMEOUT = 60 * 100; // 100 minutes\n\nexport const comboFields = [\"branches\", \"cities\", \"departments\", \"divisions\"];\nexport const comboFieldsSingular = [\"branch\", \"city\", \"department\", \"division\"];\n\nexport const types = [\"TPK\", \"OS\", \"PP\", \"PL\"];\n","import React from \"react\";\nimport uuid from \"react-uuid\";\nimport { comboFields, comboFieldsSingular } from \"./data\";\nimport { proxy_url } from \"./data\";\n\nexport const getTimestamp = () => {\n  const today = new Date();\n  const date =\n    today.getDate() + \"-\" + (today.getMonth() + 1) + \"-\" + today.getFullYear();\n  const time = today.getHours() + \":\" + today.getMinutes();\n  const timestamp = date + \" \" + time;\n  console.log(\"timestamp\", timestamp);\n  return timestamp;\n};\n\n// Tables\nexport const buttonColumn = (field = \"\", text = \"\") => {\n  return {\n    dataField: \"\" + field,\n    text: text,\n    sort: true,\n    headerStyle: { width: \"1%\" },\n  };\n};\n\nexport const recordType = (record) => {\n  return Object.keys(record).includes(\"link\") ||\n    Object.keys(record).includes(\"document_id\")\n    ? \"document\"\n    : \"training\";\n};\n\nexport const requireSuperior = (rec) => rec.require_superior;\n\nexport const isSuperior = (doc) => {\n  if (doc.signatures.length > 1)\n    return (\n      doc.signatures[0].superior_id === getUser().id ||\n      doc.signatures[1].superior_id === getUser().id\n    );\n  return doc.signatures[0].superior_id === getUser().id;\n};\n\nexport const nonExpandableDocs = (documents) => {\n  return documents.map((doc) => {\n    if (!(requireSuperior(doc) && isSuperior(doc))) return doc.id;\n  });\n};\n\nexport const orderBy = (field, order = \"asc\") => {\n  return [{ dataField: field, order: order }];\n};\n\n// Helpers\nexport const goodMsg = (body) => {\n  return { variant: \"success\", body: body };\n};\n\nexport const warningMsg = (body) => {\n  return { variant: \"warning\", body: body };\n};\n\nexport const badMsg = (body) => {\n  return { variant: \"danger\", body: body };\n};\n\nexport const successResponse = (response) => {\n  return 200 <= response.status && response.status <= 299;\n};\n\nexport const getLanguage = () => JSON.parse(sessionStorage.getItem(\"language\"));\nexport const delay = (ms) => new Promise((res) => setTimeout(res, ms));\n\nexport const getSelectOptions = (field) => {\n  return (\n    <>\n      <option hidden value=\"\">\n        Select option ...\n      </option>\n      {field.map((value) => (\n        <option value={value} key={uuid()}>\n          {value}\n        </option>\n      ))}\n    </>\n  );\n};\n\nexport const setOf = (array) => {\n  const set = [];\n  array.forEach((arr) => {\n    if (!set.find((res) => res.value === arr.value)) set.push(arr);\n  });\n  return set; // array of unique objects by their .value\n};\n\nexport const prepareCombinations = (combinations) => {\n  return combinations.map((c) => {\n    const combination = {};\n    comboFieldsSingular.forEach((field) => {\n      combination[field] = {\n        value: c[`${field}_id`],\n        label: c[`${field}_name`],\n      };\n    });\n    return combination;\n  });\n};\n\nexport const getOptionsForSelect = (pairs) => {\n  return {\n    branches: pairs.branches?.map((n) => {\n      return { value: n.id, label: n.name };\n    }),\n    divisions: pairs.divisions?.map((n) => {\n      return { value: n.id, label: n.name };\n    }),\n    departments: pairs.departments?.map((n) => {\n      return { value: n.id, label: n.name };\n    }),\n    cities: pairs.cities?.map((n) => {\n      return { value: n.id, label: n.name };\n    }),\n  };\n};\n\nexport const resolveFilter = (f) => {\n  return {\n    branch: f.branches.map((v) => v.value).join(\",\"),\n    city: f.cities.map((v) => v.value).join(\",\"),\n    department: f.departments.map((v) => v.value).join(\",\"),\n    division: f.divisions.map((v) => v.value).join(\",\"),\n  };\n};\n\nfunction getState(sign, require_superior) {\n  if (!sign.id) return \"_\";\n  if (sign.cancel) return \"-\";\n  let state = sign.e_date.Valid ? \"\" : \"e\";\n  if (require_superior && !sign.s_date.Valid) {\n    state += \"s\";\n  }\n  return state;\n}\n\nexport const prepareSMData = (docs) => {\n  return docs.map((doc) => {\n    return {\n      id: doc.id,\n      name: doc.name,\n      require_superior: doc.require_superior,\n      deadline: doc.deadline.Time,\n      employees: doc.signatures.map((sign) => {\n        return {\n          id: sign.employee.id,\n          sign_id: sign?.id,\n          state: getState(sign, doc.require_superior),\n        };\n      }),\n      link: doc.link,\n    };\n  });\n};\n\nexport const getAssignedTo = (document, pairs, employees) => {\n  if (!document) return [];\n\n  return document.assigned_to.split(\"&\").map((e) => {\n    const [combs, remEms, _] = e.split(\"#\");\n    const values = combs.split(\"; \");\n    const combination = { id: uuid() };\n\n    comboFields.forEach((field, i) => {\n      combination[field] = [];\n      if (values[i] !== \"x\") {\n        const ids = values[i].split(\",\");\n        ids.forEach((id) => {\n          combination[field].push({\n            value: id,\n            label: getFieldName(field, id, pairs),\n          });\n        });\n      }\n    });\n    combination.removedEmployees = [];\n    if (!remEms) return combination;\n\n    const e_ids = remEms.split(\",\");\n    e_ids.forEach((id) => {\n      combination.removedEmployees.push({\n        value: id,\n        label: getEmployeeName(id, employees, pairs.departments),\n      });\n    });\n    return combination;\n  });\n};\n\nexport const getFieldName = (field, id, pairs) => {\n  if (!pairs) return \"unknown\";\n  return pairs[field]?.find((f) => f.id == id)?.name || \"unknown\";\n};\n\nexport const getEmployeeName = (id, employees, departments) => {\n  if (!employees) return \"unknown\";\n\n  const e = employees.find((e) => e.id.toString() === id);\n  if (!e) return \"unknown\";\n\n  return getEmployeeLabel(e, departments);\n};\n\nexport const getEmployeesNames = (formData, employees) => {\n  employees = sortEmployeesByName(employees);\n  if (!formData || !formData.employees) return [];\n\n  return formData.employees\n    .split(\",\")\n    .map((a) => employees.find((e) => e.id == a));\n};\n\nexport const prefillDocumentForm = (data) => {\n  if (!data) return {};\n\n  return {\n    ...data,\n    release_date: getDateString(data.release_date),\n    deadline: getDateString(data.deadline),\n  };\n};\n\nexport const prefillTrainingForm = (data) => {\n  if (!data) return {};\n\n  return {\n    ...data,\n    date: getDateString(data.date),\n    deadline: getDateString(data.deadline),\n  };\n};\n\nexport const correctTrainingFormData = (data, attendees) => {\n  return {\n    ...data,\n    date: getDateObject(data.date),\n    deadline: getDateObject(data.deadline),\n    employees: attendees.map((a) => a.id).join(\",\"),\n  };\n};\n\nexport const correctDocumentFormData = (data, combinations) => {\n  return {\n    ...data,\n    release_date: getDateObject(data.release_date),\n    deadline: getDateObject(data.deadline),\n    assigned_to: resolveCombinations(combinations),\n  };\n};\n\nconst getDateObject = (date) => {\n  return {\n    Time: date + \"T00:00:00Z\",\n    Valid: true,\n  };\n};\n\nconst getDateString = (date) => date.Time.substr(0, 10);\n\nexport const resolveCombinations = (combinations) => {\n  const n = combinations.map((combination) => {\n    let c_string = comboFields\n      .map((field) => {\n        const values = combination[field];\n        console.log(\"values\", values);\n        if (!values.length) return \"x\";\n        return values.map((c) => c.value).join(\",\");\n      })\n      .join(\"; \");\n    const r_string = combination.removedEmployees.map((c) => c.value).join(\",\");\n    return `${c_string}#${r_string}#`;\n  });\n  console.log(n);\n  return n.join(\"&\");\n};\n\nexport const sortEmployeesByName = (employees) => {\n  return employees.sort(function (a, b) {\n    if (a.last_name < b.last_name) {\n      return -1;\n    }\n    if (a.last_name > b.last_name) {\n      return 1;\n    }\n    return 0;\n  });\n};\n\nexport const prepareEmployees = (employees, departments) => {\n  if (!departments) return [];\n\n  return sortEmployeesByName(employees).map((e) => {\n    return {\n      value: e.id,\n      label: getEmployeeLabel(e, departments),\n    };\n  });\n};\n\nexport const getEmployeeLabel = (employee, departments) => {\n  const { id, first_name, last_name, department_id } = employee;\n  const dep = departments.find((d) => d.id === department_id)?.name;\n  return `${first_name} ${last_name} [${id}, ${dep}]`;\n};\n\nexport const prepareFoundDocs = (found, pairs) => {\n  if (!found.length) return [];\n\n  function getLabels(cs, field) {\n    const labels = cs.map((c) => c[field].map((f) => f.label));\n    const unique = [...new Set(labels.flat())];\n    if (unique[0] === undefined) {\n      return \"*\";\n    }\n    return unique.join(\", \");\n  }\n\n  return found.map((doc) => {\n    const doc_cs = getAssignedTo(doc, pairs);\n    return {\n      ...doc,\n      branches: getLabels(doc_cs, \"branches\"),\n      cities: getLabels(doc_cs, \"cities\"),\n      divisions: getLabels(doc_cs, \"divisions\"),\n      departments: getLabels(doc_cs, \"departments\"),\n    };\n  });\n};\n\n// FETCHERS\nexport const getFetch = (url) => {\n  return fetch(proxy_url + url, {\n    method: \"GET\",\n  }).then((result) => result.json());\n};\n\nexport const postFetch = (url, body) => {\n  console.log(\"body\", body);\n  return fetch(proxy_url + url, {\n    method: \"POST\",\n    body: body,\n  }).then((result) => result.json());\n};\n\n// BROWSER\nexport const reloadPage = () => window.location.reload(false);\nexport const redirectTo = (path) => window.location.replace(path);\nexport const isAdmin = () => getUser() !== null && getUser().role === \"admin\";\nexport const getUser = () => JSON.parse(sessionStorage.getItem(\"user\"));\nexport const removeUser = () => sessionStorage.removeItem(\"user\");\nexport const setUser = (user) =>\n  sessionStorage.setItem(\"user\", JSON.stringify(user));\n","import BootstrapTable from \"react-bootstrap-table-next\";\nimport React from \"react\";\n\nconst MyBootstrapTable = ({\n  title,\n  data,\n  columns,\n  order,\n  expandRow,\n  classes,\n  ...rest\n}) => {\n  const TableHeader = () => {\n    if (!title) return null;\n    return (\n      <h5\n        style={{\n          borderRadius: \"0.25em\",\n          textAlign: \"center\",\n          border: \"2px solid gray\",\n          margin: \"2% 0\",\n          padding: \"0.5em\",\n          marginTop: \"1.5%\",\n        }}\n      >\n        {title}\n      </h5>\n    );\n  };\n\n  const EmptyTable = () => <i>Table is empty</i>;\n\n  return (\n    <>\n      <TableHeader />\n      <BootstrapTable\n        keyField=\"id\"\n        hover\n        classes={classes}\n        data={data}\n        columns={columns}\n        noDataIndication={EmptyTable}\n        defaultSorted={order}\n        expandRow={expandRow}\n        {...rest}\n      />\n    </>\n  );\n};\n\nexport default MyBootstrapTable;\n","import React from \"react\";\nimport { ExclamationTriangle } from \"react-bootstrap-icons\";\n\n/** Couple of simple formatting functions to displays some cells of table  */\nexport const FullName = (_, { employee }) => {\n  if (!employee) return <>ME</>;\n\n  return (\n    <>\n      {employee.first_name} {employee.last_name}\n    </>\n  );\n};\n\nexport const format_date = (date) => {\n  if (!date) return \"-\";\n  const { Time, Valid } = date;\n  if (!Valid) return \"-\";\n  return Time.substr(0, 10).split(\"-\").reverse().join(\".\");\n};\n\nexport const FormattedDate = (_, row) => {\n  return <>{format_date(row.date)}</>;\n};\n\nexport const FormattedDeadline = (_, row) => {\n  return <>{format_date(row.deadline)}</>;\n};\n\nexport const FormattedRelease = (_, row) => {\n  return <>{format_date(row.release_date)}</>;\n};\n\nexport const FormattedSuperiorDate = (_, row) => {\n  return <>{format_date(row.s_date)}</>;\n};\n\nexport const FormattedTrainingDate = (_, row) => {\n  return <>{format_date(row.signatures[0].date)}</>;\n};\n\nexport const FormattedEmployeeDate = (_, row) => {\n  return <>{format_date(row.e_date)}</>;\n};\n\nexport const Percentage = (_, row) =>\n  Math.round(row.complete * 100) / 100 + \"%\";\n\nexport const NameWithLink = (_, row) => {\n  let link = row.link;\n  if (link && link.substr(0, 3) === \"www\") {\n    link = \"https://\" + link;\n  }\n  return (\n    <a href={link} target=\"_blank\" rel=\"noreferrer\">\n      {row.name}\n    </a>\n  );\n};\n\nexport const DocumentLabel = (_, row) => {\n  const ExclamationName = () => (\n    <h5>\n      <ExclamationTriangle style={{ color: \"red\", marginBottom: \"6px\" }} />{\" \"}\n      {NameWithLink(_, row)}\n    </h5>\n  );\n\n  const expired =\n    row.deadline < Date.now() &&\n    row.employees.find((e) => e.state.includes(\"e\") || e.state.includes(\"s\"));\n\n  return <>{expired ? <ExclamationName /> : NameWithLink(_, row)}</>;\n};\n\nexport const FormattedEmployee = (_, row) => {\n  // const employee = employees[row-1]\n  const employee = {};\n  const percentage = 100; // TODO implement\n  return (\n    <div style={{ fontSize: \"12px\" }}>\n      {employee.name}, {employee.job}, {percentage}%\n    </div>\n  );\n};\n","import React from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport { isSuperior, requireSuperior } from \"../../utils/functions\";\nimport { FormattedEmployeeDate } from \"../../utils/Formatter\";\n\nexport const MissedBtn = (\n  cell,\n  row,\n  index,\n  { setModalInfo, setShowModal, asSuperior }\n) => {\n  const handleClick = () => {\n    if (requireSuperior(row) && isSuperior(row)) {\n      return;\n    }\n    setShowModal(true);\n    setModalInfo({\n      ...row,\n      asSuperior: asSuperior,\n    });\n  };\n\n  return (\n    <Button onClick={handleClick} size=\"sm\" className=\"btn-block\">\n      {requireSuperior(row) && isSuperior(row) ? \"Details\" : \"Sign\"}\n    </Button>\n  );\n};\n\nexport const SignedBtn = (cell, row) => {\n  return requireSuperior(row) && isSuperior(row) ? (\n    <Button size=\"sm\">Details</Button>\n  ) : (\n    FormattedEmployeeDate(cell, row.signatures[0])\n  );\n};\n","import React from \"react\";\nimport Spinner from \"react-bootstrap/Spinner\";\n\nexport const FetchLoading = () => <Spinner animation=\"border\" className=\"m-5\"/>\nexport const FetchError = ({e}) => <h6 className=\"p-5\">{e}</h6>","import React, { useEffect, useState } from \"react\";\nimport { proxy_url } from \"./data\";\n\n/** Universal fetch with GET method and error and loading state */\nconst useDataApi = (url) => {\n  const [data, setData] = useState();\n  const [error, setError] = useState();\n  const [isLoaded, setIsLoaded] = useState(false);\n\n  useEffect(() => {\n    console.log(\"url\", url);\n    fetch(proxy_url +url, {\n      method: \"GET\",\n    })\n      .then((response) => response.json())\n      .then(\n        (res) => {\n          setIsLoaded(true);\n          setData(res);\n        },\n        (error) => {\n          setIsLoaded(true);\n          setError(error);\n        }\n      );\n  }, []); // Runs once\n\n  return [data, isLoaded, error];\n};\n\nexport default useDataApi;\n","import React from \"react\";\nimport { Button, Modal } from \"react-bootstrap\";\n\nconst ConfirmModal = ({ showModal, setShowModal, modalInfo, handleAccept }) => {\n  console.log(modalInfo);\n  const closeModal = () => setShowModal(false);\n\n  const onAccept = () => {\n    handleAccept();\n    closeModal();\n  };\n\n  let bodyText = \"\";\n  if (modalInfo.body) {\n    bodyText = modalInfo.body;\n  } else if (modalInfo.asSuperior) {\n    const employeeName = () => {\n      if (modalInfo.employee === null) {\n        return \"ME\";\n      }\n      return `${modalInfo.employee.first_name} ${modalInfo.employee.last_name}`;\n    };\n    bodyText = `Do you really want do sign for ${employeeName()}`;\n  } else {\n    bodyText = `Do you really want do sign the document named ${modalInfo.name}`;\n  }\n\n  return (\n    <Modal show={showModal} onHide={closeModal} centered>\n      <Modal.Header closeButton>\n        <Modal.Title>Confirm</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <p>{bodyText}</p>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"danger\" onClick={onAccept}>\n          Accept\n        </Button>\n        <Button variant=\"secondary\" onClick={closeModal}>\n          Close\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n};\n\nexport default ConfirmModal;\n","import React, { useEffect, useState } from \"react\";\nimport MyBootstrapTable from \"../components/Tables/MyBootstrapTable\";\nimport {\n  documentsToSignColumns,\n  documentsToSignExpandColumns,\n  trainingsToSignColumns,\n} from \"./columns\";\nimport {\n  getUser,\n  nonExpandableDocs,\n  orderBy,\n  recordType,\n  successResponse,\n} from \"../utils/functions\";\nimport { FetchError, FetchLoading } from \"../components/FetchComponents\";\nimport useDataApi from \"../utils/useDataApi\";\nimport ConfirmModal from \"../components/Modals/ConfirmModal\";\nimport { proxy_url } from \"../utils/data\";\n\nconst RecordsToSignPage = () => {\n  const URL = `/unsigned/signatures/${getUser().id}`;\n  const [data, isLoaded, error] = useDataApi(URL);\n\n  const [showModal, setShowModal] = useState(false);\n  const [modalInfo, setModalInfo] = useState([]);\n\n  const [trainings, setTrainings] = useState([]);\n  const [documents, setDocuments] = useState([]);\n\n  useEffect(() => {\n    if (data) {\n      setDocuments(data.documents);\n      setTrainings(data.trainings);\n    }\n  }, [data]);\n\n  if (error) {\n    return <FetchError e={`Error: ${error.message}`} />;\n  } else if (!isLoaded || !data) {\n    return <FetchLoading />;\n  }\n\n  const handleAccept = () => {\n    if (modalInfo.asSuperior) {\n      if (modalInfo.employee === null) {\n        signAsEmployee(modalInfo.id, \"me\");\n      } else {\n        signAsSuperior(modalInfo.id);\n      }\n    } else {\n      signAsEmployee(modalInfo.signatures[0].id);\n    }\n    setShowModal(false);\n  };\n\n  /** Update sign date to Date.now()\n   * @param url:\n   *    '/sign' update employee date\n   *    '/sign/superior' update superior date\n   * @param id: id of the document_signature\n   * */\n  const fetchSign = (url, id) => {\n    return fetch(proxy_url + url, {\n      method: \"POST\",\n      body: new URLSearchParams(`id=${id}`),\n    });\n  };\n\n  const signAsEmployee = (signature_id, me) => {\n    const record_type = recordType(modalInfo);\n    fetchSign(`/sign/${record_type}`, signature_id).then((res) => {\n      if (successResponse(res)) {\n        if (record_type === \"training\") {\n          updateTrainings(signature_id);\n        } else {\n          if (me) {\n            updateSuperiorDocs(signature_id);\n          } else {\n            updateEmployeeDocs(signature_id);\n          }\n        }\n      } else {\n        console.log(\"error\", res);\n      }\n    });\n  };\n\n  const signAsSuperior = (signature_id) => {\n    fetchSign(\"/sign/superior\", signature_id).then((res) => {\n      if (successResponse(res)) {\n        updateSuperiorDocs(signature_id);\n      }\n    });\n  };\n\n  const updateTrainings = (signature_id) => {\n    setTrainings(trainings.filter((t) => t.signatures[0].id !== signature_id));\n  };\n\n  const updateEmployeeDocs = (signature_id) => {\n    setDocuments(documents.filter((d) => d.signatures[0].id !== signature_id));\n  };\n\n  const updateSuperiorDocs = (signature_id) => {\n    const update = documents.map((d) => {\n      return {\n        ...d,\n        signatures: d.signatures.filter((s) => s.id !== signature_id),\n      };\n    });\n    setDocuments(update.filter((d) => d.signatures.length));\n  };\n\n  const trn_columns = trainingsToSignColumns(setModalInfo, setShowModal);\n  const doc_columns = documentsToSignColumns(setModalInfo, setShowModal);\n  const expandColumns = documentsToSignExpandColumns(\n    setModalInfo,\n    setShowModal\n  );\n\n  const expandRow = {\n    onlyOneExpanding: true,\n    nonExpandable: nonExpandableDocs(documents),\n    renderer: (cell) => (\n      <MyBootstrapTable\n        classes=\"inner-table\"\n        data={cell.signatures}\n        columns={expandColumns}\n        order={orderBy(\"employee.last_name\")}\n      />\n    ),\n  };\n\n  console.log(data);\n\n  return (\n    <>\n      {/* DOCUMENTS */}\n      <MyBootstrapTable\n        title=\"Documents to sign\"\n        data={documents}\n        columns={doc_columns}\n        order={orderBy(\"deadline.Time\")}\n        expandRow={expandRow}\n      />\n      {/* TRAININGS */}\n      <MyBootstrapTable\n        title=\"Trainings to sign\"\n        data={trainings}\n        columns={trn_columns}\n        order={orderBy(\"deadline.Time\")}\n      />\n      <ConfirmModal\n        showModal={showModal}\n        setShowModal={setShowModal}\n        modalInfo={modalInfo}\n        handleAccept={handleAccept}\n      />\n    </>\n  );\n};\n\nexport default RecordsToSignPage;\n","import {\n  FormattedDate,\n  FormattedDeadline,\n  FormattedEmployeeDate,\n  FormattedRelease,\n  FullName,\n  NameWithLink,\n} from \"../utils/Formatter\";\nimport { MissedBtn } from \"../components/Buttons/TableBtns\";\nimport { buttonColumn } from \"../utils/functions\";\n\nexport const trainingsToSignColumns = (setModalInfo, setShowModal) => [\n  {\n    dataField: \"name\",\n    text: \"Name\",\n    sort: true,\n    headerStyle: { width: \"33%\" },\n  },\n  {\n    dataField: \"date.Time\",\n    text: \"Date\",\n    sort: true,\n    formatter: FormattedDate,\n    headerStyle: { width: \"33%\" },\n  },\n  {\n    dataField: \"deadline.Time\",\n    text: \"Deadline\",\n    sort: true,\n    formatter: FormattedDeadline,\n    headerStyle: { width: \"33%\" },\n  },\n  {\n    ...buttonColumn(),\n    formatter: MissedBtn,\n    formatExtraData: {\n      setModalInfo: setModalInfo,\n      setShowModal: setShowModal,\n    },\n  },\n];\n\nexport const documentsToSignColumns = (setModalInfo, setShowModal) => [\n  {\n    dataField: \"name\",\n    text: \"Name\",\n    sort: true,\n    formatter: NameWithLink,\n    headerStyle: { width: \"33%\" },\n  },\n  {\n    dataField: \"release_date.Time\",\n    text: \"Release\",\n    sort: true,\n    formatter: FormattedRelease,\n    headerStyle: { width: \"33%\" },\n  },\n  {\n    dataField: \"deadline.Time\",\n    text: \"Deadline\",\n    sort: true,\n    formatter: FormattedDeadline,\n    headerStyle: { width: \"33%\" },\n  },\n  {\n    ...buttonColumn(),\n    formatter: MissedBtn,\n    formatExtraData: {\n      setModalInfo: setModalInfo,\n      setShowModal: setShowModal,\n      asSuperior: false,\n    },\n  },\n];\n\nexport const documentsToSignExpandColumns = (setModalInfo, setShowModal) => [\n  {\n    dataField: \"employee.id\",\n    text: \"Employee ID\",\n    sort: true,\n    headerStyle: { width: \"33%\" },\n  },\n  {\n    dataField: \"employee.last_name\",\n    text: \"Full name\",\n    sort: true,\n    formatter: FullName,\n    headerStyle: { width: \"33%\" },\n  },\n  {\n    dataField: \"e_date.Time\",\n    text: \"Sign Date\",\n    sort: true,\n    formatter: FormattedEmployeeDate,\n    headerStyle: { width: \"33%\" },\n  },\n  {\n    ...buttonColumn(),\n    formatter: MissedBtn,\n    formatExtraData: {\n      setModalInfo: setModalInfo,\n      setShowModal: setShowModal,\n      asSuperior: true,\n    },\n  },\n];\n","import Alert from \"react-bootstrap/Alert\";\n\nexport const CustomAlert = ({ notification }) => {\n  if (!notification) return null;\n  return <Alert variant={notification.variant}>{notification.body}</Alert>;\n};\n","export const wording = {\n  sk: {\n    loginPage: {\n      header: \"Prihlasovanie\",\n      login: \"Login\",\n      password: \"Heslo\",\n      submit: \"Prihlásiť sa\",\n      notification: {\n        wrongLogin: \"Zlé prihlasovacie údaje\",\n        wrongCard: \"Nepodarilo sa prihlásenie kartou\",\n      },\n    },\n    navigation: {\n      login: \"Prihlasit sa\",\n      recordsToSign: \"Na podpísanie\",\n      signedRecords: \"Podpísané\",\n      addRecord: \"Pridať\",\n      savedRecords: \"Uložené\",\n      finder: \"Vyhľadávanie\",\n      settings: \"Nastavenia\",\n      logout: \"Odhlásiť sa\",\n    },\n  },\n  en: {\n    loginPage: {\n      header: \"Login\",\n      login: \"Login\",\n      password: \"Password\",\n      submit: \"Login\",\n      notification: {\n        wrongLogin: \"Wrong login input\",\n        wrongCard: \"Wrong card input\",\n      },\n    },\n    navigation: {\n      login: \"Login\",\n      recordsToSign: \"To sign\",\n      signedRecords: \"Signed\",\n      addRecord: \"Add new\",\n      savedRecords: \"Saved\",\n      finder: \"Finder\",\n      settings: \"Settings\",\n      logout: \"Logout\",\n    },\n  },\n};\n","import React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { Button, ButtonGroup, Form, Container } from \"react-bootstrap\";\nimport { CustomAlert } from \"../components/CustomAlert\";\nimport { wording } from \"../utils/wording\";\n\nconst LoginForm = ({ onSubmit, language, setLanguage, notification }) => {\n  const { register, handleSubmit } = useForm();\n\n  const active = (id) => language === id;\n  const changeLanguage = (e) => setLanguage(e.target.id);\n\n  // TODO https://www.npmjs.com/package/react-i18next\n  const { header, login, password, submit } = wording[language].loginPage;\n\n  return (\n    <Container className=\"login-container\">\n      <Form onSubmit={handleSubmit(onSubmit)}>\n        {/* HEADER */}\n        <h3 align=\"center\">{header}</h3>\n        {/* LANGUAGE BTN */}\n        <ButtonGroup\n          onClick={changeLanguage}\n          className=\"container-fluid p-0 mt-4 mb-5 btn-group\"\n        >\n          <Button id=\"sk\" active={active(\"sk\")}>\n            Slovak\n          </Button>\n          <Button id=\"cz\" active={active(\"cz\")} disabled>\n            Czech\n          </Button>\n          <Button id=\"en\" active={active(\"en\")}>\n            English\n          </Button>\n          <Button id=\"hu\" active={active(\"hu\")} disabled>\n            Hungary\n          </Button>\n        </ButtonGroup>\n        {/* NAME */}\n        <Form.Group>\n          <Form.Label>{login}</Form.Label>\n          <Form.Control name=\"login\" ref={register} required />\n        </Form.Group>\n        {/* PASS */}\n        <Form.Group>\n          <Form.Label>{password}</Form.Label>\n          <Form.Control\n            name=\"password\"\n            type=\"password\"\n            ref={register}\n            required\n          />\n        </Form.Group>\n        {/* ALERT */}\n        {notification && <CustomAlert notification={notification} />}\n        {/* SUBMIT BTN */}\n        <Button type=\"submit\" variant=\"dark\" className=\"btn-block\">\n          {submit}\n        </Button>\n      </Form>\n    </Container>\n  );\n};\n\nexport default LoginForm;\n","import React, { useEffect, useState } from \"react\";\nimport { Redirect } from \"react-router\";\nimport LoginForm from \"./LoginForm\";\nimport { badMsg, getUser, reloadPage } from \"../utils/functions\";\nimport { wording } from \"../utils/wording\";\nimport { proxy_url } from \"../utils/data\";\nimport { changeString } from \"./secret\";\n\nconst LoginPage = () => {\n  const [notification, setNotification] = useState();\n  const [language, setLanguage] = useState(\"sk\");\n\n  const {\n    notification: { wrongLogin, wrongCard },\n  } = wording[language].loginPage;\n\n  let cardInput = \"\";\n  const maxCardInputTimeDifference = 40;\n  const cardInputLength = 10;\n  let t = cardInputTimeout();\n  clearTimeout(t);\n\n  function cardInputTimeout() {\n    return setTimeout(checkInput, maxCardInputTimeDifference);\n  }\n\n  function isLetter(e) {\n    let aKeycode = 65;\n    let zKeycode = 90;\n    return e.keyCode >= aKeycode && e.keyCode <= zKeycode;\n  }\n\n  function isNumber(e) {\n    let zeroKeycode = 48;\n    let nineKeycode = 57;\n    return e.keyCode >= zeroKeycode && e.keyCode <= nineKeycode;\n  }\n\n  function isValuable(e) {\n    return isLetter(e) || isNumber(e);\n  }\n\n  function resetCardInput() {\n    cardInput = \"\";\n  }\n\n  function checkInput() {\n    if (cardInput.length === cardInputLength) {\n      findByCard(cardInput);\n    }\n    resetCardInput();\n  }\n\n  const event = (e) => {\n    let engInput = String.fromCharCode(e.keyCode).toLowerCase();\n    if (isValuable(e)) {\n      cardInput += engInput;\n      clearTimeout(t);\n      t = cardInputTimeout();\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener(\"keydown\", event);\n    return () => document.removeEventListener(\"keydown\", event); // cleanup\n  });\n\n  const setUser = (data) => {\n    const user = {\n      id: data.id,\n      role: data.role,\n      first_name: data.first_name,\n      last_name: data.last_name,\n    };\n    // console.log(data);\n    sessionStorage.setItem(\"user\", JSON.stringify(user));\n    reloadPage();\n  };\n\n  const onSubmit = (data) => {\n    const pass = changeString(data.password);\n    fetch(proxy_url + \"/auth/login\", {\n      method: \"POST\",\n      body: new URLSearchParams(`login=${data.login}&password=${pass}`),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(\"success\");\n        setUser(data);\n      })\n      .catch(() => setNotification(badMsg(wrongLogin)));\n  };\n\n  const findByCard = (input) => {\n    fetch(proxy_url + \"/auth/kiosk\", {\n      method: \"POST\",\n      body: new URLSearchParams(`card=${input}`),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        setUser(data);\n      })\n      .catch(() => setNotification(badMsg(wrongCard)));\n  };\n\n  if (getUser()) {\n    return <Redirect to=\"/records-to-sign\" />;\n  }\n  return (\n    <LoginForm\n      onSubmit={onSubmit}\n      language={language}\n      setLanguage={setLanguage}\n      notification={notification}\n    />\n  );\n};\n\nexport default LoginPage;\n","const CryptoJS = require('crypto-js');\n\n\nexport const changeString = (inputText) => {\n  /*inputText = inputText.toString().toLowerCase();\n  const howMany = (inputText.charCodeAt(0) % 12) + 7;\n  const mac = CryptoJS.HmacSHA256(inputText.repeat(howMany), 'požehnávam tento projekt');\n  const macSum = mac.toString();\n  let data64 = mac.toString(CryptoJS.enc.Base64);\n  console.log('mac: ' + macSum + ' | b64: ' + data64);\n  return data64;*/\n  return inputText\t// TODO client side hash\n};\n","import React from \"react\";\nimport { Redirect } from \"react-router\";\nimport { removeUser } from \"../utils/functions\";\n\nconst LogoutPage = () => {\n  removeUser();\n  return <Redirect to=\"/login\" />;\n};\n\nexport default LogoutPage;\n","import React from \"react\";\nimport { getUser, nonExpandableDocs, orderBy } from \"../utils/functions\";\nimport useDataApi from \"../utils/useDataApi\";\nimport { FetchError, FetchLoading } from \"../components/FetchComponents\";\nimport MyBootstrapTable from \"../components/Tables/MyBootstrapTable\";\nimport {\n  signedDocumentsColumns,\n  signedDocumentsExpandColumns,\n  signedTrainingsColumns,\n} from \"./columns\";\n\nconst SignedRecordsPage = () => {\n  const URL = `/signed/signatures/${getUser().id}`;\n  const [data, isLoaded, error] = useDataApi(URL);\n\n  if (error) {\n    return <FetchError e={`Error: ${error.message}`} />;\n  } else if (!isLoaded || !data) {\n    return <FetchLoading />;\n  }\n  console.log(\"signed\", data);\n  const documentsColumns = signedDocumentsColumns();\n  const expandColumns = signedDocumentsExpandColumns();\n\n  const trainingsColumns = signedTrainingsColumns();\n\n  const expandRow = {\n    onlyOneExpanding: true,\n    nonExpandable: nonExpandableDocs(data.documents),\n    renderer: (cell) => (\n      <MyBootstrapTable\n        classes=\"inner-table\"\n        data={cell.signatures}\n        columns={expandColumns}\n        order={orderBy(\"employee.last_name\")}\n      />\n    ),\n  };\n\n  return (\n    <>\n      <MyBootstrapTable\n        title=\"Signed Documents\"\n        data={data.documents}\n        columns={documentsColumns}\n        expandRow={expandRow}\n        order={orderBy(\"release_date.Time\", \"desc\")}\n      />\n      <MyBootstrapTable\n        title=\"Signed Trainings\"\n        data={data.trainings}\n        columns={trainingsColumns}\n        order={orderBy(\"date.Time\", \"desc\")}\n      />\n    </>\n  );\n};\n\nexport default SignedRecordsPage;\n","import {\n  FormattedDate,\n  FormattedEmployeeDate,\n  FormattedRelease,\n  FormattedSuperiorDate,\n  FormattedTrainingDate,\n  FullName,\n  NameWithLink,\n} from \"../utils/Formatter\";\nimport { SignedBtn } from \"../components/Buttons/TableBtns\";\n\nexport const signedDocumentsColumns = () => [\n  {\n    dataField: \"name\",\n    text: \"Name\",\n    sort: true,\n    formatter: NameWithLink,\n    headerStyle: { width: \"33%\" },\n  },\n  {\n    dataField: \"release_date.Time\",\n    text: \"Release\",\n    sort: true,\n    formatter: FormattedRelease,\n    headerStyle: { width: \"33%\" },\n  },\n  {\n    dataField: \"signatures[0].e_date.Time\",\n    text: \"Signed date\",\n    sort: true,\n    formatter: SignedBtn,\n    headerStyle: { width: \"33%\" },\n  },\n];\n\nexport const signedDocumentsExpandColumns = () => [\n  {\n    dataField: \"employee.id\",\n    text: \"ID\",\n    sort: true,\n    headerStyle: { width: \"1%\" },\n  },\n  {\n    dataField: \"employee.last_name\",\n    text: \"Full name\",\n    sort: true,\n    formatter: FullName,\n  },\n  {\n    dataField: \"e_date.Time\",\n    text: \"Employee Sign\",\n    sort: true,\n    formatter: FormattedEmployeeDate,\n  },\n  {\n    dataField: \"s_date.Time\",\n    text: \"My Sign\",\n    sort: true,\n    formatter: FormattedSuperiorDate,\n  },\n];\n\nexport const signedTrainingsColumns = () => [\n  {\n    dataField: \"name\",\n    text: \"Name\",\n    sort: true,\n    headerStyle: { width: \"33%\" },\n  },\n  {\n    dataField: \"date.Time\",\n    text: \"Took place\",\n    sort: true,\n    formatter: FormattedDate,\n    headerStyle: { width: \"33%\" },\n  },\n  {\n    dataField: \"signatures[0].date.Time\", // always array with length of 1 [by SQL query]\n    text: \"Signed date\",\n    sort: true,\n    formatter: FormattedTrainingDate,\n    headerStyle: { width: \"33%\" },\n  },\n];\n","import { Col, Form, Row } from \"react-bootstrap\";\nimport React from \"react\";\n\nconst MyFormGroup = ({\n  label,\n  name,\n  placeholder,\n  type,\n  register,\n  as,\n  required,\n}) => {\n  return (\n    <Form.Group as={Row}>\n      <Form.Label column sm=\"3\">\n        {label}\n      </Form.Label>\n      <Col>\n        <Form.Control\n          name={name}\n          placeholder={placeholder}\n          ref={register}\n          type={type}\n          as={as}\n          required={required}\n        />\n      </Col>\n    </Form.Group>\n  );\n};\n\nexport default MyFormGroup;\n","import React, { useContext } from \"react\";\nimport Col from \"react-bootstrap/Col\";\nimport Select from \"react-select\";\nimport { CustomAlert } from \"../CustomAlert\";\nimport { PairContext } from \"../../App\";\nimport { getOptionsForSelect } from \"../../utils/functions\";\n\nconst CombinationForm = ({\n  prefill,\n  disabled,\n  employees,\n  combinations: cs,\n  combination,\n  setCombination,\n  notification,\n}) => {\n  console.log(cs);\n\n  const pairs = useContext(PairContext);\n  const options = getOptionsForSelect(pairs);\n\n  const handleSelect = (data, { name: field }) => {\n    setCombination({ ...combination, [field]: data });\n  };\n\n  const selector = (name, label, opt = options[name]) => (\n    <>\n      {label}\n      <Select\n        isMulti={true}\n        placeholder=\"\"\n        name={name}\n        options={opt}\n        defaultValue={prefill ? prefill[name] : []}\n        isDisabled={\n          (prefill && name !== \"removedEmployees\") || disabled.includes(name)\n        }\n        onChange={(data, e) => handleSelect(data, e)}\n      />\n      <br />\n    </>\n  );\n\n  return (\n    <Col className=\"p-0\">\n      {selector(\"branches\", \"Branches\")}\n      {selector(\"divisions\", \"Divisions\")}\n      {selector(\"departments\", \"Departments\")}\n      {selector(\"cities\", \"Cities\")}\n      {employees && selector(\"removedEmployees\", \"Remove employees\", employees)}\n      {notification && <CustomAlert notification={notification} />}\n    </Col>\n  );\n};\n\nexport default CombinationForm;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { Button, Col, Container, Modal } from \"react-bootstrap\";\nimport CombinationForm from \"../Forms/CombinationForm\";\nimport uuid from \"react-uuid\";\nimport {\n  badMsg,\n  getEmployeeLabel,\n  getFetch,\n  resolveCombinations,\n} from \"../../utils/functions\";\nimport { PairContext } from \"../../App\";\nimport { comboFields } from \"../../utils/data\";\n\nconst CombinationModal = ({\n  prefill,\n  combinations,\n  setAssignedTo,\n  setEmptyAssign,\n  closeModal,\n}) => {\n  const pairs = useContext(PairContext);\n\n  const [disabled, setDisabled] = useState([]);\n  const [notification, setNotification] = useState();\n  const [employees, setEmployees] = useState();\n  const [combination, setCombination] = useState(\n    prefill\n      ? prefill\n      : {\n          branches: [],\n          divisions: [],\n          departments: [],\n          cities: [],\n          removedEmployees: [],\n        }\n  );\n\n  useEffect(() => {\n    if (prefill) {\n      preview();\n    }\n  }, []);\n\n  function preview() {\n    setDisabled(comboFields);\n    const assignedTo = resolveCombinations([combination]);\n\n    getFetch(`/employees/${assignedTo}`)\n      .then((data) => {\n        if (!data.length) {\n          setNotification(badMsg(\"not valid combination\"));\n          return;\n        }\n        resolveEmployees(data);\n      })\n      .catch((e) => {\n        setNotification(badMsg(\"not valid combination\"));\n        console.log(\"Errrrrrrrrrrror\", e);\n      });\n  }\n\n  const resolveEmployees = (data) => {\n    setEmployees(\n      data.map((d) => {\n        return {\n          value: d.id,\n          label: getEmployeeLabel(d, pairs.departments),\n        };\n      })\n    );\n  };\n\n  const save = () => {\n    setAssignedTo((prev) => {\n      return prev.map((c) => {\n        if (c.id === prefill?.id) {\n          return { ...combination, id: uuid() };\n        }\n        return c;\n      });\n    });\n\n    closeModal();\n  };\n\n  const add = () => {\n    const assignedTo = resolveCombinations([combination]);\n    getFetch(`/employees/${assignedTo}`)\n      .then((data) => {\n        if (!data.length) {\n          setNotification(badMsg(\"not valid combination\"));\n          return;\n        }\n\n        setNotification(undefined);\n        setEmptyAssign([false]);\n\n        setAssignedTo((prevState) => {\n          return [...prevState, { ...combination, id: uuid() }];\n        });\n\n        closeModal();\n      })\n      .catch((e) => {\n        setNotification(badMsg(\"not valid combination\"));\n        console.log(\"Errrrrrrrrrrror\", e);\n      });\n  };\n\n  return (\n    <Modal show={true} onHide={closeModal} centered>\n      <Container className=\"pt-3 pb-3 pl-5 pr-5\">\n        <Modal.Header closeButton>\n          <Modal.Title>Add new combination</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <CombinationForm\n            prefill={prefill}\n            disabled={disabled}\n            employees={employees}\n            combinations={combinations}\n            combination={combination}\n            setCombination={setCombination}\n            notification={notification}\n            setNotification={setNotification}\n          />\n        </Modal.Body>\n        <Modal.Footer>\n          <Col className=\"text-center\">\n            {prefill ? (\n              <Button onClick={save} size=\"sm\" className=\"mr-2\">\n                Save\n              </Button>\n            ) : (\n              <>\n                <Button onClick={preview} size=\"sm\" className=\"mr-2\">\n                  Preview\n                </Button>\n                <Button onClick={add} size=\"sm\" className=\"mr-2\">\n                  Add\n                </Button>\n              </>\n            )}\n            <Button onClick={closeModal} variant=\"secondary\" size=\"sm\">\n              close\n            </Button>\n          </Col>\n        </Modal.Footer>\n      </Container>\n    </Modal>\n  );\n};\n\nexport default CombinationModal;\n","import React, { useState } from \"react\";\nimport { Plus, XSquare, Pencil } from \"react-bootstrap-icons\";\nimport CombinationModal from \"../Modals/CombinationModal\";\nimport Button from \"react-bootstrap/Button\";\nimport { buttonColumn } from \"../../utils/functions\";\nimport { OverlayTrigger, Tooltip } from \"react-bootstrap\";\nimport MyBootstrapTable from \"./MyBootstrapTable\";\n\nconst Combinations = ({\n  combinations,\n  assignedTo,\n  setAssignedTo,\n  setEmptyAssign,\n}) => {\n  const [showModal, setShowModal] = useState(false);\n  const [prefill, setPrefill] = useState();\n\n  const openModal = () => setShowModal(true);\n  const closeModal = () => {\n    setPrefill(undefined);\n    setShowModal(false);\n  };\n\n  const EditIcon = (_, row) => {\n    const editCombination = (row) => {\n      setPrefill(row);\n      openModal();\n    };\n\n    return (\n      <OverlayTrigger\n        placement=\"right\"\n        overlay={\n          <Tooltip id=\"tooltip-right\" className=\"text-left\">\n            {!row.removedEmployees || !row.removedEmployees.length ? (\n              <p>Empty</p>\n            ) : (\n              row.removedEmployees.map((e) => <p key={e.value}>{e.label}</p>)\n            )}\n          </Tooltip>\n        }\n      >\n        <Pencil size=\"25\" color=\"black\" onClick={() => editCombination(row)} />\n      </OverlayTrigger>\n    );\n  };\n\n  const DeleteIcon = (_, row) => {\n    const deleteCombination = (row) => {\n      setAssignedTo((prevState) => {\n        return prevState.filter((c) => c.id !== row.id);\n      });\n    };\n\n    return (\n      <XSquare size=\"25\" color=\"red\" onClick={() => deleteCombination(row)} />\n    );\n  };\n\n  const AddIcon = () => (\n    <Button variant=\"dark\" onClick={openModal} size=\"sm\" className=\"mb-2\">\n      <Plus size=\"20\" color=\"white\" />\n      <span>add combination</span>\n    </Button>\n  );\n\n  const getLabels = (field) => <>{field?.map((f) => f.label).join(\",\")}</>;\n  const Branches = (_, row) => getLabels(row.branches);\n  const Divisions = (_, row) => getLabels(row.divisions);\n  const Departments = (_, row) => getLabels(row.departments);\n  const Cities = (_, row) => getLabels(row.cities);\n\n  const columns = [\n    {\n      dataField: \"branches\",\n      text: \"Branches\",\n      formatter: Branches,\n    },\n    {\n      dataField: \"divisions\",\n      text: \"Divisions\",\n      formatter: Divisions,\n    },\n    {\n      dataField: \"departments\",\n      text: \"Departments\",\n      formatter: Departments,\n    },\n    {\n      dataField: \"cities\",\n      text: \"Cities\",\n      formatter: Cities,\n    },\n    {\n      ...buttonColumn(\"edit\"),\n      formatter: EditIcon,\n    },\n    {\n      ...buttonColumn(\"del\"),\n      formatter: DeleteIcon,\n    },\n  ];\n\n  return (\n    <>\n      <MyBootstrapTable\n        data={assignedTo}\n        columns={columns}\n        // horizontal scroll\n        wrapperClasses=\"table-responsive\"\n        rowClasses=\"text-nowrap\"\n      />\n      <AddIcon />\n      {showModal && (\n        <CombinationModal\n          prefill={prefill}\n          combinations={combinations}\n          setAssignedTo={setAssignedTo}\n          setEmptyAssign={setEmptyAssign}\n          closeModal={closeModal}\n        />\n      )}\n    </>\n  );\n};\n\nexport default Combinations;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport MyFormGroup from \"./MyFormGroup\";\nimport { Form, Row, Col, Button } from \"react-bootstrap\";\nimport Combinations from \"../Tables/Combinations\";\nimport { CustomAlert } from \"../CustomAlert\";\nimport { proxy_url, types as t } from \"../../utils/data\";\nimport {\n  badMsg,\n  goodMsg,\n  correctDocumentFormData,\n  getSelectOptions,\n  prefillDocumentForm,\n  successResponse,\n  getAssignedTo,\n  prepareCombinations,\n  getFormID,\n} from \"../../utils/functions\";\nimport { PairContext } from \"../../App\";\nimport ConfirmModal from \"../Modals/ConfirmModal\";\n\nconst DocumentForm = ({ setRecords, formData, setFormData, actual }) => {\n  const pairs = useContext(PairContext);\n\n  const [showModal, setShowModal] = useState(false);\n  const [submitData, setSubmitData] = useState({});\n\n  const { register, handleSubmit } = useForm({\n    defaultValues: prefillDocumentForm(formData),\n  });\n\n  const types = t;\n  const [action, setAction] = useState();\n  const [selectedType, setSelectedType] = useState(\n    formData ? formData.type : \"\"\n  );\n\n  const [sent, setSent] = useState(false);\n  const [currentID, setCurrentID] = useState(formData ? formData.id : 0);\n  const [notification, setNotification] = useState();\n  const [combinations, setCombinations] = useState([]);\n  const [assignedTo, setAssignedTo] = useState([]);\n  const [emptyAssign, setEmptyAssign] = useState([true]);\n  useEffect(() => setNotification(undefined), emptyAssign);\n\n  useEffect(() => {\n    fetch(proxy_url + \"/combinations\", {\n      method: \"GET\",\n    })\n      .then((response) => response.json())\n      .then((res) => {\n        setCombinations(prepareCombinations(res));\n      })\n      .catch((e) => console.log(e));\n\n    fetch(proxy_url + \"/employees/all\", {\n      method: \"GET\",\n    })\n      .then((response) => response.json())\n      .then((res) => {\n        setAssignedTo(getAssignedTo(formData, pairs, res));\n      })\n      .catch((e) => console.log(e));\n  }, []);\n\n  const onSubmit = (data) => {\n    if (assignedTo.length === 0) {\n      setNotification(badMsg(\"At least one combination is required\"));\n      return;\n    }\n\n    setSubmitData(data);\n\n    if (action === \"send\") {\n      setShowModal(true);\n    } else {\n      executeSubmit(data);\n    }\n  };\n\n  const executeSubmit = (data) => {\n    console.log(\"raw\", assignedTo);\n    data = correctDocumentFormData(data || submitData, assignedTo);\n    console.log(\"data\", data);\n\n    if (action === \"save\") {\n      if (currentID) {\n        data = { ...data, id: currentID };\n        upsert(data, \"update\");\n        updateSavedRec(data);\n      } else {\n        upsert(data, \"create\").then((r) => setCurrentID(r?.id));\n      }\n    }\n    if (action === \"send\") {\n      if (currentID) {\n        data = { ...data, id: currentID };\n        if (actual) {\n          upsertConfirm(data, \"create/confirm\").then((r) => {\n            setCurrentID(r?.id);\n          });\n        } else {\n          upsertConfirm(data, \"update/confirm\", true);\n        }\n      } else {\n        upsertConfirm(data, \"create/confirm\").then((r) => setCurrentID(r?.id));\n      }\n      setSent(true);\n    }\n  };\n\n  const upsert = (data, action) => {\n    console.log(data);\n    return fetch(proxy_url + `/document/${action}`, {\n      method: \"POST\",\n      body: JSON.stringify(data),\n    })\n      .then((res) => {\n        if (successResponse(res)) {\n          setNotification(goodMsg(`${action} was successful`));\n        } else {\n          setNotification(badMsg(`${action} failed`));\n        }\n        return res.json();\n      })\n      .catch((e) => console.log(\"error\", e));\n  };\n  const upsertConfirm = (data, action, update) => {\n    console.log(data);\n    return fetch(proxy_url + `/document/${action}`, {\n      method: \"POST\",\n      body: JSON.stringify(data),\n    })\n      .then((res) => {\n        if (successResponse(res)) {\n          setNotification(goodMsg(`${action} was successful`));\n          if (setRecords && update) {\n            filterSavedRec(data); // update table data\n            // if (setFormData) setFormData(undefined); // hide modal\n          }\n          updateSavedRec(data);\n        } else {\n          setNotification(badMsg(`${action} failed`));\n        }\n        console.log(res);\n        return res.json();\n      })\n      .catch((e) => {\n        setNotification(badMsg(`${action} failed`));\n        console.log(\"error\", e);\n      });\n  };\n\n  const filterSavedRec = (data) => {\n    setRecords((prevState) => prevState.filter((p) => p.id !== data.id));\n  };\n\n  const updateSavedRec = (data) => {\n    if (!setRecords) return;\n\n    setRecords((prevState) => {\n      let update = prevState;\n      const foundID = prevState.findIndex((p) => p.id === data.id);\n      update[foundID] = data;\n      return update;\n    });\n  };\n\n  return (\n    <Form\n      onChange={() => setNotification(undefined)}\n      onSubmit={handleSubmit(onSubmit)}\n    >\n      {/* TYPE* */}\n      <Form.Group as={Row}>\n        <Form.Label column sm=\"3\">\n          Type*\n        </Form.Label>\n        <Col>\n          <Form.Control\n            onChange={(e) => setSelectedType(e.target.value)}\n            as=\"select\"\n            name=\"type\"\n            ref={register({ validate: (v) => v !== \"\" })}\n            required\n            value={selectedType}\n          >\n            {getSelectOptions(types)}\n          </Form.Control>\n        </Col>\n      </Form.Group>\n      {/* REQUIRE SUPERIOR */}\n      <Form.Group as={Row}>\n        <Form.Label column sm=\"3\">\n          {\" \"}\n        </Form.Label>\n        <Col>\n          <Form.Check\n            inline\n            label=\"require superior\"\n            name=\"require_superior\"\n            ref={register}\n          />\n        </Col>\n      </Form.Group>\n      {/* NAME */}\n      <MyFormGroup\n        label=\"Document name*\"\n        name=\"name\"\n        placeholder=\"Enter document name\"\n        register={register}\n        required\n      />\n      {/* DOCUMENT NUMBER */}\n      <MyFormGroup\n        label=\"Document number*\"\n        name=\"order_number\"\n        type=\"number\"\n        placeholder=\"Enter number\"\n        register={register({ valueAsNumber: true })}\n        required\n      />\n      {/* VERSION */}\n      <MyFormGroup\n        label=\"Version*\"\n        name=\"version\"\n        placeholder=\"Enter version\"\n        register={register}\n        required\n      />\n      {/* LINK */}\n      <MyFormGroup\n        label=\"Link to sharepoint\"\n        name=\"link\"\n        placeholder=\"Enter document link to sharepoint\"\n        register={register}\n      />\n      {/* RELEASE */}\n      <MyFormGroup\n        label=\"Release date*\"\n        name=\"release_date\"\n        type=\"date\"\n        register={register}\n        required\n      />\n      {/* DEADLINE */}\n      <MyFormGroup\n        label=\"Days to deadline*\"\n        name=\"deadline\"\n        type=\"date\"\n        register={register}\n        required\n      />\n      {/* NOTE */}\n      <MyFormGroup\n        label=\"Note\"\n        name=\"note\"\n        as=\"textarea\"\n        placeholder=\"Enter note\"\n        register={register}\n      />\n      <input hidden name=\"complete\" ref={register} />\n      {/* COMBINATIONS */}\n      <Combinations\n        combinations={combinations}\n        assignedTo={assignedTo}\n        setAssignedTo={setAssignedTo}\n        emptyAssign={emptyAssign}\n        setEmptyAssign={setEmptyAssign}\n      />\n      {/* ALERTS */}\n      {notification && <CustomAlert notification={notification} />}\n      {/* SAVE | SEND BUTTONS */}\n      <div className=\"pt-1 btn-block text-right\">\n        <Button\n          variant=\"outline-primary\"\n          type=\"submit\"\n          className=\"mr-1\"\n          disabled={sent}\n          onClick={() => setAction(\"save\")}\n        >\n          Save\n        </Button>\n        <Button type=\"submit\" onClick={() => setAction(\"send\")} disabled={sent}>\n          {actual ? \"Send as new version\" : \"Send\"}\n        </Button>\n      </div>\n      {showModal && (\n        <ConfirmModal\n          handleAccept={executeSubmit}\n          showModal={showModal}\n          setShowModal={setShowModal}\n          modalInfo={{\n            body: \"Do you really want to send the record to the employees?\",\n          }}\n          // style={{ border: \"10px solid #6c757d\" }}\n        />\n      )}\n    </Form>\n  );\n};\n\nexport default DocumentForm;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport MyFormGroup from \"./MyFormGroup\";\nimport { Row, Col, Form, Button } from \"react-bootstrap\";\nimport { Typeahead } from \"react-bootstrap-typeahead\";\nimport \"react-bootstrap-typeahead/css/Typeahead.css\";\nimport { CustomAlert } from \"../CustomAlert\";\nimport {\n  badMsg,\n  goodMsg,\n  correctTrainingFormData,\n  successResponse,\n  prefillTrainingForm,\n  getEmployeesNames,\n  getEmployeeLabel,\n} from \"../../utils/functions\";\nimport { PairContext } from \"../../App\";\nimport { proxy_url } from \"../../utils/data\";\nimport ConfirmModal from \"../Modals/ConfirmModal\";\n\nconst TrainingForm = ({ setRecords, formData, setFormData, actual }) => {\n  const pairs = useContext(PairContext);\n\n  const [showModal, setShowModal] = useState(false);\n  const [submitData, setSubmitData] = useState({});\n\n  const { register, handleSubmit } = useForm({\n    defaultValues: prefillTrainingForm(formData),\n  });\n\n  const [action, setAction] = useState();\n\n  const [sent, setSent] = useState(false);\n  const [currentID, setCurrentID] = useState(formData ? formData.id : 0);\n  const [notification, setNotification] = useState();\n  const [employees, setEmployees] = useState([]);\n  const [attendees, setAttendees] = useState([]);\n  const [emptyAttendees, setEmptyAttendees] = useState([true]);\n  useEffect(() => setNotification(undefined), emptyAttendees);\n\n  useEffect(() => {\n    fetch(proxy_url + \"/employees/all\", {\n      method: \"GET\",\n    })\n      .then((response) => response.json())\n      .then((res) => {\n        setEmployees(res);\n        setAttendees(getEmployeesNames(formData, res));\n      })\n      .catch((e) => console.log(e));\n  }, []);\n\n  const onSubmit = (data) => {\n    console.log(\"data onSubmit\", data);\n    if (!attendees.length) {\n      setNotification(badMsg(\"At least one employee is required\"));\n      return;\n    }\n\n    setSubmitData(data);\n\n    if (action === \"send\") {\n      setShowModal(true);\n    } else {\n      executeSubmit(data);\n    }\n  };\n\n  const executeSubmit = (data) => {\n    data = correctTrainingFormData(data || submitData, attendees);\n\n    if (action === \"save\") {\n      if (currentID) {\n        data = { ...data, id: currentID };\n        upsert(data, \"update\");\n        updateSavedRec(data);\n      } else {\n        upsert(data, \"create\").then((r) => setCurrentID(r?.id));\n      }\n    }\n    if (action === \"send\") {\n      if (currentID) {\n        data = { ...data, id: currentID };\n        if (actual) {\n          upsertConfirm(data, \"create/confirm\").then((r) =>\n            setCurrentID(r?.id)\n          );\n        } else {\n          upsertConfirm(data, \"update/confirm\");\n        }\n      } else {\n        upsertConfirm(data, \"create/confirm\").then((r) => setCurrentID(r?.id));\n      }\n      setSent(true);\n    }\n  };\n\n  const upsert = (data, action) => {\n    return fetch(proxy_url + `/training/${action}`, {\n      method: \"POST\",\n      body: JSON.stringify(data),\n    })\n      .then((res) => {\n        if (successResponse(res)) {\n          setNotification(goodMsg(`${action} was successful`));\n        } else {\n          setNotification(badMsg(`${action} failed`));\n        }\n        return res.json();\n      })\n      .catch((e) => console.log(\"error\", e));\n  };\n\n  const upsertConfirm = (data, action) => {\n    console.log(data);\n    return fetch(proxy_url + `/training/${action}`, {\n      method: \"POST\",\n      body: JSON.stringify(data),\n    })\n      .then((res) => {\n        if (successResponse(res)) {\n          setNotification(goodMsg(`${action} was successful`));\n          if (setRecords) filterSavedRec(data); // update table data\n          if (setFormData) setFormData(undefined); // hide modal\n        } else {\n          setNotification(badMsg(`${action} failed`));\n        }\n        console.log(res);\n        return res.json();\n      })\n      .catch((e) => console.log(\"error\", e));\n  };\n\n  const filterSavedRec = (data) => {\n    setRecords((prevState) => prevState.filter((p) => p.id !== data.id));\n  };\n\n  const updateSavedRec = (data) => {\n    if (!setRecords) return;\n\n    setRecords((prevState) => {\n      let update = prevState;\n      const foundID = prevState.findIndex((p) => p.id === data.id);\n      update[foundID] = data;\n      return update;\n    });\n  };\n\n  const addAttendees = (attendee) => {\n    setAttendees(attendee);\n    setEmptyAttendees([false]);\n  };\n\n  return (\n    <Form\n      onChange={() => setNotification(undefined)}\n      onSubmit={handleSubmit(onSubmit)}\n    >\n      {/* NAME */}\n      <MyFormGroup\n        label=\"Training name*\"\n        name=\"name\"\n        placeholder=\"Enter document name\"\n        register={register}\n        required\n      />\n      {/* TRAINEE */}\n      <MyFormGroup\n        label=\"Name of lector\"\n        name=\"lector\"\n        placeholder=\"Enter document link to sharepoint\"\n        register={register}\n      />\n      {/* AGENCY */}\n      <MyFormGroup\n        label=\"Name of agency\"\n        name=\"agency\"\n        placeholder=\"Enter agency\"\n        register={register}\n      />\n      {/* PLACE */}\n      <MyFormGroup\n        label=\"Place\"\n        name=\"place\"\n        placeholder=\"Enter place\"\n        register={register}\n      />\n      {/* DATE */}\n      <MyFormGroup\n        label=\"Date*\"\n        name=\"date\"\n        type=\"date\"\n        placeholder=\"Enter date\"\n        register={register}\n        required\n      />\n      {/* DEADLINE */}\n      <MyFormGroup\n        label=\"Days to deadline*\"\n        name=\"deadline\"\n        type=\"date\"\n        defaultValue=\"14\"\n        register={register}\n        required\n      />\n      {/* DURATION */}\n      <MyFormGroup\n        label=\"Duration\"\n        name=\"duration\"\n        type=\"number\"\n        placeholder=\"Enter duration\"\n        register={register({ valueAsNumber: true })}\n      />\n      {/* AGENDA */}\n      <MyFormGroup\n        label=\"Agenda*\"\n        name=\"agenda\"\n        as=\"textarea\"\n        placeholder=\"Enter agenda\"\n        register={register}\n        required\n      />\n      <input hidden name=\"complete\" ref={register} />\n      {/* LIST OF EMPLOYEES */}\n      <Form.Group as={Row}>\n        <Form.Label column sm=\"3\">\n          Add employees*\n        </Form.Label>\n        <Col>\n          <Typeahead\n            id=\"basic-typeahead-single\"\n            name=\"employees\"\n            labelKey={(e) => getEmployeeLabel(e, pairs.departments)}\n            multiple\n            placeholder=\"Choose an employees...\"\n            selected={attendees}\n            options={employees}\n            onChange={(selected) => {\n              addAttendees(selected);\n              // this._typeahead.getInstance().focus();\n            }}\n            // ref={typeahead => this._typeahead = typeahead}\n          />\n        </Col>\n      </Form.Group>\n      {/* ALERTS */}\n      {notification && <CustomAlert notification={notification} />}\n      {/* SAVE | SEND BUTTONS */}\n      <div className=\"pt-1 btn-block text-right\">\n        <Button\n          variant=\"outline-primary\"\n          type=\"submit\"\n          className=\"mr-1\"\n          disabled={sent}\n          onClick={() => setAction(\"save\")}\n        >\n          Save\n        </Button>\n        <Button type=\"submit\" onClick={() => setAction(\"send\")} disabled={sent}>\n          Send\n        </Button>\n      </div>\n      {showModal && (\n        <ConfirmModal\n          handleAccept={executeSubmit}\n          showModal={showModal}\n          setShowModal={setShowModal}\n          modalInfo={{\n            body: \"Do you really want to send the record to the employees?\",\n          }}\n        />\n      )}\n    </Form>\n  );\n};\n\nexport default TrainingForm;\n","import React, { useState } from \"react\";\nimport { Button, ButtonGroup, Container } from \"react-bootstrap\";\nimport DocumentForm from \"../components/Forms/DocumentForm\";\nimport TrainingForm from \"../components/Forms/TrainingForm\";\n\nconst AddRecordPage = () => {\n  const [formType, setFormType] = useState(\"document\");\n\n  const handleClick = (event) => setFormType(event.target.id);\n  const active = (id) => formType === id && \"active\";\n\n  return (\n    <Container className=\"w-75\">\n      <ButtonGroup onClick={handleClick} className=\"btn-group btn-header\">\n        <Button id=\"document\" className={active(\"document\")}>\n          Document\n        </Button>\n        <Button id=\"training\" className={active(\"training\")}>\n          Online training\n        </Button>\n      </ButtonGroup>\n      {formType === \"document\" && <DocumentForm />}\n      {formType === \"training\" && <TrainingForm />}\n    </Container>\n  );\n};\n\nexport default AddRecordPage;\n","import Button from \"react-bootstrap/Button\";\nimport React from \"react\";\n\nconst EditBtn = (cell, row, index, { setFormData }) => {\n  return (\n    <Button\n      variant=\"outline-primary\"\n      onClick={() => setFormData(row)}\n      size=\"sm\"\n    >\n      Edit\n    </Button>\n  );\n};\n\nexport default EditBtn;\n","import {\n  FormattedDate,\n  FormattedDeadline,\n  FormattedRelease,\n} from \"../utils/Formatter\";\nimport { buttonColumn } from \"../utils/functions\";\nimport Button from \"react-bootstrap/Button\";\nimport React from \"react\";\nimport EditBtn from \"../components/Buttons/EditBtn\";\n\nconst SendBtn = (cell, row, index, { setRow, setShowModal }) => {\n  return (\n    <Button\n      id=\"save\"\n      size=\"sm\"\n      onClick={() => {\n        setRow(row);\n        setShowModal(true);\n      }}\n    >\n      Send\n    </Button>\n  );\n};\n\nexport const savedDocumentsColumns = (setFormData, setRow, setShowModal) => [\n  {\n    dataField: \"name\",\n    text: \"Name\",\n    sort: true,\n    headerStyle: { width: \"33%\" },\n  },\n  {\n    dataField: \"release_date.Time\",\n    text: \"Release\",\n    sort: true,\n    formatter: FormattedRelease,\n    headerStyle: { width: \"32%\" },\n  },\n  {\n    dataField: \"deadline.Time\",\n    text: \"Deadline\",\n    sort: true,\n    formatter: FormattedDeadline,\n    headerStyle: { width: \"33%\" },\n  },\n  {\n    ...buttonColumn(\"EditBtn\"),\n    formatter: EditBtn,\n    formatExtraData: {\n      setFormData: setFormData,\n    },\n  },\n  {\n    ...buttonColumn(\"SendBtn\"),\n    formatter: SendBtn,\n    formatExtraData: {\n      setRow: setRow,\n      setShowModal: setShowModal,\n    },\n  },\n];\n\nexport const savedTrainingsColumns = (setFormData, setRow, setShowModal) => [\n  {\n    dataField: \"name\",\n    text: \"Name\",\n    sort: true,\n    headerStyle: { width: \"33%\" },\n  },\n  {\n    dataField: \"date.Time\",\n    text: \"Release\",\n    sort: true,\n    formatter: FormattedDate,\n    headerStyle: { width: \"32%\" },\n  },\n  {\n    dataField: \"place\",\n    text: \"Place\",\n    sort: true,\n    headerStyle: { width: \"33%\" },\n  },\n  {\n    ...buttonColumn(\"EditBtn\"),\n    formatter: EditBtn,\n    formatExtraData: {\n      setFormData: setFormData,\n    },\n  },\n  {\n    ...buttonColumn(\"SendBtn\"),\n    formatter: SendBtn,\n    formatExtraData: {\n      setRow: setRow,\n      setShowModal: setShowModal,\n    },\n  },\n];\n","import React from \"react\";\nimport Modal from \"react-bootstrap/Modal\";\nimport DocumentForm from \"../Forms/DocumentForm\";\nimport TrainingForm from \"../Forms/TrainingForm\";\nimport { recordType } from \"../../utils/functions\";\n\nconst EditRecordModal = ({ setRecords, formData, setFormData, actual }) => {\n  const closeModal = () => setFormData(undefined);\n  const type = recordType(formData);\n\n  const props = { setRecords, formData, setFormData, actual };\n\n  return (\n    <Modal show={true} onHide={closeModal} centered size=\"lg\">\n      <Modal.Header closeButton>\n        <Modal.Title>Edit {type}</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        {type === \"document\" ? (\n          <DocumentForm {...props} />\n        ) : (\n          <TrainingForm {...props} />\n        )}\n      </Modal.Body>\n    </Modal>\n  );\n};\n\nexport default EditRecordModal;\n","import React, { useEffect, useState } from \"react\";\nimport MyBootstrapTable from \"../components/Tables/MyBootstrapTable\";\nimport { savedDocumentsColumns, savedTrainingsColumns } from \"./columns\";\nimport useDataApi from \"../utils/useDataApi\";\nimport { FetchError, FetchLoading } from \"../components/FetchComponents\";\nimport {\n  badMsg,\n  goodMsg,\n  orderBy,\n  recordType,\n  successResponse,\n} from \"../utils/functions\";\nimport { CustomAlert } from \"../components/CustomAlert\";\nimport EditRecordModal from \"../components/Modals/EditRecordModal\";\nimport { proxy_url } from \"../utils/data\";\nimport ConfirmModal from \"../components/Modals/ConfirmModal\";\n\nconst SavedRecordsPage = () => {\n  const [doc_data, isLoaded, error] = useDataApi(\"/document/edited\");\n  const [trn_data, isLoaded2, error2] = useDataApi(\"/training/edited\");\n\n  const [documents, setDocuments] = useState([]);\n  const [trainings, setTrainings] = useState([]);\n\n  const [notification, setNotification] = useState();\n  const [formData, setFormData] = useState();\n\n  const [showModal, setShowModal] = useState(false);\n  const [row, setRow] = useState();\n\n  useEffect(() => {\n    if (doc_data && trn_data) {\n      setDocuments(doc_data);\n      setTrainings(trn_data);\n    }\n  }, [doc_data, trn_data]);\n\n  /** Send record to relevant employees */\n  const handleClick = () => {\n    fetch(proxy_url + `/${recordType(row)}/confirm/${row.id}`, {\n      method: \"GET\",\n    })\n      .then((res) => {\n        if (successResponse(res)) {\n          updateSavedRec();\n          setNotification(goodMsg(`Record ${row.name} was successfully sent`));\n        } else {\n          setNotification(badMsg(`Record ${row.name} failed`));\n        }\n      })\n      .catch((e) => console.log(e));\n  };\n\n  /** Remove sent record */\n  const updateSavedRec = () => {\n    if (recordType(row) === \"document\") {\n      setDocuments((prev) => prev.filter((rec) => rec.id !== row.id));\n    } else {\n      setTrainings((prev) => prev.filter((rec) => rec.id !== row.id));\n    }\n  };\n\n  if (error) {\n    return <FetchError e={`Error: ${error.message}`} />;\n  } else if (error2) {\n    return <FetchError e={`Error: ${error2.message}`} />;\n  } else if (!isLoaded || !doc_data || !isLoaded2 || !trn_data) {\n    return <FetchLoading />;\n  }\n\n  const trn_columns = savedTrainingsColumns(setFormData, setRow, setShowModal);\n  const doc_columns = savedDocumentsColumns(setFormData, setRow, setShowModal);\n\n  return (\n    <>\n      {/* DOCUMENTS */}\n      <MyBootstrapTable\n        title=\"Saved documents\"\n        data={documents}\n        columns={doc_columns}\n        order={orderBy(\"deadline.Time\")}\n      />\n      {/* TRAININGS */}\n      <MyBootstrapTable\n        title=\"Saved trainings\"\n        data={trainings}\n        columns={trn_columns}\n        order={orderBy(\"deadline.Time\")}\n      />\n      {notification && <CustomAlert notification={notification} />}\n      {formData && (\n        <EditRecordModal\n          setRecords={\n            recordType(formData) === \"document\" ? setDocuments : setTrainings\n          }\n          formData={formData}\n          setFormData={setFormData}\n        />\n      )}\n      {showModal && (\n        <ConfirmModal\n          handleAccept={handleClick}\n          showModal={showModal}\n          setShowModal={setShowModal}\n          modalInfo={{\n            body: \"Do you really want to send the record to the employees?\",\n          }}\n          // style={{ border: \"10px solid #6c757d\" }}\n        />\n      )}\n    </>\n  );\n};\n\nexport default SavedRecordsPage;\n","import React, { useState, useEffect } from \"react\";\nimport { Button, Form } from \"react-bootstrap\";\nimport {\n  badMsg,\n  getSelectOptions,\n  goodMsg,\n  successResponse,\n  warningMsg,\n} from \"../utils/functions\";\nimport { proxy_url } from \"../utils/data\";\nimport { CustomAlert } from \"../components/CustomAlert\";\n\nconst SettingsPage = () => {\n  const import_types = [\n    \"GEFCO SLOVAKIA\",\n    \"GEFCO Forwarding Slovakia\",\n    \"VCM\",\n    \"Leasing\",\n  ];\n\n  const [selectedType, setSelectedType] = useState();\n\n  const [cardsFile, setCardsFile] = useState();\n  const [employeesFile, setEmployeesFile] = useState();\n\n  const [notification, setNotification] = useState();\n  const [notification2, setNotification2] = useState();\n\n  const changeCards = (e) => setCardsFile(e.target.files[0]);\n\n  const uploadCards = () => {\n    clearErrors();\n\n    const data = new FormData();\n    let name = `kiosk_upload_${Date.now()}`;\n\n    data.append(\"file\", cardsFile);\n    data.append(\"name\", name);\n\n    console.log(cardsFile);\n\n    if (!cardsFile) {\n      setNotification(badMsg(\"File is not set\"));\n      return;\n    }\n\n    fetch(proxy_url + \"/file/upload\", {\n      method: \"POST\",\n      body: data,\n    })\n      .then((response) => {\n        console.log(response);\n        if (successResponse(response)) {\n          setNotification(goodMsg(\"Successfully uploaded.\"));\n        } else {\n          setNotification(badMsg(\"Import was unsuccessful\"));\n        }\n      })\n      .catch((e) => setNotification(badMsg(\"Error submitting form! \" + e)));\n  };\n\n  const changeEmployees = (e) => setEmployeesFile(e.target.files[0]);\n\n  const uploadEmployees = () => {\n    clearErrors();\n\n    const data = new FormData();\n    let name = `employees_upload_${Date.now()}`;\n\n    if (!selectedType) {\n      setNotification2(badMsg(\"Select type\"));\n      return;\n    }\n\n    data.append(\"file\", employeesFile);\n    data.append(\"name\", name);\n    data.append(\"import\", selectedType);\n\n    if (!employeesFile) {\n      setNotification2(badMsg(\"File is not set\"));\n      return;\n    }\n\n    fetch(proxy_url + \"/file/upload\", {\n      method: \"POST\",\n      body: data,\n    })\n      .then((response) => {\n        console.log(\"rrr\", response);\n        if (successResponse(response)) {\n          return response.json();\n        } else {\n          throw new Error(\"Import was unsuccessful\");\n        }\n      })\n      .then((res) => {\n        if (res.IsWarning) {\n          setNotification2(warningMsg(res.Msg));\n        } else {\n          setNotification2(goodMsg(\"Successfully uploaded.\")); // accept\n        }\n      })\n      .catch((e) => setNotification2(badMsg(\"Error \" + e)));\n  };\n\n  const clearErrors = () => {\n    setNotification(undefined);\n    setNotification2(undefined);\n  };\n\n  return (\n    <div>\n      <script crossOrigin=\"true\" />\n      <p className=\"pt-5\">\n        <strong>IMPORT EMPLOYEES</strong>\n      </p>\n      <Form>\n        <select\n          onChange={(e) => setSelectedType(e.target.value)}\n          // ref={register({validate: v => v !== \"\"})}\n          name=\"type\"\n          required\n          value={selectedType}\n        >\n          {getSelectOptions(import_types)}\n        </select>\n        <span> Choose import</span>\n        <br />\n        <input type=\"file\" required onChange={changeEmployees} />\n        <Button type=\"button\" onClick={uploadEmployees}>\n          Upload\n        </Button>\n        {/* ALERTS */}\n        {notification2 && <CustomAlert notification={notification2} />}\n      </Form>\n      <hr />\n      <p className=\"pt-5\">\n        <strong>IMPORT CARDS</strong>\n      </p>\n      <Form>\n        <p style={{ marginBottom: \"4px\" }}>\n          Upload file with employee card information\n        </p>\n        <input type=\"file\" id=\"cardsFile\" onChange={changeCards} />\n        <Button type=\"button\" onClick={uploadCards}>\n          Upload\n        </Button>\n        {/* ALERTS */}\n        {notification && <CustomAlert notification={notification} />}\n      </Form>\n      <hr />\n    </div>\n  );\n};\n\nexport default SettingsPage;\n","import React, { useContext, useState } from \"react\";\nimport { Button, Col, Form, Row } from \"react-bootstrap\";\nimport Select from \"react-select\";\nimport { PairContext } from \"../App\";\nimport {\n  getFetch,\n  getOptionsForSelect,\n  postFetch,\n  prepareFoundDocs,\n  resolveFilter,\n} from \"../utils/functions\";\nimport { proxy_url } from \"../utils/data\";\n\nconst FilterDocuments = ({\n  employees,\n  showSM,\n  setShowSM,\n  setSMData,\n  setDocuments,\n  getAllRecords,\n}) => {\n  const pairs = useContext(PairContext);\n  const [person, setPerson] = useState(initPerson);\n\n  const optionsStructure = getOptionsForSelect(pairs);\n  const [combination, setCombinations] = useState(initCombination);\n\n  const [searchType, setSearchType] = useState(\"structure\");\n  const [searched, setSearched] = useState(false);\n\n  const handleSearch = (type, toggle) => {\n    setSearched(true);\n    setSearchType(type);\n\n    let sm = showSM;\n    if (toggle) {\n      sm = !showSM;\n      setShowSM((prev) => !prev);\n    }\n\n    sm ? searchForMatrix(type) : searchForTable(type);\n  };\n\n  const searchForTable = (type) => {\n    console.log(\"searching for TABLE\", type);\n    type === \"person\" ? tableByPerson() : tableByCombination();\n  };\n\n  const tableByPerson = () => {\n    if (!person.employee) {\n      getAllRecords();\n      return;\n    }\n\n    const id = person.employee.value;\n    getFetch(`/document/manager/${id}`)\n      .then((res) => {\n        console.log(\"tableByPerson\", res);\n        setDocuments(prepareFoundDocs(res, pairs));\n      })\n      .catch((e) => {\n        setDocuments([]);\n      });\n  };\n\n  const tableByCombination = () => {\n    const filter = resolveFilter(combination);\n    postFetch(`/document/filter`, JSON.stringify(filter)).then((res) => {\n      console.log(\"tableByCombination\", res);\n      setDocuments(prepareFoundDocs(res, pairs));\n    });\n  };\n\n  const searchForMatrix = (type) => {\n    console.log(\"searching for MATRIX\", type);\n    type === \"person\" ? matrixByPerson() : matrixByCombination();\n  };\n\n  const matrixByPerson = () => {\n    fetch(proxy_url + `/skill/matrix`, {\n      method: \"POST\",\n      body: new URLSearchParams(`superior_id=${person.employee.value}`),\n    })\n      .then((result) => result.json())\n      .then((res) => {\n        console.log(\"matrixByPerson\", res);\n        setSMData(res);\n      });\n  };\n\n  const matrixByCombination = () => {\n    const filter = resolveFilter(combination);\n    fetch(proxy_url + `/skill/matrix`, {\n      method: \"POST\",\n      body: new URLSearchParams(`filter=${JSON.stringify(filter)}`),\n    })\n      .then((result) => result.json())\n      .then((res) => {\n        console.log(\"matrixByCombination\", res);\n        setSMData(res);\n      });\n  };\n\n  const getBtnStyle = (type) => {\n    const colors = searched && searchType === type ? activeBtn : passiveBtn;\n    return {\n      border: \"none\",\n      width: \"10%\",\n      ...colors,\n    };\n  };\n\n  const selectPerson = (data, { name: field }) => {\n    setSearched(false);\n    setPerson({ ...person, [field]: data });\n  };\n\n  const selectorPerson = () => (\n    <div style={style}>\n      <Select\n        isClearable\n        value={person.employee}\n        name={\"employee\"}\n        placeholder={\"Select employee\"}\n        options={employees}\n        onChange={(data, p) => selectPerson(data, p)}\n      />\n    </div>\n  );\n\n  const selectStructure = (data, { name: field }) => {\n    setSearched(false);\n    setCombinations({ ...combination, [field]: data });\n  };\n\n  const selectorStructure = (name) => (\n    <div style={style}>\n      <Select\n        isClearable\n        isMulti\n        value={combination[name]}\n        name={name}\n        placeholder={`Select ${name}`}\n        options={optionsStructure[name]}\n        onChange={(data, s) => selectStructure(data, s)}\n      />\n    </div>\n  );\n\n  return (\n    <Form style={{ marginLeft: \"16px\" }}>\n      {/* EMPLOYEE ROW*/}\n      <Row className=\"pb-2\">\n        <Button\n          style={getBtnStyle(\"person\")}\n          onClick={() => handleSearch(\"person\")}\n        >\n          {showSM ? \"Search manager\" : \"Search employee\" }\n        </Button>\n        {selectorPerson()}\n        <Col className=\"text-right pr-0\">\n          <Button\n            className=\"mr-3\"\n            variant=\"primary\"\n            onClick={() => handleSearch(searchType, true)}\n          >\n            {`Show ${showSM ? \"table\" : \"skill matrix\"}`}\n          </Button>\n        </Col>\n      </Row>\n      {/* STRUCTURE ROW*/}\n      <Row>\n        <Button\n          style={getBtnStyle(\"structure\")}\n          onClick={() => handleSearch(\"structure\")}\n        >\n          Search combination\n        </Button>\n        {selectorStructure(\"branches\")}\n        {selectorStructure(\"divisions\")}\n        {selectorStructure(\"departments\")}\n        {selectorStructure(\"cities\")}\n      </Row>\n    </Form>\n  );\n};\n\nconst initCombination = {\n  branches: [],\n  cities: [],\n  departments: [],\n  divisions: [],\n};\n\nconst initPerson = {\n  employee: \"\",\n  lector: \"\",\n};\n\nconst style = {\n  width: \"22%\",\n  marginLeft: \"5px\",\n};\n\nconst activeBtn = {\n  backgroundColor: \"#f3c404f2\",\n  color: \"black\",\n};\n\nconst passiveBtn = {\n  backgroundColor: \"#343a40\",\n};\n\nexport default FilterDocuments;\n","import React from \"react\";\nimport { Button } from \"react-bootstrap\";\n\nconst ToggleBtn = (c, row, rowIndex, { id, data, setData, i }) => {\n  const document = data[rowIndex];\n  let state = document.employees[i]?.state;\n  if (state === undefined) {\n    state = \"_\";\n  }\n  const mark = state.includes(\"X\");\n  if (mark) state = unMarkState();\n\n  function markState() {\n    return \"X\" + state;\n  }\n\n  function unMarkState() {\n    if (!state.includes(\"X\")) return state;\n    if (state.length === 1 && state !== \"X\") return state;\n    return state.substr(1);\n  }\n\n  const handleClick = () => {\n    const stt = mark ? unMarkState() : markState();\n\n    const new_employees = [...document.employees];\n    new_employees[i] = {\n      ...new_employees[i],\n      state: stt,\n    };\n\n    const copy = [...data];\n    copy[rowIndex] = { ...document, employees: new_employees };\n    setData(copy);\n  };\n\n  const getColor = (state) => {\n    switch (state) {\n      case \"-\":\n        return \"gray\";\n      case \"_\":\n        return \"cornflowerblue\";\n      case \"es\":\n        return \"tomato\";\n      case \"e\":\n        return \"orange\";\n      case \"s\":\n        return \"gold\";\n      default:\n        return \"green\";\n      // TODO implement *\n    }\n  };\n\n  const getLabel = () => {\n    const labels = [\n      { state: \"-\", label: \"no need\" },\n      { state: \"es\", label: \"miss e+s\" },\n      { state: \"e\", label: \"miss e\" },\n      { state: \"s\", label: \"miss s\" },\n      { state: \"\", label: \"well done\" },\n      { state: \"X\", label: \"bug\" },\n      { state: \"_\", label: \"not send\" },\n    ];\n    return labels.find((l) => l.state === state)?.label;\n  };\n\n  const styledBtn = {\n    backgroundColor: getColor(state),\n    color: state === \"s\" ? \"black\" : \"white\",\n    borderColor: mark ? \"black\" : \"white\",\n    borderWidth: \"5px\",\n  };\n\n  return (\n    <Button style={styledBtn} onClick={handleClick} className=\"btn-block\">\n      {getLabel()}\n    </Button>\n  );\n};\n\nexport default ToggleBtn;\n","import React from \"react\";\nimport { Button, ButtonGroup, Col, Row, Card } from \"react-bootstrap\";\nimport { ExclamationTriangle } from \"react-bootstrap-icons\";\n\nexport const RowButtons = ({\n  data,\n  setAction,\n  setModalInfo,\n  setShowModal,\n  handleAccept,\n  showLegend,\n  setShowLegend,\n}) => {\n  const handleClick = (e) => {\n    const action = e.target.id;\n    setAction(action);\n    if (action === \"cancel\") {\n      handleAccept();\n    } else {\n      setModalInfo({\n        body: `Do you really want to ${action} selected signatures?`,\n      });\n      setShowModal(true);\n    }\n  };\n\n  const disabled = data.length === 0;\n\n  return (\n    <Row className=\"mb-3\">\n      <Col className=\"text-left\">\n        <ButtonGroup className=\"div-btn\" size=\"sm\">\n          {/* maybe https://react-bootstrap.github.io/components/overlays/ ? */}\n          <Button onClick={() => setShowLegend(!showLegend)}>\n            {showLegend ? \"Hide legend\" : \"Show legend\"}\n          </Button>\n        </ButtonGroup>\n      </Col>\n      <Col className=\"text-right\">\n        <ButtonGroup className=\"div-btn\" onClick={handleClick} size=\"sm\">\n          <Button id=\"sign\" size=\"sm\" disabled={disabled}>\n            Sign\n          </Button>\n          <Button id=\"cancelDuty\" size=\"sm\" disabled={disabled}>\n            Cancel duty\n          </Button>\n          <Button id=\"trainAgain\" size=\"sm\" disabled={disabled}>\n            Train again\n          </Button>\n          <Button\n            id=\"cancel\"\n            size=\"sm\"\n            onClick={handleClick}\n            disabled={disabled}\n          >\n            Cancel\n          </Button>\n        </ButtonGroup>\n      </Col>\n    </Row>\n  );\n};\n\nexport const Legend = () => {\n  const Badge = ({ color, textColor = \"white\", label, text }) => {\n    const style = {\n      background: color,\n      borderColor: color,\n      color: textColor,\n      width: \"80px\",\n      height: \"20px\",\n      fontSize: \".7rem\",\n      fontWeight: \"bold\",\n      padding: \"0\",\n    };\n    return (\n      <p>\n        <span>\n          <Button style={style}>{label}</Button>\n          {` ${text}`}\n        </span>\n      </p>\n    );\n  };\n\n  const cardStyle = {\n    width: \"30rem\",\n    marginTop: \"1rem\",\n    fontSize: \".7rem\",\n    marginBottom: \".75rem\",\n  };\n\n  return (\n    <Card style={cardStyle}>\n      <Card.Body>\n        <Card.Subtitle className=\"mb-3 text-muted\">Legend:</Card.Subtitle>\n        <Card.Text>\n          <Badge\n            label=\"no need\"\n            text=\"Zamestnanec bol odznačený z potreby oboznámenia\"\n            color=\"gray\"\n          />\n          <Badge\n            label=\"miss e+s\"\n            text=\"Ani zamestnanec ani nadriadený ešte nepotvrdili\"\n            color=\"tomato\"\n          />\n          <Badge label=\"miss e\" text=\"Zamestnanec nepotvrdil\" color=\"orange\" />\n          <Badge\n            label=\"miss s\"\n            text=\"Nadriadený nepotvrdil\"\n            color=\"gold\"\n            textColor=\"white\"\n          />\n          <Badge label=\"well done\" text=\"Dokument je potvrdený\" color=\"green\" />\n          <Badge\n            label=\"not sent\"\n            text=\"Este neodoslane\"\n            color=\"cornflowerblue\"\n          />\n          <p>\n            <ExclamationTriangle\n              style={{ color: \"red\", marginBottom: \"4px\" }}\n            />{\" \"}\n            Uplynul deadline a chýbajú podpisy\n          </p>\n          <p>\n            hviezdička <strong>*</strong> znamena, ze zamestnanec sa opakovane\n            preškoluje\n          </p>\n        </Card.Text>\n      </Card.Body>\n    </Card>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport ToggleBtn from \"./ToggleBtn\";\nimport ConfirmModal from \"../../components/Modals/ConfirmModal\";\nimport { Legend, RowButtons } from \"./SkillMatrixComponents\";\nimport {\n  buttonColumn,\n  prepareSMData,\n  sortEmployeesByName,\n} from \"../../utils/functions\";\nimport { DocumentLabel } from \"../../utils/Formatter\";\nimport MyBootstrapTable from \"../../components/Tables/MyBootstrapTable\";\nimport { proxy_url } from \"../../utils/data\";\n\nconst SkillMatrix = ({ SMData }) => {\n  const [data, setData] = useState([]);\n  const [employees, setEmployees] = useState([]);\n\n  useEffect(() => {\n    if (!SMData.documents) return;\n\n    const sample = SMData.documents[0];\n    if (!sample || !sample.signatures) {\n      setData([]);\n      return;\n    }\n\n    const sortedEmployees = sortEmployeesByName(SMData.employees);\n    setEmployees(sortedEmployees);\n\n    const sm = [];\n    let signatures = [];\n\n    SMData.documents.forEach((doc, j) => {\n      sortedEmployees.forEach((emp, i) => {\n        const signature = doc.signatures.find(\n          (sign) => sign.employee_id === emp.id\n        );\n        signatures.push(\n          signature || {\n            employee: {\n              id: emp.id,\n            },\n            sign: {\n              id: null,\n            },\n          }\n        );\n      });\n\n      sm.push({\n        ...doc,\n        signatures: signatures,\n      });\n\n      doc.signatures = signatures;\n\n      signatures = [];\n    });\n\n    setData(prepareSMData(SMData.documents));\n  }, [SMData, SMData.documents]);\n\n  const [showLegend, setShowLegend] = useState(false);\n  const [showModal, setShowModal] = useState(false);\n  const [modalInfo, setModalInfo] = useState({});\n  const [action, setAction] = useState(\"\");\n\n  const columns = getColumns();\n\n  function getColumns() {\n    const columns = [\n      {\n        dataField: \"name\",\n        text: \"\",\n        formatter: DocumentLabel,\n        headerStyle: { width: \"1%\" },\n      },\n    ];\n\n    let counter = 0;\n\n    employees.forEach((e) => {\n      const name = `${e.first_name} ${e.last_name}, ${e.job_title}`;\n      columns.push({\n        ...buttonColumn(e.id, name),\n        // headerFormatter: FormattedEmployee,\n        // headerTitle: (col, row) => \"e.job\",\n        formatter: ToggleBtn,\n        formatExtraData: {\n          id: e.id,\n          data: data,\n          setData: setData,\n          // signatures: signatures,\n          // setSignatures: setSignatures,\n          i: counter++ % employees.length,\n        },\n      });\n    });\n\n    return columns;\n  }\n\n  function changedState(e) {\n    return e.state.includes(\"X\");\n  }\n\n  function sign(state) {\n    if (state === \"s\") return \"\";\n    return \"e\";\n  }\n\n  function cancelSign() {\n    return \"-\";\n  }\n\n  function resetSign(require_superior) {\n    return require_superior ? \"es\" : \"s\";\n  }\n\n  function updateState(require_superior, e) {\n    if (!changedState(e)) return e;\n    console.log(\"e\", e);\n    let state = e.state.replace(\"X\", \"\");\n\n    if (action === \"sign\") {\n      if (state === \"-\" || state === \"e\" || state === \"\") {\n        return { ...e, state: state };\n      }\n      fetch(proxy_url + \"/sign/superior\", {\n        method: \"POST\",\n        body: new URLSearchParams(`id=${e.sign_id}`),\n      });\n      // }).then((res) => {\n      // if (successResponse(res)) {\n      return { ...e, state: sign(state) };\n      // }\n      // });\n    }\n    if (action === \"cancelDuty\") {\n      if (state === \"-\") return { ...e, state: state };\n      fetch(proxy_url + \"/cancels\", {\n        method: \"POST\",\n        body: new URLSearchParams(e.sign_id.toString()),\n      });\n      return { ...e, state: cancelSign() };\n    }\n    if (action === \"trainAgain\") {\n      if (require_superior && state === \"es\") return { ...e, state: state };\n      if (!require_superior && !state) return { ...e, state: \"e\" };\n      fetch(proxy_url + \"/resigns\", {\n        method: \"POST\",\n        body: new URLSearchParams(e.sign_id.toString()),\n      });\n      state = resetSign(require_superior);\n      return { ...e, state: state };\n    }\n  }\n\n  const handleAccept = () => {\n    const update = data.map((d) => {\n      return {\n        ...d,\n        employees: d.employees.map((e) => updateState(d.require_superior, e)),\n      };\n    });\n    setData(update);\n  };\n\n  const handleExport = () => {\n    // TODO Export\n  };\n\n  return (\n    <>\n      <MyBootstrapTable\n        title=\"SkillMatrix\"\n        classes=\"skill-matrix-table\"\n        data={data}\n        columns={columns}\n        // horizontal scroll\n        wrapperClasses=\"table-responsive\"\n        rowClasses=\"text-nowrap\"\n      />\n      <RowButtons\n        data={data}\n        setAction={setAction}\n        setModalInfo={setModalInfo}\n        setShowModal={setShowModal}\n        handleAccept={handleAccept}\n        handleExport={handleExport}\n        showLegend={showLegend}\n        setShowLegend={setShowLegend}\n      />\n      {showLegend && <Legend />}\n      <ConfirmModal\n        showModal={showModal}\n        setShowModal={setShowModal}\n        modalInfo={modalInfo}\n        handleAccept={handleAccept}\n      />\n    </>\n  );\n};\n\nexport default SkillMatrix;\n","import React from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { recordType } from \"../../utils/functions\";\n\nconst ReportBtn = (cell, row, index, { setReport }) => {\n  return (\n    <Button\n      // href={`/${recordType(row)}/reports/${row.id}`}\n      // type={\"link\"}\n      onClick={() => setReport(row.id)}\n      size=\"sm\"\n    >\n      Report\n    </Button>\n  );\n};\n\nexport default ReportBtn;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport {\n  getFetch,\n  getTimestamp,\n  orderBy,\n  postFetch,\n} from \"../../utils/functions\";\nimport MyBootstrapTable from \"../../components/Tables/MyBootstrapTable\";\nimport { format_date } from \"../../utils/Formatter\";\nimport Button from \"react-bootstrap/Button\";\nimport Modal from \"react-bootstrap/Modal\";\nimport { useReactToPrint } from \"react-to-print\";\n\nconst ReportDocumentModal = ({ id, closeModal }) => {\n  const [reports, setReports] = useState([]);\n  const [activeReport, setActiveReport] = useState();\n\n  const [employees, setEmployees] = useState([]);\n  const [reqSuperior, setReqSuperior] = useState(false);\n\n  const [preData, setPreData] = useState([]);\n\n  const componentRef = useRef();\n  const handlePrint = useReactToPrint({\n    content: () => componentRef.current,\n  });\n\n  useEffect(() => {\n    getFetch(`/document/report/${id}`).then((res) => {\n      console.log(\"report data\", res);\n\n      const rep = res.find((r) => r.id == id);\n      prepareReport(rep);\n\n      if (res.length > 1) {\n        const sorted = res.sort(function (a, b) {\n          return a.id - b.id;\n        });\n        setReports(sorted);\n      }\n    });\n  }, []);\n\n  const prepareReport = (res) => {\n    setActiveReport(res);\n    setReqSuperior(res.require_superior);\n\n    setPreData([\n      {\n        label: \"Názov dokumentu:\",\n        value: res.name,\n      },\n    ]);\n\n    if (res.require_superior) {\n      let superiors = [];\n      res.signatures.forEach((sign) => {\n        if (sign.superior_id !== 0) {\n          superiors.push(sign.superior_id);\n        }\n      });\n      superiors = `[${superiors.join(\",\")}]`;\n\n      postFetch(`/employees/ids`, JSON.stringify({ ids: superiors })).then(\n        (res2) => {\n          console.log(\"res\", res2);\n          setPreData((prev) => [\n            ...prev,\n            {\n              label: \"Školiteľ:\",\n              value: res2\n                .map((s) => s.first_name + \" \" + s.last_name)\n                .join(\", \"),\n            },\n          ]);\n        }\n      );\n    }\n\n    const emps = res.signatures.map((sign) => {\n      const { employee: e } = sign;\n      return {\n        id: sign.employee_id,\n        name: `${e.first_name} ${e.last_name}`,\n        e_date: format_date(sign.e_date),\n        s_date: format_date(sign.s_date),\n      };\n    });\n\n    // setEmployees([...emps, ...emps, ...emps]);\n    setEmployees(emps);\n  };\n\n  const title = `Prezenčná listina`;\n\n  const preColumns = [\n    {\n      dataField: \"label\",\n      text: \"\",\n    },\n    {\n      dataField: \"value\",\n      text: \"\",\n    },\n  ];\n\n  const columns = [\n    {\n      dataField: \"name\",\n      text: \"Full name\",\n      sort: true,\n    },\n    {\n      dataField: \"e_date\",\n      text: \"Sign Date\",\n      sort: true,\n    },\n  ];\n\n  if (reqSuperior) {\n    columns.push({\n      dataField: \"s_date\",\n      text: \"Superior\",\n      sort: true,\n    });\n  }\n\n  const ReportLink = ({ rep }) => {\n    const row = `${rep.name}, version: ${rep.version}, date: ${format_date(\n      rep.release_date\n    )}`;\n    return (\n      <p style={{ marginBottom: \"4px\", marginRight: \"24px\" }}>\n        {rep.id === activeReport?.id ? (\n          <span>{row}</span>\n        ) : (\n          <Button\n            variant=\"link\"\n            onClick={() => prepareReport(rep)}\n            style={{ padding: \"0\" }}\n          >\n            {row}\n          </Button>\n        )}\n      </p>\n    );\n  };\n\n  return (\n    <Modal show={true} onHide={closeModal} centered size=\"lg\">\n      <Modal.Header closeButton>\n        <Modal.Title>\n          <span>{title}</span>\n          <Button\n            size=\"sm\"\n            variant=\"dark\"\n            style={{ position: \"absolute\", right: \"3.5rem\" }}\n            onClick={handlePrint}\n          >\n            Print this out!\n          </Button>\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <div id=\"print-page content\" ref={componentRef}>\n          <div\n            className=\"no-print\"\n            style={{\n              marginBottom: \"1rem\",\n            }}\n          >\n            {reports.map((rep) => (\n              <ReportLink rep={rep} />\n            ))}\n          </div>\n          <div\n            className=\"print header\"\n            style={{\n              position: \"relative\",\n              marginBottom: \"5rem\",\n              marginTop: \"2rem\",\n              display: \"none\",\n            }}\n          >\n            <img\n              src=\"/images/logo-header.png\"\n              style={{\n                position: \"absolute\",\n                left: \"0\",\n              }}\n            />\n            <h2\n              style={{\n                textAlign: \"center\",\n              }}\n            >\n              {title}\n            </h2>\n          </div>\n          <MyBootstrapTable\n            data={preData}\n            columns={preColumns}\n            defaultSorted={orderBy(\"name\")}\n            headerClasses=\"d-none\"\n            classes=\"report mb-2\"\n          />\n          <MyBootstrapTable\n            data={employees}\n            columns={columns}\n            defaultSorted={orderBy(\"name\")}\n            // horizontal scroll\n            wrapperClasses=\"table-responsive\"\n            rowClasses=\"text-nowrap\"\n          />\n          <p\n            id=\"pageFooter\"\n            className=\"print footer\"\n            style={{ display: \"none\", position: \"absolute\", bottom: \"0\" }}\n          >\n            {getTimestamp()}\n          </p>\n          <div\n            style={{\n              display: \"none\",\n              position: \"absolute\",\n              bottom: \"0\",\n              right: \"0\",\n            }}\n            className=\"page-number print\"\n          />\n        </div>\n      </Modal.Body>\n    </Modal>\n  );\n};\n\nexport default ReportDocumentModal;\n","import React, { useState } from \"react\";\nimport EditBtn from \"../components/Buttons/EditBtn\";\nimport EditRecordModal from \"../components/Modals/EditRecordModal\";\nimport ReportBtn from \"./report/ReportBtn\";\nimport { buttonColumn, orderBy } from \"../utils/functions\";\nimport { FormattedRelease, Percentage } from \"../utils/Formatter\";\nimport MyBootstrapTable from \"../components/Tables/MyBootstrapTable\";\nimport ReportDocumentModal from \"./report/ReportDocumentModal\";\n\nconst FoundDocuments = ({ found, setFound }) => {\n  const [formData, setFormData] = useState();\n  const [report, setReport] = useState();\n\n  const columns = [\n    {\n      dataField: \"name\",\n      text: \"Name\",\n      sort: true,\n    },\n    {\n      dataField: \"release_date.Time\",\n      text: \"Release\",\n      formatter: FormattedRelease,\n      sort: true,\n    },\n    {\n      dataField: \"type\",\n      text: \"Type\",\n      sort: true,\n    },\n    {\n      dataField: \"branches\",\n      text: \"Branches\",\n      sort: true,\n    },\n    {\n      dataField: \"divisions\",\n      text: \"Divisions\",\n      sort: true,\n    },\n    {\n      dataField: \"departments\",\n      text: \"Departments\",\n      sort: true,\n    },\n    {\n      dataField: \"cities\",\n      text: \"Cities\",\n      sort: true,\n    },\n    {\n      dataField: \"complete\",\n      text: \"State\",\n      formatter: Percentage,\n      sort: true,\n      headerStyle: { width: \"1%\" },\n    },\n    {\n      ...buttonColumn(\"EditBtn\"),\n      formatter: EditBtn,\n      formatExtraData: {\n        setFormData: setFormData,\n      },\n    },\n    {\n      ...buttonColumn(\"ReportBtn\"),\n      formatter: ReportBtn,\n      formatExtraData: {\n        setReport: setReport,\n      },\n    },\n  ];\n\n  return (\n    <>\n      <MyBootstrapTable\n        title=\"Found documents\"\n        data={found}\n        columns={columns}\n        defaultSorted={orderBy(\"name\")}\n        // horizontal scroll\n        wrapperClasses=\"table-responsive\"\n        rowClasses=\"text-nowrap\"\n      />\n      {formData && (\n        <EditRecordModal\n          setRecords={setFound}\n          formData={formData}\n          setFormData={setFormData}\n          actual={true}\n        />\n      )}\n      {report && (\n        <ReportDocumentModal\n          id={report}\n          closeModal={() => setReport(undefined)}\n        />\n      )}\n    </>\n  );\n};\n\nexport default FoundDocuments;\n","import React, { useContext, useEffect, useRef, useState } from \"react\";\nimport { getFetch, orderBy } from \"../../utils/functions\";\nimport MyBootstrapTable from \"../../components/Tables/MyBootstrapTable\";\nimport { format_date } from \"../../utils/Formatter\";\nimport { PairContext } from \"../../App\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Button from \"react-bootstrap/Button\";\nimport { useReactToPrint } from \"react-to-print\";\n\nconst ReportTrainingModal = ({ id, closeModal }) => {\n  const pairs = useContext(PairContext);\n\n  const [preData, setPreData] = useState([]);\n  const [employees, setEmployees] = useState([]);\n\n  const componentRef = useRef();\n  const handlePrint = useReactToPrint({\n    content: () => componentRef.current,\n  });\n\n  useEffect(() => {\n    getFetch(`/training/report/${id}`).then((res) => {\n      setPreData([\n        {\n          label: \"Názov školenia:\",\n          value: res.name,\n        },\n        {\n          label: \"Dátum a miesto konania školenia:\",\n          value: format_date(res.date) + \" \" + res.place,\n        },\n        {\n          label: \"Názov vzdelávacej agentúry:\",\n          value: res.agency,\n        },\n        {\n          label: \"Meno a priezvisko školiteľa:\",\n          value: res.lector,\n        },\n      ]);\n\n      setEmployees(\n        res.signatures.map((sign) => {\n          const e = sign.employee;\n          return {\n            id: e.id,\n            name: `${e.first_name} ${e.last_name}`,\n            date: format_date(sign.date),\n            department: pairs.departments.find(\n              (dep) => dep.id === e.department_id\n            )?.name,\n          };\n        })\n      );\n    });\n  }, []);\n\n  const title = `Prezenčná listina`;\n\n  const preColumns = [\n    {\n      dataField: \"label\",\n      text: \"\",\n    },\n    {\n      dataField: \"value\",\n      text: \"\",\n    },\n  ];\n\n  const columns = [\n    {\n      dataField: \"name\",\n      text: \"Full name\",\n      sort: true,\n    },\n    {\n      dataField: \"department\",\n      text: \"Department\",\n      sort: true,\n    },\n    {\n      dataField: \"date\",\n      text: \"Sign Date\",\n      sort: true,\n    },\n  ];\n\n  return (\n    <Modal show={true} onHide={closeModal} centered size=\"lg\">\n      <Modal.Header closeButton>\n        <Modal.Title>\n          <span>{title}</span>\n          <Button\n            size=\"sm\"\n            variant=\"dark\"\n            style={{ position: \"absolute\", right: \"3.5rem\" }}\n            onClick={handlePrint}\n          >\n            Print this out!\n          </Button>\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <div id=\"print-page content\" ref={componentRef}>\n          <div>\n            <MyBootstrapTable\n              data={preData}\n              columns={preColumns}\n              defaultSorted={orderBy(\"name\")}\n              headerClasses=\"d-none\"\n              classes=\"report\"\n            />\n            <br />\n            <MyBootstrapTable\n              data={employees}\n              columns={columns}\n              defaultSorted={orderBy(\"name\")}\n              // horizontal scroll\n              wrapperClasses=\"table-responsive\"\n              rowClasses=\"text-nowrap\"\n            />\n          </div>\n        </div>\n      </Modal.Body>\n    </Modal>\n  );\n};\n\nexport default ReportTrainingModal;\n","import React, { useState } from \"react\";\nimport EditBtn from \"../components/Buttons/EditBtn\";\nimport EditRecordModal from \"../components/Modals/EditRecordModal\";\nimport ReportBtn from \"./report/ReportBtn\";\nimport { buttonColumn, orderBy } from \"../utils/functions\";\nimport { FormattedDate, Percentage } from \"../utils/Formatter\";\nimport MyBootstrapTable from \"../components/Tables/MyBootstrapTable\";\nimport { Redirect } from \"react-router\";\nimport ReportDocumentModal from \"./report/ReportDocumentModal\";\nimport ReportTrainingModal from \"./report/ReportTrainingModal\";\n\nconst FoundTrainings = ({ found, setFound }) => {\n  const [formData, setFormData] = useState();\n  const [report, setReport] = useState();\n\n  const columns = [\n    {\n      dataField: \"name\",\n      text: \"Name\",\n      sort: true,\n    },\n    {\n      dataField: \"date.Time\",\n      text: \"Release\",\n      formatter: FormattedDate,\n      sort: true,\n    },\n    {\n      dataField: \"lector\",\n      text: \"Lector\",\n      sort: true,\n    },\n    {\n      dataField: \"agency\",\n      text: \"Agency\",\n      sort: true,\n    },\n    {\n      dataField: \"place\",\n      text: \"Place\",\n      sort: true,\n    },\n    {\n      dataField: \"complete\",\n      text: \"State\",\n      formatter: Percentage,\n      sort: true,\n      headerStyle: { width: \"1%\" },\n    },\n    {\n      ...buttonColumn(\"EditBtn\"),\n      formatter: EditBtn,\n      formatExtraData: {\n        setFormData: setFormData,\n      },\n    },\n    {\n      ...buttonColumn(\"ReportBtn\"),\n      formatter: ReportBtn,\n      formatExtraData: {\n        setReport: setReport,\n      },\n    },\n  ];\n\n  return (\n    <>\n      <MyBootstrapTable\n        title=\"Found trainings\"\n        data={found}\n        columns={columns}\n        defaultSorted={orderBy(\"name\")}\n        // horizontal scroll\n        wrapperClasses=\"table-responsive\"\n        rowClasses=\"text-nowrap\"\n      />\n      {formData && (\n        <EditRecordModal\n          setRecords={setFound}\n          formData={formData}\n          setFormData={setFormData}\n          actual={true}\n        />\n      )}\n      {report && (\n        <ReportTrainingModal\n          id={report}\n          closeModal={() => setReport(undefined)}\n        />\n      )}\n    </>\n  );\n};\n\nexport default FoundTrainings;\n","import React, { useEffect, useState } from \"react\";\nimport { Button, Form, Row } from \"react-bootstrap\";\nimport Select from \"react-select\";\nimport { getFetch, postFetch } from \"../utils/functions\";\n\nconst FilterTrainings = ({ employees, setTrainings, getAllRecords }) => {\n  const [lectors, setLectors] = useState([]); // all lectors\n  const [persons, setPersons] = useState({\n    employee: \"\",\n    lector: \"\",\n  });\n\n  const [searched, setSearched] = useState(false);\n\n  useEffect(() => {\n    getFetch(\"/lectors/all\").then((res) => {\n      setLectors(\n        res.map((l) => {\n          console.log(\"lector\", l);\n          return { value: l, label: l };\n        })\n      );\n    });\n  }, []);\n\n  const selectPerson = (data, { name: field }) => {\n    setSearched(false);\n    setPersons({ ...persons, [field]: data });\n  };\n\n  const handleSearch = () => {\n    setSearched(true);\n\n    if (!persons.employee && !persons.lector) {\n      getAllRecords();\n      return;\n    }\n    console.log(\n      \"post\",\n      `${JSON.stringify({\n        employee: \"\" + persons.employee?.value || \"\",\n        lector: persons.lector?.value || \"\",\n      })}`\n    );\n    postFetch(\n      `/training/filter`,\n      `${JSON.stringify({\n        employee: \"\" + persons.employee?.value || \"\",\n        lector: persons.lector?.value || \"\",\n      })}`\n    ).then((res) => {\n      console.log(\"found trainings\", res);\n      setTrainings(res);\n    });\n  };\n\n  const getBtnStyle = () => {\n    const colors = searched ? activeBtn : passiveBtn;\n    return {\n      border: \"none\",\n      width: \"10%\",\n      ...colors,\n    };\n  };\n\n  const selectorPerson = (name, options, value) => (\n    <div style={style}>\n      <Select\n        isClearable\n        value={value}\n        name={name}\n        placeholder={`Select ${name}`}\n        options={options}\n        onChange={(data, p) => selectPerson(data, p)}\n      />\n    </div>\n  );\n\n  return (\n    <Form style={{ marginTop: \"3rem\", marginLeft: \"14px\" }}>\n      <Row>\n        <Button style={getBtnStyle()} onClick={handleSearch}>\n          Search trainings\n        </Button>\n        {selectorPerson(\"employee\", employees, persons.employee)}\n        {selectorPerson(\"lector\", lectors, persons.lector)}\n      </Row>\n    </Form>\n  );\n};\n\nconst style = {\n  width: \"20%\",\n  marginLeft: \"4px\",\n};\n\nconst activeBtn = {\n  backgroundColor: \"#f3c404f2\",\n  color: \"black\",\n};\n\nconst passiveBtn = {\n  backgroundColor: \"#343a40\",\n};\n\nexport default FilterTrainings;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport FilterDocuments from \"./FilterDocuments\";\nimport SkillMatrix from \"./skill-matrix/SkillMatrix\";\nimport {\n  getFetch,\n  prepareEmployees,\n  prepareFoundDocs,\n} from \"../utils/functions\";\nimport FoundDocuments from \"./FoundDocuments\";\nimport FoundTrainings from \"./FoundTrainings\";\nimport FilterTrainings from \"./FilterTrainings\";\nimport { PairContext } from \"../App\";\n\nconst FinderPage = () => {\n  const pairs = useContext(PairContext);\n  const [employees, setEmployees] = useState([]);\n\n  const [showSM, setShowSM] = useState();\n  const [SMData, setSMData] = useState([]);\n  const [documents, setDocuments] = useState([]);\n  const [trainings, setTrainings] = useState([]);\n\n  useEffect(() => {\n    getAllRecords();\n  }, []);\n\n  useEffect(() => {\n    getFetch(\"/employees/all\").then((res) => {\n      setEmployees(prepareEmployees(res, pairs.departments));\n    });\n  }, [pairs]);\n\n  const getAllRecords = () => {\n    getFetch(\"/document/actual\").then((res) => {\n      setDocuments(prepareFoundDocs(res, pairs));\n    });\n    getFetch(\"/training/all\").then((res) => {\n      setTrainings(res);\n    });\n  };\n\n  return (\n    <div style={{ marginTop: \"1%\" }} className=\"finder\">\n      <FilterDocuments\n        employees={employees}\n        showSM={showSM}\n        setShowSM={setShowSM}\n        setSMData={setSMData}\n        setDocuments={setDocuments}\n        getAllRecords={getAllRecords}\n      />\n      {showSM ? (\n        <SkillMatrix SMData={SMData} />\n      ) : (\n        <>\n          <FoundDocuments found={documents} setFound={setDocuments} />\n          <FilterTrainings\n            employees={employees}\n            setTrainings={setTrainings}\n            getAllRecords={getAllRecords}\n          />\n          <FoundTrainings found={trainings} setFound={setTrainings} />\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default FinderPage;\n","import React from \"react\";\nimport { useLocation } from \"react-router\";\n\nconst Page404 = () => {\n  const pathname = useLocation().pathname;\n\n  return (\n    <>\n      <h2 className=\"pt-5\">Error 404: Page not found</h2>\n      <h5 className=\"pt-3\">\n        Not match for <code>{pathname}</code>\n      </h5>\n    </>\n  );\n};\n\nexport default Page404;\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { Redirect } from \"react-router\";\n\nimport Container from \"react-bootstrap/Container\";\nimport { getUser, isAdmin } from \"./utils/functions\";\n\nimport RecordsToSignPage from \"./unsigned-records/RecordsToSignPage\";\nimport LoginPage from \"./login/LoginPage\";\nimport LogoutPage from \"./login/LogoutPage\";\nimport SignedRecordsPage from \"./signed-records/SignedRecordsPage\";\nimport AddRecordPage from \"./add-record/AddRecordPage\";\nimport SavedRecordsPage from \"./saved-records/SavedRecordsPage\";\nimport SettingsPage from \"./settings/SettingsPage\";\nimport FinderPage from \"./finder/FinderPage\";\nimport Page404 from \"./Page404\";\n\nconst Routes = () => {\n  const user = getUser();\n  const admin = isAdmin();\n\n  /** Show the component only when the user is logged in\n   *  Otherwise, redirect the user to login page */\n  const Private = ({ component: Component, ...rest }) => {\n    if (!user) {\n      return <Redirect to=\"/login\" />;\n    }\n    return <Route {...rest} component={Component} />;\n  };\n\n  return (\n    <>\n      <Container>\n        <Switch>\n          {/* HomeRoute */}\n          <Route\n            exact\n            path=\"/\"\n            render={() => {\n              return getUser() ? (\n                <Redirect to=\"/records-to-sign\" component={RecordsToSignPage} />\n              ) : (\n                <Redirect to=\"/login\" component={LoginPage} />\n              );\n            }}\n          />\n          <Route path=\"/login\" component={LoginPage} />\n          <Route path=\"/logout\" component={LogoutPage} />\n          <Private path=\"/records-to-sign\" component={RecordsToSignPage} />\n          <Private path=\"/signed-records\" component={SignedRecordsPage} />\n          {admin && (\n            <>\n              <Private path=\"/add-record\" component={AddRecordPage} />\n              <Private path=\"/saved-record\" component={SavedRecordsPage} />\n              <Private path=\"/settings\" component={SettingsPage} />\n            </>\n          )}\n          <Route path=\"*\" component={Page404} />\n        </Switch>\n      </Container>\n      <div className=\"large-container\">\n        {admin && <Private path=\"/finder\" component={FinderPage} />}\n      </div>\n    </>\n  );\n};\n\nexport default Routes;\n","export default __webpack_public_path__ + \"static/media/logo.923adaad.png\";","import React from \"react\";\nimport { Navbar, Nav, NavLink } from \"react-bootstrap\";\nimport { getLanguage, getUser, isAdmin } from \"./utils/functions\";\nimport { wording } from \"./utils/wording\";\nimport { useLocation } from \"react-router\";\nimport logo from \"./images/logo.png\"\nconst Navigation = () => {\n  const user = getUser();\n  const admin = isAdmin();\n\n  const language = getLanguage();\n  let x = language === \"sk\" ? wording.sk : wording.en; // TODO languages !!!\n  x = x.navigation;\n\n  const LoginNav = () => (\n    <>\n      <NavLink href=\"/records-to-sign\">{x.recordsToSign}</NavLink>\n      <NavLink href=\"/signed-records\">{x.signedRecords}</NavLink>\n      {admin && (\n        <>\n          <NavLink href=\"/add-record\">{x.addRecord}</NavLink>\n          <NavLink href=\"/saved-record\">{x.savedRecords}</NavLink>\n          <NavLink href=\"/finder\">{x.finder}</NavLink>\n          <NavLink href=\"/settings\">{x.settings}</NavLink>\n        </>\n      )}\n      <NavLink href=\"/logout\">{x.logout}</NavLink>\n    </>\n  );\n\n  const LogoutNav = () => <NavLink href=\"/login\">{x.login}</NavLink>;\n\n  const Name = () => {\n    const name = user ? `${user.first_name} ${user.last_name}` : \"\";\n    return <span style={{ color: \"white\" }}>{name}</span>;\n  };\n\n  return (\n    <Navbar\n      expand=\"md\"\n      bg=\"dark\"\n      variant=\"dark\"\n      sticky=\"top\"\n      className=\"navigation\"\n    >\n      <Navbar.Brand href=\"/\">\n        <img\n          alt=\"logo\"\n          src={logo}\n          width=\"50\"\n          height=\"50\"\n          className=\"d-inline-block align-top\"\n        />\n      </Navbar.Brand>\n      <Name />\n      <Navbar.Toggle />\n      <Navbar.Collapse id=\"responsive-navbar-nav\">\n        <Nav\n          className=\"ml-auto\"\n          variant=\"pills\"\n          activeKey={useLocation().pathname}\n        >\n          {user ? <LoginNav /> : <LogoutNav />}\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  );\n};\n\nexport default Navigation;\n","class IdleTimer {\n\n  constructor({ timeout, onTimeout }) {\n    this.timeout = timeout;\n    this.onTimeout = onTimeout;\n\n    this.eventHandler = this.updateExpiredTime.bind(this);\n    this.tracker();\n    this.startInterval();\n  }\n\n  startInterval() {\n    this.updateExpiredTime();\n\n    this.interval = setInterval(() => {\n      const expiredTime = parseInt(localStorage.getItem(\"_expiredTime\"), 10);\n      if (expiredTime < Date.now()) {\n        if (this.onTimeout) {\n          this.onTimeout();\n          this.cleanUp();\n        }\n      }\n    }, 1000);\n  }\n\n  updateExpiredTime() {\n    if (this.timeoutTracker) {\n      clearTimeout(this.timeoutTracker);\n    }\n    this.timeoutTracker = setTimeout(() => {\n      localStorage.setItem(\"_expiredTime\", Date.now() + this.timeout * 1000);\n    }, 300);\n  }\n\n  tracker() {\n    window.addEventListener(\"mousemove\", this.eventHandler);\n    window.addEventListener(\"scroll\", this.eventHandler);\n    window.addEventListener(\"keydown\", this.eventHandler);\n  }\n\n  cleanUp() {\n    localStorage.removeItem(\"_expiredTime\");\n    clearInterval(this.interval);\n    window.removeEventListener(\"mousemove\", this.eventHandler);\n    window.removeEventListener(\"scroll\", this.eventHandler);\n    window.removeEventListener(\"keydown\", this.eventHandler);\n  }\n}\nexport default IdleTimer;\n","import React, { createContext, useEffect, useState } from \"react\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport Routes from \"./Routes\";\n\nimport Navigation from \"./Navigation.jsx\";\nimport { getUser, removeUser, getFetch, redirectTo } from \"./utils/functions\";\nimport IdleTimer from \"./utils/IdleTimer\";\n\nimport { comboFields, TIMEOUT } from \"./utils/data\";\n\nexport const PairContext = createContext(undefined);\n\nfunction App() {\n  const [pairs, setPairs] = useState({\n    branches: [],\n    divisions: [],\n    cities: [],\n    departments: [],\n  });\n\n  /** Load all branches, divisions etc. to easily find names for their ids */\n  useEffect(() => {\n    const _pairs = {};\n    comboFields.forEach((field) => {\n      getFetch(`/${field}`).then((data) => (_pairs[field] = data));\n    });\n    setPairs(_pairs);\n  }, []);\n\n  /** Set timer to logout not active user after TIMEOUT expired\n   *  onTimeOut the user will be logout and redirect to /login\n   *  - TIMEOUT can be changed in ./utils/data */\n  useEffect(() => {\n    const timer = new IdleTimer({\n      timeout: TIMEOUT,\n      onTimeout: () => {\n        if (getUser()) {\n          removeUser();\n          redirectTo(\"/login\");\n        }\n      },\n    });\n    return () => timer.cleanUp();\n  }, []);\n\n  return (\n    <BrowserRouter>\n      <Navigation />\n      <PairContext.Provider value={pairs}>\n        <Routes />\n      </PairContext.Provider>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './main.css';\n\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}