{"version":3,"sources":["utils/data.js","utils/functions.js","components/Tables/MyBootstrapTable.jsx","utils/Formatter.jsx","components/Buttons/TableBtns.jsx","components/FetchComponents.jsx","utils/useDataApi.js","components/Modals/ConfirmModal.jsx","unsigned-records/RecordsToSignPage.jsx","unsigned-records/columns.js","components/CustomAlert.jsx","utils/wording.js","login/LoginForm.jsx","login/secret.jsx","login/LoginPage.jsx","login/LogoutPage.jsx","signed-records/SignedRecordsPage.jsx","signed-records/columns.js","components/Forms/MyFormGroup.jsx","components/Forms/CombinationForm.jsx","components/Modals/CombinationModal.jsx","components/Tables/Combinations.jsx","components/Forms/DocumentForm.jsx","components/Forms/TrainingForm.jsx","add-record/AddRecordPage.jsx","components/Buttons/EditBtn.jsx","saved-records/columns.js","components/Modals/EditRecordModal.jsx","saved-records/SavedRecordsPage.jsx","settings/SettingsPage.jsx","finder/FilterDocuments.jsx","finder/skill-matrix/ToggleBtn.jsx","finder/skill-matrix/SkillMatrixComponents.jsx","finder/skill-matrix/SkillMatrix.jsx","finder/report/ReportBtn.jsx","finder/report/ReportDocumentModal.jsx","finder/FoundDocuments.jsx","finder/report/ReportTrainingModal.jsx","finder/FoundTrainings.jsx","finder/FilterTrainings.jsx","finder/FinderPage.jsx","Page404.jsx","Routes.jsx","images/logo.png","Navigation.jsx","utils/IdleTimer.js","App.js","index.js"],"names":["proxy_url","comboFields","comboFieldsSingular","types","getTimestamp","today","Date","timestamp","getDate","getMonth","getFullYear","getHours","getMinutes","console","log","buttonColumn","field","text","dataField","sort","headerStyle","width","recordType","record","Object","keys","includes","requireSuperior","rec","require_superior","isSuperior","doc","signatures","length","superior_id","getUser","id","nonExpandableDocs","documents","map","orderBy","order","goodMsg","body","variant","badMsg","successResponse","response","status","getSelectOptions","hidden","value","uuid","getOptionsForSelect","pairs","branches","n","label","name","divisions","departments","cities","resolveFilter","f","branch","v","join","city","department","division","getState","sign","cancel","state","e_date","Valid","s_date","getAssignedTo","document","employees","assigned_to","split","e","combs","remEms","values","combination","forEach","i","push","getFieldName","removedEmployees","getEmployeeName","find","toString","getEmployeeLabel","getDateObject","date","Time","getDateString","substr","resolveCombinations","combinations","c_string","c","r_string","sortEmployeesByName","a","b","last_name","employee","first_name","department_id","dep","d","prepareFoundDocs","found","getLabels","cs","labels","unique","Set","flat","undefined","doc_cs","getFetch","url","fetch","method","then","result","json","postFetch","isAdmin","role","JSON","parse","sessionStorage","getItem","removeUser","removeItem","MyBootstrapTable","title","data","columns","expandRow","classes","rest","TableHeader","style","borderRadius","textAlign","border","margin","padding","marginTop","keyField","hover","noDataIndication","defaultSorted","FullName","_","format_date","reverse","FormattedDate","row","FormattedDeadline","deadline","FormattedRelease","release_date","FormattedSuperiorDate","FormattedTrainingDate","FormattedEmployeeDate","Percentage","Math","round","complete","NameWithLink","link","href","target","rel","DocumentLabel","ExclamationName","color","marginBottom","expired","now","MissedBtn","cell","index","setModalInfo","setShowModal","asSuperior","Button","onClick","size","className","SignedBtn","FetchLoading","Spinner","animation","FetchError","useDataApi","useState","setData","error","setError","isLoaded","setIsLoaded","useEffect","res","ConfirmModal","showModal","modalInfo","handleAccept","closeModal","bodyText","Modal","show","onHide","centered","Header","closeButton","Title","Body","Footer","RecordsToSignPage","URL","trainings","setTrainings","setDocuments","message","fetchSign","URLSearchParams","signAsEmployee","signature_id","me","record_type","updateTrainings","updateSuperiorDocs","updateEmployeeDocs","signAsSuperior","filter","t","update","s","trn_columns","formatter","formatExtraData","trainingsToSignColumns","doc_columns","documentsToSignColumns","expandColumns","documentsToSignExpandColumns","onlyOneExpanding","nonExpandable","renderer","CustomAlert","notification","Alert","wording","sk","loginPage","header","login","password","submit","wrongLogin","wrongCard","navigation","recordsToSign","signedRecords","addRecord","savedRecords","finder","settings","logout","en","LoginForm","onSubmit","language","setLanguage","useForm","register","handleSubmit","active","Container","Form","align","ButtonGroup","disabled","Group","Label","Control","ref","required","type","CryptoJS","require","LoginPage","setNotification","cardInput","cardInputTimeout","setTimeout","checkInput","findByCard","clearTimeout","event","engInput","String","fromCharCode","keyCode","toLowerCase","isLetter","isNumber","isValuable","addEventListener","removeEventListener","setUser","user","setItem","stringify","window","location","reload","input","catch","to","pass","inputText","howMany","charCodeAt","HmacSHA256","repeat","enc","Base64","encodeURIComponent","changeString","LogoutPage","SignedRecordsPage","documentsColumns","trainingsColumns","MyFormGroup","placeholder","as","Row","column","sm","Col","CombinationForm","prefill","setCombination","useContext","PairContext","options","handleSelect","selector","opt","isMulti","defaultValue","isDisabled","onChange","CombinationModal","setAssignedTo","setEmptyAssign","setDisabled","setEmployees","preview","assignedTo","resolveEmployees","prev","prevState","Combinations","setPrefill","openModal","AddIcon","OverlayTrigger","placement","overlay","Tooltip","editCombination","deleteCombination","wrapperClasses","rowClasses","DocumentForm","setRecords","formData","actual","setFormData","submitData","setSubmitData","defaultValues","action","setAction","selectedType","setSelectedType","sent","setSent","currentID","setCurrentID","setCombinations","emptyAssign","prepareCombinations","executeSubmit","correctDocumentFormData","upsert","updateSavedRec","r","upsertConfirm","filterSavedRec","p","findIndex","validate","Check","inline","valueAsNumber","TrainingForm","attendees","setAttendees","emptyAttendees","setEmptyAttendees","getEmployeesNames","correctTrainingFormData","labelKey","multiple","selected","AddRecordPage","formType","setFormType","EditBtn","SendBtn","setRow","EditRecordModal","props","SavedRecordsPage","doc_data","trn_data","isLoaded2","error2","savedTrainingsColumns","savedDocumentsColumns","SettingsPage","cardsFile","setCardsFile","employeesFile","setEmployeesFile","notification2","setNotification2","clearErrors","crossOrigin","files","FormData","append","Error","IsWarning","Msg","initCombination","initPerson","lector","marginLeft","activeBtn","backgroundColor","passiveBtn","FilterDocuments","showSM","setShowSM","setSMData","getAllRecords","person","setPerson","optionsStructure","searchType","setSearchType","searched","setSearched","handleSearch","toggle","searchForMatrix","searchForTable","tableByPerson","tableByCombination","matrixByPerson","matrixByCombination","getBtnStyle","colors","selectorStructure","isClearable","selectStructure","selectPerson","ToggleBtn","rowIndex","mark","unMarkState","styledBtn","getColor","borderColor","borderWidth","stt","new_employees","copy","l","getLabel","RowButtons","showLegend","setShowLegend","handleClick","Legend","Badge","textColor","background","height","fontSize","fontWeight","Card","Subtitle","Text","SkillMatrix","SMData","sample","sortedEmployees","j","emp","signature","employee_id","sign_id","counter","job_title","getColumns","changedState","replace","resetSign","updateState","handleExport","ReportBtn","setReport","ReportDocumentModal","reports","setReports","activeReport","setActiveReport","reqSuperior","setReqSuperior","preData","setPreData","componentRef","useRef","handlePrint","useReactToPrint","content","current","rep","prepareReport","sorted","superiors","ids","res2","emps","ReportLink","version","marginRight","position","right","display","src","left","headerClasses","bottom","FoundDocuments","setFound","report","ReportTrainingModal","place","agency","FoundTrainings","FilterTrainings","lectors","setLectors","persons","setPersons","selectorPerson","FinderPage","prepareEmployees","Page404","pathname","useLocation","Routes","admin","Private","Component","component","exact","path","render","Navigation","x","LoginNav","NavLink","LogoutNav","Name","Navbar","expand","bg","sticky","Brand","alt","logo","Toggle","Collapse","Nav","activeKey","IdleTimer","timeout","onTimeout","this","eventHandler","updateExpiredTime","bind","tracker","startInterval","interval","setInterval","parseInt","localStorage","cleanUp","timeoutTracker","clearInterval","createContext","App","setPairs","_pairs","timer","Provider","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.67dd457c.chunk.js","sourcesContent":["export const proxy_url = \"http://5.178.48.91:8180\";\r\n// export const proxy_url = \"http://localhost:8180\";\r\nexport const TIMEOUT = 60 * 100; // 100 minutes\r\n\r\nexport const comboFields = [\"branches\", \"cities\", \"departments\", \"divisions\"];\r\nexport const comboFieldsSingular = [\"branch\", \"city\", \"department\", \"division\"];\r\n\r\nexport const types = [\"TPK\", \"OS\", \"PP\", \"PL\"];\r\n","import React from \"react\";\r\nimport uuid from \"react-uuid\";\r\nimport { comboFields, comboFieldsSingular } from \"./data\";\r\nimport { proxy_url } from \"./data\";\r\n\r\nexport const getTimestamp = () => {\r\n  const today = new Date();\r\n  const date =\r\n    today.getDate() + \"-\" + (today.getMonth() + 1) + \"-\" + today.getFullYear();\r\n  const time = today.getHours() + \":\" + today.getMinutes();\r\n  const timestamp = date + \" \" + time;\r\n  console.log(\"timestamp\", timestamp);\r\n  return timestamp;\r\n};\r\n\r\n// Tables\r\nexport const buttonColumn = (field = \"\", text = \"\") => {\r\n  return {\r\n    dataField: \"\" + field,\r\n    text: text,\r\n    sort: true,\r\n    headerStyle: { width: \"1%\" },\r\n  };\r\n};\r\n\r\nexport const recordType = (record) => {\r\n  return Object.keys(record).includes(\"link\") ||\r\n    Object.keys(record).includes(\"document_id\")\r\n    ? \"document\"\r\n    : \"training\";\r\n};\r\n\r\nexport const requireSuperior = (rec) => rec.require_superior;\r\n\r\nexport const isSuperior = (doc) => {\r\n  if (doc.signatures.length > 1)\r\n    return (\r\n      doc.signatures[0].superior_id === getUser().id ||\r\n      doc.signatures[1].superior_id === getUser().id\r\n    );\r\n  return doc.signatures[0].superior_id === getUser().id;\r\n};\r\n\r\nexport const nonExpandableDocs = (documents) => {\r\n  return documents.map((doc) => {\r\n    if (!(requireSuperior(doc) && isSuperior(doc))) return doc.id;\r\n  });\r\n};\r\n\r\nexport const orderBy = (field, order = \"asc\") => {\r\n  return [{ dataField: field, order: order }];\r\n};\r\n\r\n// Helpers\r\nexport const goodMsg = (body) => {\r\n  return { variant: \"success\", body: body };\r\n};\r\n\r\nexport const warningMsg = (body) => {\r\n  return { variant: \"warning\", body: body };\r\n};\r\n\r\nexport const badMsg = (body) => {\r\n  return { variant: \"danger\", body: body };\r\n};\r\n\r\nexport const successResponse = (response) => {\r\n  return 200 <= response.status && response.status <= 299;\r\n};\r\n\r\nexport const getLanguage = () => JSON.parse(sessionStorage.getItem(\"language\"));\r\nexport const delay = (ms) => new Promise((res) => setTimeout(res, ms));\r\n\r\nexport const getSelectOptions = (field) => {\r\n  return (\r\n    <>\r\n      <option hidden value=\"\">\r\n        Select option ...\r\n      </option>\r\n      {field.map((value) => (\r\n        <option value={value} key={uuid()}>\r\n          {value}\r\n        </option>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport const setOf = (array) => {\r\n  const set = [];\r\n  array.forEach((arr) => {\r\n    if (!set.find((res) => res.value === arr.value)) set.push(arr);\r\n  });\r\n  return set; // array of unique objects by their .value\r\n};\r\n\r\nexport const prepareCombinations = (combinations) => {\r\n  return combinations.map((c) => {\r\n    const combination = {};\r\n    comboFieldsSingular.forEach((field) => {\r\n      combination[field] = {\r\n        value: c[`${field}_id`],\r\n        label: c[`${field}_name`],\r\n      };\r\n    });\r\n    return combination;\r\n  });\r\n};\r\n\r\nexport const getOptionsForSelect = (pairs) => {\r\n  return {\r\n    branches: pairs.branches?.map((n) => {\r\n      return { value: n.id, label: n.name };\r\n    }),\r\n    divisions: pairs.divisions?.map((n) => {\r\n      return { value: n.id, label: n.name };\r\n    }),\r\n    departments: pairs.departments?.map((n) => {\r\n      return { value: n.id, label: n.name };\r\n    }),\r\n    cities: pairs.cities?.map((n) => {\r\n      return { value: n.id, label: n.name };\r\n    }),\r\n  };\r\n};\r\n\r\nexport const resolveFilter = (f) => {\r\n  return {\r\n    branch: f.branches.map((v) => v.value).join(\",\"),\r\n    city: f.cities.map((v) => v.value).join(\",\"),\r\n    department: f.departments.map((v) => v.value).join(\",\"),\r\n    division: f.divisions.map((v) => v.value).join(\",\"),\r\n  };\r\n};\r\n\r\nfunction getState(sign, require_superior) {\r\n  if (!sign.id) return \"_\";\r\n  if (sign.cancel) return \"-\";\r\n  let state = sign.e_date.Valid ? \"\" : \"e\";\r\n  if (require_superior && !sign.s_date.Valid) {\r\n    state += \"s\";\r\n  }\r\n  return state;\r\n}\r\n\r\nexport const prepareSMData = (docs) => {\r\n  return docs.map((doc) => {\r\n    return {\r\n      id: doc.id,\r\n      name: doc.name,\r\n      require_superior: doc.require_superior,\r\n      deadline: doc.deadline.Time,\r\n      employees: doc.signatures.map((sign) => {\r\n        return {\r\n          id: sign.employee.id,\r\n          sign_id: sign?.id,\r\n          state: getState(sign, doc.require_superior),\r\n        };\r\n      }),\r\n      link: doc.link,\r\n    };\r\n  });\r\n};\r\n\r\nexport const getAssignedTo = (document, pairs, employees) => {\r\n  if (!document) return [];\r\n\r\n  return document.assigned_to.split(\"&\").map((e) => {\r\n    const [combs, remEms, _] = e.split(\"#\");\r\n    const values = combs.split(\"; \");\r\n    const combination = { id: uuid() };\r\n\r\n    comboFields.forEach((field, i) => {\r\n      combination[field] = [];\r\n      if (values[i] !== \"x\") {\r\n        const ids = values[i].split(\",\");\r\n        ids.forEach((id) => {\r\n          combination[field].push({\r\n            value: id,\r\n            label: getFieldName(field, id, pairs),\r\n          });\r\n        });\r\n      }\r\n    });\r\n    combination.removedEmployees = [];\r\n    if (!remEms) return combination;\r\n\r\n    const e_ids = remEms.split(\",\");\r\n    e_ids.forEach((id) => {\r\n      combination.removedEmployees.push({\r\n        value: id,\r\n        label: getEmployeeName(id, employees, pairs.departments),\r\n      });\r\n    });\r\n    return combination;\r\n  });\r\n};\r\n\r\nexport const getFieldName = (field, id, pairs) => {\r\n  if (!pairs) return \"unknown\";\r\n  return pairs[field]?.find((f) => f.id == id)?.name || \"unknown\";\r\n};\r\n\r\nexport const getEmployeeName = (id, employees, departments) => {\r\n  if (!employees) return \"unknown\";\r\n\r\n  const e = employees.find((e) => e.id.toString() === id);\r\n  if (!e) return \"unknown\";\r\n\r\n  return getEmployeeLabel(e, departments);\r\n};\r\n\r\nexport const getEmployeesNames = (formData, employees) => {\r\n  employees = sortEmployeesByName(employees);\r\n  if (!formData || !formData.employees) return [];\r\n\r\n  return formData.employees\r\n    .split(\",\")\r\n    .map((a) => employees.find((e) => e.id == a));\r\n};\r\n\r\nexport const prefillDocumentForm = (data) => {\r\n  if (!data) return {};\r\n\r\n  return {\r\n    ...data,\r\n    release_date: getDateString(data.release_date),\r\n    deadline: getDateString(data.deadline),\r\n  };\r\n};\r\n\r\nexport const prefillTrainingForm = (data) => {\r\n  if (!data) return {};\r\n\r\n  return {\r\n    ...data,\r\n    date: getDateString(data.date),\r\n    deadline: getDateString(data.deadline),\r\n  };\r\n};\r\n\r\nexport const correctTrainingFormData = (data, attendees) => {\r\n  return {\r\n    ...data,\r\n    date: getDateObject(data.date),\r\n    deadline: getDateObject(data.deadline),\r\n    employees: attendees.map((a) => a.id).join(\",\"),\r\n  };\r\n};\r\n\r\nexport const correctDocumentFormData = (data, combinations) => {\r\n  return {\r\n    ...data,\r\n    release_date: getDateObject(data.release_date),\r\n    deadline: getDateObject(data.deadline),\r\n    assigned_to: resolveCombinations(combinations),\r\n  };\r\n};\r\n\r\nconst getDateObject = (date) => {\r\n  return {\r\n    Time: date + \"T00:00:00Z\",\r\n    Valid: true,\r\n  };\r\n};\r\n\r\nconst getDateString = (date) => date.Time.substr(0, 10);\r\n\r\nexport const resolveCombinations = (combinations) => {\r\n  const n = combinations.map((combination) => {\r\n    let c_string = comboFields\r\n      .map((field) => {\r\n        const values = combination[field];\r\n        console.log(\"values\", values);\r\n        if (!values.length) return \"x\";\r\n        return values.map((c) => c.value).join(\",\");\r\n      })\r\n      .join(\"; \");\r\n    const r_string = combination.removedEmployees.map((c) => c.value).join(\",\");\r\n    return `${c_string}#${r_string}#`;\r\n  });\r\n  console.log(n);\r\n  return n.join(\"&\");\r\n};\r\n\r\nexport const sortEmployeesByName = (employees) => {\r\n  return employees.sort(function (a, b) {\r\n    if (a.last_name < b.last_name) {\r\n      return -1;\r\n    }\r\n    if (a.last_name > b.last_name) {\r\n      return 1;\r\n    }\r\n    return 0;\r\n  });\r\n};\r\n\r\nexport const prepareEmployees = (employees, departments) => {\r\n  if (!departments) return [];\r\n\r\n  return sortEmployeesByName(employees).map((e) => {\r\n    return {\r\n      value: e.id,\r\n      label: getEmployeeLabel(e, departments),\r\n    };\r\n  });\r\n};\r\n\r\nexport const getEmployeeLabel = (employee, departments) => {\r\n  const { id, first_name, last_name, department_id } = employee;\r\n  const dep = departments.find((d) => d.id === department_id)?.name;\r\n  return `${first_name} ${last_name} [${id}, ${dep}]`;\r\n};\r\n\r\nexport const prepareFoundDocs = (found, pairs) => {\r\n  if (!found.length) return [];\r\n\r\n  function getLabels(cs, field) {\r\n    const labels = cs.map((c) => c[field].map((f) => f.label));\r\n    const unique = [...new Set(labels.flat())];\r\n    if (unique[0] === undefined) {\r\n      return \"*\";\r\n    }\r\n    return unique.join(\", \");\r\n  }\r\n\r\n  return found.map((doc) => {\r\n    const doc_cs = getAssignedTo(doc, pairs);\r\n    return {\r\n      ...doc,\r\n      branches: getLabels(doc_cs, \"branches\"),\r\n      cities: getLabels(doc_cs, \"cities\"),\r\n      divisions: getLabels(doc_cs, \"divisions\"),\r\n      departments: getLabels(doc_cs, \"departments\"),\r\n    };\r\n  });\r\n};\r\n\r\n// FETCHERS\r\nexport const getFetch = (url) => {\r\n  return fetch(proxy_url + url, {\r\n    method: \"GET\",\r\n  }).then((result) => result.json());\r\n};\r\n\r\nexport const postFetch = (url, body) => {\r\n  console.log(\"body\", body);\r\n  return fetch(proxy_url + url, {\r\n    method: \"POST\",\r\n    body: body,\r\n  }).then((result) => result.json());\r\n};\r\n\r\n// BROWSER\r\nexport const reloadPage = () => window.location.reload(false);\r\nexport const redirectTo = (path) => window.location.replace(path);\r\nexport const isAdmin = () => getUser() !== null && getUser().role === \"admin\";\r\nexport const getUser = () => JSON.parse(sessionStorage.getItem(\"user\"));\r\nexport const removeUser = () => sessionStorage.removeItem(\"user\");\r\nexport const setUser = (user) =>\r\n  sessionStorage.setItem(\"user\", JSON.stringify(user));\r\n","import BootstrapTable from \"react-bootstrap-table-next\";\r\nimport React from \"react\";\r\n\r\nconst MyBootstrapTable = ({\r\n  title,\r\n  data,\r\n  columns,\r\n  order,\r\n  expandRow,\r\n  classes,\r\n  ...rest\r\n}) => {\r\n  const TableHeader = () => {\r\n    if (!title) return null;\r\n    return (\r\n      <h5\r\n        style={{\r\n          borderRadius: \"0.25em\",\r\n          textAlign: \"center\",\r\n          border: \"2px solid gray\",\r\n          margin: \"2% 0\",\r\n          padding: \"0.5em\",\r\n          marginTop: \"1.5%\",\r\n        }}\r\n      >\r\n        {title}\r\n      </h5>\r\n    );\r\n  };\r\n\r\n  const EmptyTable = () => <i>Table is empty</i>;\r\n\r\n  return (\r\n    <>\r\n      <TableHeader />\r\n      <BootstrapTable\r\n        keyField=\"id\"\r\n        hover\r\n        classes={classes}\r\n        data={data}\r\n        columns={columns}\r\n        noDataIndication={EmptyTable}\r\n        defaultSorted={order}\r\n        expandRow={expandRow}\r\n        {...rest}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MyBootstrapTable;\r\n","import React from \"react\";\r\nimport { ExclamationTriangle } from \"react-bootstrap-icons\";\r\n\r\n/** Couple of simple formatting functions to displays some cells of table  */\r\nexport const FullName = (_, { employee }) => {\r\n  if (!employee) return <>ME</>;\r\n\r\n  return (\r\n    <>\r\n      {employee.first_name} {employee.last_name}\r\n    </>\r\n  );\r\n};\r\n\r\nexport const format_date = (date) => {\r\n  if (!date) return \"-\";\r\n  const { Time, Valid } = date;\r\n  if (!Valid) return \"-\";\r\n  return Time.substr(0, 10).split(\"-\").reverse().join(\".\");\r\n};\r\n\r\nexport const FormattedDate = (_, row) => {\r\n  return <>{format_date(row.date)}</>;\r\n};\r\n\r\nexport const FormattedDeadline = (_, row) => {\r\n  return <>{format_date(row.deadline)}</>;\r\n};\r\n\r\nexport const FormattedRelease = (_, row) => {\r\n  return <>{format_date(row.release_date)}</>;\r\n};\r\n\r\nexport const FormattedSuperiorDate = (_, row) => {\r\n  return <>{format_date(row.s_date)}</>;\r\n};\r\n\r\nexport const FormattedTrainingDate = (_, row) => {\r\n  return <>{format_date(row.signatures[0].date)}</>;\r\n};\r\n\r\nexport const FormattedEmployeeDate = (_, row) => {\r\n  return <>{format_date(row.e_date)}</>;\r\n};\r\n\r\nexport const Percentage = (_, row) =>\r\n  Math.round(row.complete * 100) / 100 + \"%\";\r\n\r\nexport const NameWithLink = (_, row) => {\r\n  let link = row.link;\r\n  if (link && link.substr(0, 3) === \"www\") {\r\n    link = \"https://\" + link;\r\n  }\r\n  return (\r\n    <a href={link} target=\"_blank\" rel=\"noreferrer\">\r\n      {row.name}\r\n    </a>\r\n  );\r\n};\r\n\r\nexport const DocumentLabel = (_, row) => {\r\n  const ExclamationName = () => (\r\n    <h5>\r\n      <ExclamationTriangle style={{ color: \"red\", marginBottom: \"6px\" }} />{\" \"}\r\n      {NameWithLink(_, row)}\r\n    </h5>\r\n  );\r\n\r\n  const expired =\r\n    row.deadline < Date.now() &&\r\n    row.employees.find((e) => e.state.includes(\"e\") || e.state.includes(\"s\"));\r\n\r\n  return <>{expired ? <ExclamationName /> : NameWithLink(_, row)}</>;\r\n};\r\n\r\nexport const FormattedEmployee = (_, row) => {\r\n  // const employee = employees[row-1]\r\n  const employee = {};\r\n  const percentage = 100; // TODO implement\r\n  return (\r\n    <div style={{ fontSize: \"12px\" }}>\r\n      {employee.name}, {employee.job}, {percentage}%\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { isSuperior, requireSuperior } from \"../../utils/functions\";\r\nimport { FormattedEmployeeDate } from \"../../utils/Formatter\";\r\n\r\nexport const MissedBtn = (\r\n  cell,\r\n  row,\r\n  index,\r\n  { setModalInfo, setShowModal, asSuperior }\r\n) => {\r\n  const handleClick = () => {\r\n    if (requireSuperior(row) && isSuperior(row)) {\r\n      return;\r\n    }\r\n    setShowModal(true);\r\n    setModalInfo({\r\n      ...row,\r\n      asSuperior: asSuperior,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Button onClick={handleClick} size=\"sm\" className=\"btn-block\">\r\n      {requireSuperior(row) && isSuperior(row) ? \"Details\" : \"Sign\"}\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport const SignedBtn = (cell, row) => {\r\n  return requireSuperior(row) && isSuperior(row) ? (\r\n    <Button size=\"sm\">Details</Button>\r\n  ) : (\r\n    FormattedEmployeeDate(cell, row.signatures[0])\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\n\r\nexport const FetchLoading = () => <Spinner animation=\"border\" className=\"m-5\"/>\r\nexport const FetchError = ({e}) => <h6 className=\"p-5\">{e}</h6>","import React, { useEffect, useState } from \"react\";\r\nimport { proxy_url } from \"./data\";\r\n\r\n/** Universal fetch with GET method and error and loading state */\r\nconst useDataApi = (url) => {\r\n  const [data, setData] = useState();\r\n  const [error, setError] = useState();\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n\r\n  useEffect(() => {\r\n    console.log(\"url\", url);\r\n    fetch(proxy_url +url, {\r\n      method: \"GET\",\r\n    })\r\n      .then((response) => response.json())\r\n      .then(\r\n        (res) => {\r\n          setIsLoaded(true);\r\n          setData(res);\r\n        },\r\n        (error) => {\r\n          setIsLoaded(true);\r\n          setError(error);\r\n        }\r\n      );\r\n  }, []); // Runs once\r\n\r\n  return [data, isLoaded, error];\r\n};\r\n\r\nexport default useDataApi;\r\n","import React from \"react\";\r\nimport { Button, Modal } from \"react-bootstrap\";\r\n\r\nconst ConfirmModal = ({ showModal, setShowModal, modalInfo, handleAccept }) => {\r\n  console.log(modalInfo);\r\n  const closeModal = () => setShowModal(false);\r\n\r\n  const onAccept = () => {\r\n    handleAccept();\r\n    closeModal();\r\n  };\r\n\r\n  let bodyText = \"\";\r\n  if (modalInfo.body) {\r\n    bodyText = modalInfo.body;\r\n  } else if (modalInfo.asSuperior) {\r\n    const employeeName = () => {\r\n      if (modalInfo.employee === null) {\r\n        return \"ME\";\r\n      }\r\n      return `${modalInfo.employee.first_name} ${modalInfo.employee.last_name}`;\r\n    };\r\n    bodyText = `Do you really want do sign for ${employeeName()}`;\r\n  } else {\r\n    bodyText = `Do you really want do sign the document named ${modalInfo.name}`;\r\n  }\r\n\r\n  return (\r\n    <Modal show={showModal} onHide={closeModal} centered>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Confirm</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <p>{bodyText}</p>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"danger\" onClick={onAccept}>\r\n          Accept\r\n        </Button>\r\n        <Button variant=\"secondary\" onClick={closeModal}>\r\n          Close\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ConfirmModal;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport MyBootstrapTable from \"../components/Tables/MyBootstrapTable\";\r\nimport {\r\n  documentsToSignColumns,\r\n  documentsToSignExpandColumns,\r\n  trainingsToSignColumns,\r\n} from \"./columns\";\r\nimport {\r\n  getUser,\r\n  nonExpandableDocs,\r\n  orderBy,\r\n  recordType,\r\n  successResponse,\r\n} from \"../utils/functions\";\r\nimport { FetchError, FetchLoading } from \"../components/FetchComponents\";\r\nimport useDataApi from \"../utils/useDataApi\";\r\nimport ConfirmModal from \"../components/Modals/ConfirmModal\";\r\nimport { proxy_url } from \"../utils/data\";\r\n\r\nconst RecordsToSignPage = () => {\r\n  const URL = `/unsigned/signatures/${getUser().id}`;\r\n  const [data, isLoaded, error] = useDataApi(URL);\r\n\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [modalInfo, setModalInfo] = useState([]);\r\n\r\n  const [trainings, setTrainings] = useState([]);\r\n  const [documents, setDocuments] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setDocuments(data.documents);\r\n      setTrainings(data.trainings);\r\n    }\r\n  }, [data]);\r\n\r\n  if (error) {\r\n    return <FetchError e={`Error: ${error.message}`} />;\r\n  } else if (!isLoaded || !data) {\r\n    return <FetchLoading />;\r\n  }\r\n\r\n  const handleAccept = () => {\r\n    if (modalInfo.asSuperior) {\r\n      if (modalInfo.employee === null) {\r\n        signAsEmployee(modalInfo.id, \"me\");\r\n      } else {\r\n        signAsSuperior(modalInfo.id);\r\n      }\r\n    } else {\r\n      signAsEmployee(modalInfo.signatures[0].id);\r\n    }\r\n    setShowModal(false);\r\n  };\r\n\r\n  /** Update sign date to Date.now()\r\n   * @param url:\r\n   *    '/sign' update employee date\r\n   *    '/sign/superior' update superior date\r\n   * @param id: id of the document_signature\r\n   * */\r\n  const fetchSign = (url, id) => {\r\n    return fetch(proxy_url + url, {\r\n      method: \"POST\",\r\n      body: new URLSearchParams(`id=${id}`),\r\n    });\r\n  };\r\n\r\n  const signAsEmployee = (signature_id, me) => {\r\n    const record_type = recordType(modalInfo);\r\n    fetchSign(`/sign/${record_type}`, signature_id).then((res) => {\r\n      if (successResponse(res)) {\r\n        if (record_type === \"training\") {\r\n          updateTrainings(signature_id);\r\n        } else {\r\n          if (me) {\r\n            updateSuperiorDocs(signature_id);\r\n          } else {\r\n            updateEmployeeDocs(signature_id);\r\n          }\r\n        }\r\n      } else {\r\n        console.log(\"error\", res);\r\n      }\r\n    });\r\n  };\r\n\r\n  const signAsSuperior = (signature_id) => {\r\n    fetchSign(\"/sign/superior\", signature_id).then((res) => {\r\n      if (successResponse(res)) {\r\n        updateSuperiorDocs(signature_id);\r\n      }\r\n    });\r\n  };\r\n\r\n  const updateTrainings = (signature_id) => {\r\n    setTrainings(trainings.filter((t) => t.signatures[0].id !== signature_id));\r\n  };\r\n\r\n  const updateEmployeeDocs = (signature_id) => {\r\n    setDocuments(documents.filter((d) => d.signatures[0].id !== signature_id));\r\n  };\r\n\r\n  const updateSuperiorDocs = (signature_id) => {\r\n    const update = documents.map((d) => {\r\n      return {\r\n        ...d,\r\n        signatures: d.signatures.filter((s) => s.id !== signature_id),\r\n      };\r\n    });\r\n    setDocuments(update.filter((d) => d.signatures.length));\r\n  };\r\n\r\n  const trn_columns = trainingsToSignColumns(setModalInfo, setShowModal);\r\n  const doc_columns = documentsToSignColumns(setModalInfo, setShowModal);\r\n  const expandColumns = documentsToSignExpandColumns(\r\n    setModalInfo,\r\n    setShowModal\r\n  );\r\n\r\n  const expandRow = {\r\n    onlyOneExpanding: true,\r\n    nonExpandable: nonExpandableDocs(documents),\r\n    renderer: (cell) => (\r\n      <MyBootstrapTable\r\n        classes=\"inner-table\"\r\n        data={cell.signatures}\r\n        columns={expandColumns}\r\n        order={orderBy(\"employee.last_name\")}\r\n      />\r\n    ),\r\n  };\r\n\r\n  console.log(data);\r\n\r\n  return (\r\n    <>\r\n      {/* DOCUMENTS */}\r\n      <MyBootstrapTable\r\n        title=\"Documents to sign\"\r\n        data={documents}\r\n        columns={doc_columns}\r\n        order={orderBy(\"deadline.Time\")}\r\n        expandRow={expandRow}\r\n      />\r\n      {/* TRAININGS */}\r\n      <MyBootstrapTable\r\n        title=\"Trainings to sign\"\r\n        data={trainings}\r\n        columns={trn_columns}\r\n        order={orderBy(\"deadline.Time\")}\r\n      />\r\n      <ConfirmModal\r\n        showModal={showModal}\r\n        setShowModal={setShowModal}\r\n        modalInfo={modalInfo}\r\n        handleAccept={handleAccept}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RecordsToSignPage;\r\n","import {\r\n  FormattedDate,\r\n  FormattedDeadline,\r\n  FormattedEmployeeDate,\r\n  FormattedRelease,\r\n  FullName,\r\n  NameWithLink,\r\n} from \"../utils/Formatter\";\r\nimport { MissedBtn } from \"../components/Buttons/TableBtns\";\r\nimport { buttonColumn } from \"../utils/functions\";\r\n\r\nexport const trainingsToSignColumns = (setModalInfo, setShowModal) => [\r\n  {\r\n    dataField: \"name\",\r\n    text: \"Name\",\r\n    sort: true,\r\n    headerStyle: { width: \"33%\" },\r\n  },\r\n  {\r\n    dataField: \"date.Time\",\r\n    text: \"Date\",\r\n    sort: true,\r\n    formatter: FormattedDate,\r\n    headerStyle: { width: \"33%\" },\r\n  },\r\n  {\r\n    dataField: \"deadline.Time\",\r\n    text: \"Deadline\",\r\n    sort: true,\r\n    formatter: FormattedDeadline,\r\n    headerStyle: { width: \"33%\" },\r\n  },\r\n  {\r\n    ...buttonColumn(),\r\n    formatter: MissedBtn,\r\n    formatExtraData: {\r\n      setModalInfo: setModalInfo,\r\n      setShowModal: setShowModal,\r\n    },\r\n  },\r\n];\r\n\r\nexport const documentsToSignColumns = (setModalInfo, setShowModal) => [\r\n  {\r\n    dataField: \"name\",\r\n    text: \"Name\",\r\n    sort: true,\r\n    formatter: NameWithLink,\r\n    headerStyle: { width: \"33%\" },\r\n  },\r\n  {\r\n    dataField: \"release_date.Time\",\r\n    text: \"Release\",\r\n    sort: true,\r\n    formatter: FormattedRelease,\r\n    headerStyle: { width: \"33%\" },\r\n  },\r\n  {\r\n    dataField: \"deadline.Time\",\r\n    text: \"Deadline\",\r\n    sort: true,\r\n    formatter: FormattedDeadline,\r\n    headerStyle: { width: \"33%\" },\r\n  },\r\n  {\r\n    ...buttonColumn(),\r\n    formatter: MissedBtn,\r\n    formatExtraData: {\r\n      setModalInfo: setModalInfo,\r\n      setShowModal: setShowModal,\r\n      asSuperior: false,\r\n    },\r\n  },\r\n];\r\n\r\nexport const documentsToSignExpandColumns = (setModalInfo, setShowModal) => [\r\n  {\r\n    dataField: \"employee.id\",\r\n    text: \"Employee ID\",\r\n    sort: true,\r\n    headerStyle: { width: \"33%\" },\r\n  },\r\n  {\r\n    dataField: \"employee.last_name\",\r\n    text: \"Full name\",\r\n    sort: true,\r\n    formatter: FullName,\r\n    headerStyle: { width: \"33%\" },\r\n  },\r\n  {\r\n    dataField: \"e_date.Time\",\r\n    text: \"Sign Date\",\r\n    sort: true,\r\n    formatter: FormattedEmployeeDate,\r\n    headerStyle: { width: \"33%\" },\r\n  },\r\n  {\r\n    ...buttonColumn(),\r\n    formatter: MissedBtn,\r\n    formatExtraData: {\r\n      setModalInfo: setModalInfo,\r\n      setShowModal: setShowModal,\r\n      asSuperior: true,\r\n    },\r\n  },\r\n];\r\n","import Alert from \"react-bootstrap/Alert\";\r\n\r\nexport const CustomAlert = ({ notification }) => {\r\n  if (!notification) return null;\r\n  return <Alert variant={notification.variant}>{notification.body}</Alert>;\r\n};\r\n","export const wording = {\r\n  sk: {\r\n    loginPage: {\r\n      header: \"Prihlasovanie\",\r\n      login: \"Login\",\r\n      password: \"Heslo\",\r\n      submit: \"Prihlásiť sa\",\r\n      notification: {\r\n        wrongLogin: \"Zlé prihlasovacie údaje\",\r\n        wrongCard: \"Nepodarilo sa prihlásenie kartou\",\r\n      },\r\n    },\r\n    navigation: {\r\n      login: \"Prihlasit sa\",\r\n      recordsToSign: \"Na podpísanie\",\r\n      signedRecords: \"Podpísané\",\r\n      addRecord: \"Pridať\",\r\n      savedRecords: \"Uložené\",\r\n      finder: \"Vyhľadávanie\",\r\n      settings: \"Nastavenia\",\r\n      logout: \"Odhlásiť sa\",\r\n    },\r\n  },\r\n  en: {\r\n    loginPage: {\r\n      header: \"Login\",\r\n      login: \"Login\",\r\n      password: \"Password\",\r\n      submit: \"Login\",\r\n      notification: {\r\n        wrongLogin: \"Wrong login input\",\r\n        wrongCard: \"Wrong card input\",\r\n      },\r\n    },\r\n    navigation: {\r\n      login: \"Login\",\r\n      recordsToSign: \"To sign\",\r\n      signedRecords: \"Signed\",\r\n      addRecord: \"Add new\",\r\n      savedRecords: \"Saved\",\r\n      finder: \"Finder\",\r\n      settings: \"Settings\",\r\n      logout: \"Logout\",\r\n    },\r\n  },\r\n};\r\n","import React from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Button, ButtonGroup, Form, Container } from \"react-bootstrap\";\r\nimport { CustomAlert } from \"../components/CustomAlert\";\r\nimport { wording } from \"../utils/wording\";\r\n\r\nconst LoginForm = ({ onSubmit, language, setLanguage, notification }) => {\r\n  const { register, handleSubmit } = useForm();\r\n\r\n  const active = (id) => language === id;\r\n  const changeLanguage = (e) => setLanguage(e.target.id);\r\n\r\n  // TODO https://www.npmjs.com/package/react-i18next\r\n  const { header, login, password, submit } = wording[language].loginPage;\r\n\r\n  return (\r\n    <Container className=\"login-container\">\r\n      <Form onSubmit={handleSubmit(onSubmit)}>\r\n        {/* HEADER */}\r\n        <h3 align=\"center\">{header}</h3>\r\n        {/* LANGUAGE BTN */}\r\n        <ButtonGroup\r\n          onClick={changeLanguage}\r\n          className=\"container-fluid p-0 mt-4 mb-5 btn-group\"\r\n        >\r\n          <Button id=\"sk\" active={active(\"sk\")}>\r\n            Slovak\r\n          </Button>\r\n          <Button id=\"cz\" active={active(\"cz\")} disabled>\r\n            Czech\r\n          </Button>\r\n          <Button id=\"en\" active={active(\"en\")}>\r\n            English\r\n          </Button>\r\n          <Button id=\"hu\" active={active(\"hu\")} disabled>\r\n            Hungary\r\n          </Button>\r\n        </ButtonGroup>\r\n        {/* NAME */}\r\n        <Form.Group>\r\n          <Form.Label>{login}</Form.Label>\r\n          <Form.Control name=\"login\" ref={register} required />\r\n        </Form.Group>\r\n        {/* PASS */}\r\n        <Form.Group>\r\n          <Form.Label>{password}</Form.Label>\r\n          <Form.Control\r\n            name=\"password\"\r\n            type=\"password\"\r\n            ref={register}\r\n            required\r\n          />\r\n        </Form.Group>\r\n        {/* ALERT */}\r\n        {notification && <CustomAlert notification={notification} />}\r\n        {/* SUBMIT BTN */}\r\n        <Button type=\"submit\" variant=\"dark\" className=\"btn-block\">\r\n          {submit}\r\n        </Button>\r\n      </Form>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","const CryptoJS = require(\"crypto-js\");\r\n\r\nexport const changeString = (inputText) => {\r\n  inputText = inputText.toString().toLowerCase();\r\n  const howMany = (inputText.charCodeAt(0) % 12) + 7;\r\n  const sha = CryptoJS.HmacSHA256(inputText.repeat(howMany), \"Doli-Doli\");\r\n  let result = sha.toString(CryptoJS.enc.Base64);\r\n  result = encodeURIComponent(result.toString());\r\n  console.log(result);\r\n  return result;\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Redirect } from \"react-router\";\r\nimport LoginForm from \"./LoginForm\";\r\nimport { badMsg, getUser, reloadPage } from \"../utils/functions\";\r\nimport { wording } from \"../utils/wording\";\r\nimport { proxy_url } from \"../utils/data\";\r\nimport { changeString } from \"./secret\";\r\n\r\nconst LoginPage = () => {\r\n  const [notification, setNotification] = useState();\r\n  const [language, setLanguage] = useState(\"sk\");\r\n\r\n  const {\r\n    notification: { wrongLogin, wrongCard },\r\n  } = wording[language].loginPage;\r\n\r\n  let cardInput = \"\";\r\n  const maxCardInputTimeDifference = 40;\r\n  const cardInputLength = 10;\r\n  let t = cardInputTimeout();\r\n  clearTimeout(t);\r\n\r\n  function cardInputTimeout() {\r\n    return setTimeout(checkInput, maxCardInputTimeDifference);\r\n  }\r\n\r\n  function isLetter(e) {\r\n    let aKeycode = 65;\r\n    let zKeycode = 90;\r\n    return e.keyCode >= aKeycode && e.keyCode <= zKeycode;\r\n  }\r\n\r\n  function isNumber(e) {\r\n    let zeroKeycode = 48;\r\n    let nineKeycode = 57;\r\n    return e.keyCode >= zeroKeycode && e.keyCode <= nineKeycode;\r\n  }\r\n\r\n  function isValuable(e) {\r\n    return isLetter(e) || isNumber(e);\r\n  }\r\n\r\n  function resetCardInput() {\r\n    cardInput = \"\";\r\n  }\r\n\r\n  function checkInput() {\r\n    if (cardInput.length === cardInputLength) {\r\n      findByCard(cardInput);\r\n    }\r\n    resetCardInput();\r\n  }\r\n\r\n  const event = (e) => {\r\n    let engInput = String.fromCharCode(e.keyCode).toLowerCase();\r\n    if (isValuable(e)) {\r\n      cardInput += engInput;\r\n      clearTimeout(t);\r\n      t = cardInputTimeout();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.addEventListener(\"keydown\", event);\r\n    return () => document.removeEventListener(\"keydown\", event); // cleanup\r\n  });\r\n\r\n  const setUser = (data) => {\r\n    const user = {\r\n      id: data.id,\r\n      role: data.role,\r\n      first_name: data.first_name,\r\n      last_name: data.last_name,\r\n    };\r\n    // console.log(data);\r\n    sessionStorage.setItem(\"user\", JSON.stringify(user));\r\n    reloadPage();\r\n  };\r\n\r\n  const onSubmit = (data) => {\r\n    const pass = changeString(data.password);\r\n    fetch(proxy_url + \"/auth/login\", {\r\n      method: \"POST\",\r\n      body: new URLSearchParams(`login=${data.login}&password=${pass}`),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        console.log(\"success\");\r\n        setUser(data);\r\n      })\r\n      .catch(() => setNotification(badMsg(wrongLogin)));\r\n  };\r\n\r\n  const findByCard = (input) => {\r\n    fetch(proxy_url + \"/auth/kiosk\", {\r\n      method: \"POST\",\r\n      body: new URLSearchParams(`card=${input}`),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setUser(data);\r\n      })\r\n      .catch(() => setNotification(badMsg(wrongCard)));\r\n  };\r\n\r\n  if (getUser()) {\r\n    return <Redirect to=\"/records-to-sign\" />;\r\n  }\r\n  return (\r\n    <LoginForm\r\n      onSubmit={onSubmit}\r\n      language={language}\r\n      setLanguage={setLanguage}\r\n      notification={notification}\r\n    />\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n","import React from \"react\";\r\nimport { Redirect } from \"react-router\";\r\nimport { removeUser } from \"../utils/functions\";\r\n\r\nconst LogoutPage = () => {\r\n  removeUser();\r\n  return <Redirect to=\"/login\" />;\r\n};\r\n\r\nexport default LogoutPage;\r\n","import React from \"react\";\r\nimport { getUser, nonExpandableDocs, orderBy } from \"../utils/functions\";\r\nimport useDataApi from \"../utils/useDataApi\";\r\nimport { FetchError, FetchLoading } from \"../components/FetchComponents\";\r\nimport MyBootstrapTable from \"../components/Tables/MyBootstrapTable\";\r\nimport {\r\n  signedDocumentsColumns,\r\n  signedDocumentsExpandColumns,\r\n  signedTrainingsColumns,\r\n} from \"./columns\";\r\n\r\nconst SignedRecordsPage = () => {\r\n  const URL = `/signed/signatures/${getUser().id}`;\r\n  const [data, isLoaded, error] = useDataApi(URL);\r\n\r\n  if (error) {\r\n    return <FetchError e={`Error: ${error.message}`} />;\r\n  } else if (!isLoaded || !data) {\r\n    return <FetchLoading />;\r\n  }\r\n  console.log(\"signed\", data);\r\n  const documentsColumns = signedDocumentsColumns();\r\n  const expandColumns = signedDocumentsExpandColumns();\r\n\r\n  const trainingsColumns = signedTrainingsColumns();\r\n\r\n  const expandRow = {\r\n    onlyOneExpanding: true,\r\n    nonExpandable: nonExpandableDocs(data.documents),\r\n    renderer: (cell) => (\r\n      <MyBootstrapTable\r\n        classes=\"inner-table\"\r\n        data={cell.signatures}\r\n        columns={expandColumns}\r\n        order={orderBy(\"employee.last_name\")}\r\n      />\r\n    ),\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <MyBootstrapTable\r\n        title=\"Signed Documents\"\r\n        data={data.documents}\r\n        columns={documentsColumns}\r\n        expandRow={expandRow}\r\n        order={orderBy(\"release_date.Time\", \"desc\")}\r\n      />\r\n      <MyBootstrapTable\r\n        title=\"Signed Trainings\"\r\n        data={data.trainings}\r\n        columns={trainingsColumns}\r\n        order={orderBy(\"date.Time\", \"desc\")}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SignedRecordsPage;\r\n","import {\r\n  FormattedDate,\r\n  FormattedEmployeeDate,\r\n  FormattedRelease,\r\n  FormattedSuperiorDate,\r\n  FormattedTrainingDate,\r\n  FullName,\r\n  NameWithLink,\r\n} from \"../utils/Formatter\";\r\nimport { SignedBtn } from \"../components/Buttons/TableBtns\";\r\n\r\nexport const signedDocumentsColumns = () => [\r\n  {\r\n    dataField: \"name\",\r\n    text: \"Name\",\r\n    sort: true,\r\n    formatter: NameWithLink,\r\n    headerStyle: { width: \"33%\" },\r\n  },\r\n  {\r\n    dataField: \"release_date.Time\",\r\n    text: \"Release\",\r\n    sort: true,\r\n    formatter: FormattedRelease,\r\n    headerStyle: { width: \"33%\" },\r\n  },\r\n  {\r\n    dataField: \"signatures[0].e_date.Time\",\r\n    text: \"Signed date\",\r\n    sort: true,\r\n    formatter: SignedBtn,\r\n    headerStyle: { width: \"33%\" },\r\n  },\r\n];\r\n\r\nexport const signedDocumentsExpandColumns = () => [\r\n  {\r\n    dataField: \"employee.id\",\r\n    text: \"ID\",\r\n    sort: true,\r\n    headerStyle: { width: \"1%\" },\r\n  },\r\n  {\r\n    dataField: \"employee.last_name\",\r\n    text: \"Full name\",\r\n    sort: true,\r\n    formatter: FullName,\r\n  },\r\n  {\r\n    dataField: \"e_date.Time\",\r\n    text: \"Employee Sign\",\r\n    sort: true,\r\n    formatter: FormattedEmployeeDate,\r\n  },\r\n  {\r\n    dataField: \"s_date.Time\",\r\n    text: \"My Sign\",\r\n    sort: true,\r\n    formatter: FormattedSuperiorDate,\r\n  },\r\n];\r\n\r\nexport const signedTrainingsColumns = () => [\r\n  {\r\n    dataField: \"name\",\r\n    text: \"Name\",\r\n    sort: true,\r\n    headerStyle: { width: \"33%\" },\r\n  },\r\n  {\r\n    dataField: \"date.Time\",\r\n    text: \"Took place\",\r\n    sort: true,\r\n    formatter: FormattedDate,\r\n    headerStyle: { width: \"33%\" },\r\n  },\r\n  {\r\n    dataField: \"signatures[0].date.Time\", // always array with length of 1 [by SQL query]\r\n    text: \"Signed date\",\r\n    sort: true,\r\n    formatter: FormattedTrainingDate,\r\n    headerStyle: { width: \"33%\" },\r\n  },\r\n];\r\n","import { Col, Form, Row } from \"react-bootstrap\";\r\nimport React from \"react\";\r\n\r\nconst MyFormGroup = ({\r\n  label,\r\n  name,\r\n  placeholder,\r\n  type,\r\n  register,\r\n  as,\r\n  required,\r\n}) => {\r\n  return (\r\n    <Form.Group as={Row}>\r\n      <Form.Label column sm=\"3\">\r\n        {label}\r\n      </Form.Label>\r\n      <Col>\r\n        <Form.Control\r\n          name={name}\r\n          placeholder={placeholder}\r\n          ref={register}\r\n          type={type}\r\n          as={as}\r\n          required={required}\r\n        />\r\n      </Col>\r\n    </Form.Group>\r\n  );\r\n};\r\n\r\nexport default MyFormGroup;\r\n","import React, { useContext } from \"react\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Select from \"react-select\";\r\nimport { CustomAlert } from \"../CustomAlert\";\r\nimport { PairContext } from \"../../App\";\r\nimport { getOptionsForSelect } from \"../../utils/functions\";\r\n\r\nconst CombinationForm = ({\r\n  prefill,\r\n  disabled,\r\n  employees,\r\n  combinations: cs,\r\n  combination,\r\n  setCombination,\r\n  notification,\r\n}) => {\r\n  console.log(cs);\r\n\r\n  const pairs = useContext(PairContext);\r\n  const options = getOptionsForSelect(pairs);\r\n\r\n  const handleSelect = (data, { name: field }) => {\r\n    setCombination({ ...combination, [field]: data });\r\n  };\r\n\r\n  const selector = (name, label, opt = options[name]) => (\r\n    <>\r\n      {label}\r\n      <Select\r\n        isMulti={true}\r\n        placeholder=\"\"\r\n        name={name}\r\n        options={opt}\r\n        defaultValue={prefill ? prefill[name] : []}\r\n        isDisabled={\r\n          (prefill && name !== \"removedEmployees\") || disabled.includes(name)\r\n        }\r\n        onChange={(data, e) => handleSelect(data, e)}\r\n      />\r\n      <br />\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <Col className=\"p-0\">\r\n      {selector(\"branches\", \"Branches\")}\r\n      {selector(\"divisions\", \"Divisions\")}\r\n      {selector(\"departments\", \"Departments\")}\r\n      {selector(\"cities\", \"Cities\")}\r\n      {employees && selector(\"removedEmployees\", \"Remove employees\", employees)}\r\n      {notification && <CustomAlert notification={notification} />}\r\n    </Col>\r\n  );\r\n};\r\n\r\nexport default CombinationForm;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { Button, Col, Container, Modal } from \"react-bootstrap\";\r\nimport CombinationForm from \"../Forms/CombinationForm\";\r\nimport uuid from \"react-uuid\";\r\nimport {\r\n  badMsg,\r\n  getEmployeeLabel,\r\n  getFetch,\r\n  resolveCombinations,\r\n} from \"../../utils/functions\";\r\nimport { PairContext } from \"../../App\";\r\nimport { comboFields } from \"../../utils/data\";\r\n\r\nconst CombinationModal = ({\r\n  prefill,\r\n  combinations,\r\n  setAssignedTo,\r\n  setEmptyAssign,\r\n  closeModal,\r\n}) => {\r\n  const pairs = useContext(PairContext);\r\n\r\n  const [disabled, setDisabled] = useState([]);\r\n  const [notification, setNotification] = useState();\r\n  const [employees, setEmployees] = useState();\r\n  const [combination, setCombination] = useState(\r\n    prefill\r\n      ? prefill\r\n      : {\r\n          branches: [],\r\n          divisions: [],\r\n          departments: [],\r\n          cities: [],\r\n          removedEmployees: [],\r\n        }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (prefill) {\r\n      preview();\r\n    }\r\n  }, []);\r\n\r\n  function preview() {\r\n    setDisabled(comboFields);\r\n    const assignedTo = resolveCombinations([combination]);\r\n\r\n    getFetch(`/employees/${assignedTo}`)\r\n      .then((data) => {\r\n        if (!data.length) {\r\n          setNotification(badMsg(\"not valid combination\"));\r\n          return;\r\n        }\r\n        resolveEmployees(data);\r\n      })\r\n      .catch((e) => {\r\n        setNotification(badMsg(\"not valid combination\"));\r\n        console.log(\"Errrrrrrrrrrror\", e);\r\n      });\r\n  }\r\n\r\n  const resolveEmployees = (data) => {\r\n    setEmployees(\r\n      data.map((d) => {\r\n        return {\r\n          value: d.id,\r\n          label: getEmployeeLabel(d, pairs.departments),\r\n        };\r\n      })\r\n    );\r\n  };\r\n\r\n  const save = () => {\r\n    setAssignedTo((prev) => {\r\n      return prev.map((c) => {\r\n        if (c.id === prefill?.id) {\r\n          return { ...combination, id: uuid() };\r\n        }\r\n        return c;\r\n      });\r\n    });\r\n\r\n    closeModal();\r\n  };\r\n\r\n  const add = () => {\r\n    const assignedTo = resolveCombinations([combination]);\r\n    getFetch(`/employees/${assignedTo}`)\r\n      .then((data) => {\r\n        if (!data.length) {\r\n          setNotification(badMsg(\"not valid combination\"));\r\n          return;\r\n        }\r\n\r\n        setNotification(undefined);\r\n        setEmptyAssign([false]);\r\n\r\n        setAssignedTo((prevState) => {\r\n          return [...prevState, { ...combination, id: uuid() }];\r\n        });\r\n\r\n        closeModal();\r\n      })\r\n      .catch((e) => {\r\n        setNotification(badMsg(\"not valid combination\"));\r\n        console.log(\"Errrrrrrrrrrror\", e);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Modal show={true} onHide={closeModal} centered>\r\n      <Container className=\"pt-3 pb-3 pl-5 pr-5\">\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Add new combination</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <CombinationForm\r\n            prefill={prefill}\r\n            disabled={disabled}\r\n            employees={employees}\r\n            combinations={combinations}\r\n            combination={combination}\r\n            setCombination={setCombination}\r\n            notification={notification}\r\n            setNotification={setNotification}\r\n          />\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Col className=\"text-center\">\r\n            {prefill ? (\r\n              <Button onClick={save} size=\"sm\" className=\"mr-2\">\r\n                Save\r\n              </Button>\r\n            ) : (\r\n              <>\r\n                <Button onClick={preview} size=\"sm\" className=\"mr-2\">\r\n                  Preview\r\n                </Button>\r\n                <Button onClick={add} size=\"sm\" className=\"mr-2\">\r\n                  Add\r\n                </Button>\r\n              </>\r\n            )}\r\n            <Button onClick={closeModal} variant=\"secondary\" size=\"sm\">\r\n              close\r\n            </Button>\r\n          </Col>\r\n        </Modal.Footer>\r\n      </Container>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default CombinationModal;\r\n","import React, { useState } from \"react\";\r\nimport { Plus, XSquare, Pencil } from \"react-bootstrap-icons\";\r\nimport CombinationModal from \"../Modals/CombinationModal\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { buttonColumn } from \"../../utils/functions\";\r\nimport { OverlayTrigger, Tooltip } from \"react-bootstrap\";\r\nimport MyBootstrapTable from \"./MyBootstrapTable\";\r\n\r\nconst Combinations = ({\r\n  combinations,\r\n  assignedTo,\r\n  setAssignedTo,\r\n  setEmptyAssign,\r\n}) => {\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [prefill, setPrefill] = useState();\r\n\r\n  const openModal = () => setShowModal(true);\r\n  const closeModal = () => {\r\n    setPrefill(undefined);\r\n    setShowModal(false);\r\n  };\r\n\r\n  const EditIcon = (_, row) => {\r\n    const editCombination = (row) => {\r\n      setPrefill(row);\r\n      openModal();\r\n    };\r\n\r\n    return (\r\n      <OverlayTrigger\r\n        placement=\"right\"\r\n        overlay={\r\n          <Tooltip id=\"tooltip-right\" className=\"text-left\">\r\n            {!row.removedEmployees || !row.removedEmployees.length ? (\r\n              <p>Empty</p>\r\n            ) : (\r\n              row.removedEmployees.map((e) => <p key={e.value}>{e.label}</p>)\r\n            )}\r\n          </Tooltip>\r\n        }\r\n      >\r\n        <Pencil size=\"25\" color=\"black\" onClick={() => editCombination(row)} />\r\n      </OverlayTrigger>\r\n    );\r\n  };\r\n\r\n  const DeleteIcon = (_, row) => {\r\n    const deleteCombination = (row) => {\r\n      setAssignedTo((prevState) => {\r\n        return prevState.filter((c) => c.id !== row.id);\r\n      });\r\n    };\r\n\r\n    return (\r\n      <XSquare size=\"25\" color=\"red\" onClick={() => deleteCombination(row)} />\r\n    );\r\n  };\r\n\r\n  const AddIcon = () => (\r\n    <Button variant=\"dark\" onClick={openModal} size=\"sm\" className=\"mb-2\">\r\n      <Plus size=\"20\" color=\"white\" />\r\n      <span>add combination</span>\r\n    </Button>\r\n  );\r\n\r\n  const getLabels = (field) => <>{field?.map((f) => f.label).join(\",\")}</>;\r\n  const Branches = (_, row) => getLabels(row.branches);\r\n  const Divisions = (_, row) => getLabels(row.divisions);\r\n  const Departments = (_, row) => getLabels(row.departments);\r\n  const Cities = (_, row) => getLabels(row.cities);\r\n\r\n  const columns = [\r\n    {\r\n      dataField: \"branches\",\r\n      text: \"Branches\",\r\n      formatter: Branches,\r\n    },\r\n    {\r\n      dataField: \"divisions\",\r\n      text: \"Divisions\",\r\n      formatter: Divisions,\r\n    },\r\n    {\r\n      dataField: \"departments\",\r\n      text: \"Departments\",\r\n      formatter: Departments,\r\n    },\r\n    {\r\n      dataField: \"cities\",\r\n      text: \"Cities\",\r\n      formatter: Cities,\r\n    },\r\n    {\r\n      ...buttonColumn(\"edit\"),\r\n      formatter: EditIcon,\r\n    },\r\n    {\r\n      ...buttonColumn(\"del\"),\r\n      formatter: DeleteIcon,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <MyBootstrapTable\r\n        data={assignedTo}\r\n        columns={columns}\r\n        // horizontal scroll\r\n        wrapperClasses=\"table-responsive\"\r\n        rowClasses=\"text-nowrap\"\r\n      />\r\n      <AddIcon />\r\n      {showModal && (\r\n        <CombinationModal\r\n          prefill={prefill}\r\n          combinations={combinations}\r\n          setAssignedTo={setAssignedTo}\r\n          setEmptyAssign={setEmptyAssign}\r\n          closeModal={closeModal}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Combinations;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport MyFormGroup from \"./MyFormGroup\";\r\nimport { Form, Row, Col, Button } from \"react-bootstrap\";\r\nimport Combinations from \"../Tables/Combinations\";\r\nimport { CustomAlert } from \"../CustomAlert\";\r\nimport { proxy_url, types as t } from \"../../utils/data\";\r\nimport {\r\n  badMsg,\r\n  goodMsg,\r\n  correctDocumentFormData,\r\n  getSelectOptions,\r\n  prefillDocumentForm,\r\n  successResponse,\r\n  getAssignedTo,\r\n  prepareCombinations,\r\n  getFormID,\r\n} from \"../../utils/functions\";\r\nimport { PairContext } from \"../../App\";\r\nimport ConfirmModal from \"../Modals/ConfirmModal\";\r\n\r\nconst DocumentForm = ({ setRecords, formData, setFormData, actual }) => {\r\n  const pairs = useContext(PairContext);\r\n\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [submitData, setSubmitData] = useState({});\r\n\r\n  const { register, handleSubmit } = useForm({\r\n    defaultValues: prefillDocumentForm(formData),\r\n  });\r\n\r\n  const types = t;\r\n  const [action, setAction] = useState();\r\n  const [selectedType, setSelectedType] = useState(\r\n    formData ? formData.type : \"\"\r\n  );\r\n\r\n  const [sent, setSent] = useState(false);\r\n  const [currentID, setCurrentID] = useState(formData ? formData.id : 0);\r\n  const [notification, setNotification] = useState();\r\n  const [combinations, setCombinations] = useState([]);\r\n  const [assignedTo, setAssignedTo] = useState([]);\r\n  const [emptyAssign, setEmptyAssign] = useState([true]);\r\n  useEffect(() => setNotification(undefined), emptyAssign);\r\n\r\n  useEffect(() => {\r\n    fetch(proxy_url + \"/combinations\", {\r\n      method: \"GET\",\r\n    })\r\n      .then((response) => response.json())\r\n      .then((res) => {\r\n        setCombinations(prepareCombinations(res));\r\n      })\r\n      .catch((e) => console.log(e));\r\n\r\n    fetch(proxy_url + \"/employees/all\", {\r\n      method: \"GET\",\r\n    })\r\n      .then((response) => response.json())\r\n      .then((res) => {\r\n        setAssignedTo(getAssignedTo(formData, pairs, res));\r\n      })\r\n      .catch((e) => console.log(e));\r\n  }, []);\r\n\r\n  const onSubmit = (data) => {\r\n    if (assignedTo.length === 0) {\r\n      setNotification(badMsg(\"At least one combination is required\"));\r\n      return;\r\n    }\r\n\r\n    setSubmitData(data);\r\n\r\n    if (action === \"send\") {\r\n      setShowModal(true);\r\n    } else {\r\n      executeSubmit(data);\r\n    }\r\n  };\r\n\r\n  const executeSubmit = (data) => {\r\n    console.log(\"raw\", assignedTo);\r\n    data = correctDocumentFormData(data || submitData, assignedTo);\r\n    console.log(\"data\", data);\r\n\r\n    if (action === \"save\") {\r\n      if (currentID) {\r\n        data = { ...data, id: currentID };\r\n        upsert(data, \"update\");\r\n        updateSavedRec(data);\r\n      } else {\r\n        upsert(data, \"create\").then((r) => setCurrentID(r?.id));\r\n      }\r\n    }\r\n    if (action === \"send\") {\r\n      if (currentID) {\r\n        data = { ...data, id: currentID };\r\n        if (actual) {\r\n          upsertConfirm(data, \"create/confirm\").then((r) => {\r\n            setCurrentID(r?.id);\r\n          });\r\n        } else {\r\n          upsertConfirm(data, \"update/confirm\", true);\r\n        }\r\n      } else {\r\n        upsertConfirm(data, \"create/confirm\").then((r) => setCurrentID(r?.id));\r\n      }\r\n      setSent(true);\r\n    }\r\n  };\r\n\r\n  const upsert = (data, action) => {\r\n    console.log(data);\r\n    return fetch(proxy_url + `/document/${action}`, {\r\n      method: \"POST\",\r\n      body: JSON.stringify(data),\r\n    })\r\n      .then((res) => {\r\n        if (successResponse(res)) {\r\n          setNotification(goodMsg(`${action} was successful`));\r\n        } else {\r\n          setNotification(badMsg(`${action} failed`));\r\n        }\r\n        return res.json();\r\n      })\r\n      .catch((e) => console.log(\"error\", e));\r\n  };\r\n  const upsertConfirm = (data, action, update) => {\r\n    console.log(data);\r\n    return fetch(proxy_url + `/document/${action}`, {\r\n      method: \"POST\",\r\n      body: JSON.stringify(data),\r\n    })\r\n      .then((res) => {\r\n        if (successResponse(res)) {\r\n          setNotification(goodMsg(`${action} was successful`));\r\n          if (setRecords && update) {\r\n            filterSavedRec(data); // update table data\r\n            // if (setFormData) setFormData(undefined); // hide modal\r\n          }\r\n          updateSavedRec(data);\r\n        } else {\r\n          setNotification(badMsg(`${action} failed`));\r\n        }\r\n        console.log(res);\r\n        return res.json();\r\n      })\r\n      .catch((e) => {\r\n        setNotification(badMsg(`${action} failed`));\r\n        console.log(\"error\", e);\r\n      });\r\n  };\r\n\r\n  const filterSavedRec = (data) => {\r\n    setRecords((prevState) => prevState.filter((p) => p.id !== data.id));\r\n  };\r\n\r\n  const updateSavedRec = (data) => {\r\n    if (!setRecords) return;\r\n\r\n    setRecords((prevState) => {\r\n      let update = prevState;\r\n      const foundID = prevState.findIndex((p) => p.id === data.id);\r\n      update[foundID] = data;\r\n      return update;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Form\r\n      onChange={() => setNotification(undefined)}\r\n      onSubmit={handleSubmit(onSubmit)}\r\n    >\r\n      {/* TYPE* */}\r\n      <Form.Group as={Row}>\r\n        <Form.Label column sm=\"3\">\r\n          Type*\r\n        </Form.Label>\r\n        <Col>\r\n          <Form.Control\r\n            onChange={(e) => setSelectedType(e.target.value)}\r\n            as=\"select\"\r\n            name=\"type\"\r\n            ref={register({ validate: (v) => v !== \"\" })}\r\n            required\r\n            value={selectedType}\r\n          >\r\n            {getSelectOptions(types)}\r\n          </Form.Control>\r\n        </Col>\r\n      </Form.Group>\r\n      {/* REQUIRE SUPERIOR */}\r\n      <Form.Group as={Row}>\r\n        <Form.Label column sm=\"3\">\r\n          {\" \"}\r\n        </Form.Label>\r\n        <Col>\r\n          <Form.Check\r\n            inline\r\n            label=\"require superior\"\r\n            name=\"require_superior\"\r\n            ref={register}\r\n          />\r\n        </Col>\r\n      </Form.Group>\r\n      {/* NAME */}\r\n      <MyFormGroup\r\n        label=\"Document name*\"\r\n        name=\"name\"\r\n        placeholder=\"Enter document name\"\r\n        register={register}\r\n        required\r\n      />\r\n      {/* DOCUMENT NUMBER */}\r\n      <MyFormGroup\r\n        label=\"Document number*\"\r\n        name=\"order_number\"\r\n        type=\"number\"\r\n        placeholder=\"Enter number\"\r\n        register={register({ valueAsNumber: true })}\r\n        required\r\n      />\r\n      {/* VERSION */}\r\n      <MyFormGroup\r\n        label=\"Version*\"\r\n        name=\"version\"\r\n        placeholder=\"Enter version\"\r\n        register={register}\r\n        required\r\n      />\r\n      {/* LINK */}\r\n      <MyFormGroup\r\n        label=\"Link to sharepoint\"\r\n        name=\"link\"\r\n        placeholder=\"Enter document link to sharepoint\"\r\n        register={register}\r\n      />\r\n      {/* RELEASE */}\r\n      <MyFormGroup\r\n        label=\"Release date*\"\r\n        name=\"release_date\"\r\n        type=\"date\"\r\n        register={register}\r\n        required\r\n      />\r\n      {/* DEADLINE */}\r\n      <MyFormGroup\r\n        label=\"Days to deadline*\"\r\n        name=\"deadline\"\r\n        type=\"date\"\r\n        register={register}\r\n        required\r\n      />\r\n      {/* NOTE */}\r\n      <MyFormGroup\r\n        label=\"Note\"\r\n        name=\"note\"\r\n        as=\"textarea\"\r\n        placeholder=\"Enter note\"\r\n        register={register}\r\n      />\r\n      <input hidden name=\"complete\" ref={register} />\r\n      {/* COMBINATIONS */}\r\n      <Combinations\r\n        combinations={combinations}\r\n        assignedTo={assignedTo}\r\n        setAssignedTo={setAssignedTo}\r\n        emptyAssign={emptyAssign}\r\n        setEmptyAssign={setEmptyAssign}\r\n      />\r\n      {/* ALERTS */}\r\n      {notification && <CustomAlert notification={notification} />}\r\n      {/* SAVE | SEND BUTTONS */}\r\n      <div className=\"pt-1 btn-block text-right\">\r\n        <Button\r\n          variant=\"outline-primary\"\r\n          type=\"submit\"\r\n          className=\"mr-1\"\r\n          disabled={sent}\r\n          onClick={() => setAction(\"save\")}\r\n        >\r\n          Save\r\n        </Button>\r\n        <Button type=\"submit\" onClick={() => setAction(\"send\")} disabled={sent}>\r\n          {actual ? \"Send as new version\" : \"Send\"}\r\n        </Button>\r\n      </div>\r\n      {showModal && (\r\n        <ConfirmModal\r\n          handleAccept={executeSubmit}\r\n          showModal={showModal}\r\n          setShowModal={setShowModal}\r\n          modalInfo={{\r\n            body: \"Do you really want to send the record to the employees?\",\r\n          }}\r\n          // style={{ border: \"10px solid #6c757d\" }}\r\n        />\r\n      )}\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default DocumentForm;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport MyFormGroup from \"./MyFormGroup\";\r\nimport { Row, Col, Form, Button } from \"react-bootstrap\";\r\nimport { Typeahead } from \"react-bootstrap-typeahead\";\r\nimport \"react-bootstrap-typeahead/css/Typeahead.css\";\r\nimport { CustomAlert } from \"../CustomAlert\";\r\nimport {\r\n  badMsg,\r\n  goodMsg,\r\n  correctTrainingFormData,\r\n  successResponse,\r\n  prefillTrainingForm,\r\n  getEmployeesNames,\r\n  getEmployeeLabel,\r\n} from \"../../utils/functions\";\r\nimport { PairContext } from \"../../App\";\r\nimport { proxy_url } from \"../../utils/data\";\r\nimport ConfirmModal from \"../Modals/ConfirmModal\";\r\n\r\nconst TrainingForm = ({ setRecords, formData, setFormData, actual }) => {\r\n  const pairs = useContext(PairContext);\r\n\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [submitData, setSubmitData] = useState({});\r\n\r\n  const { register, handleSubmit } = useForm({\r\n    defaultValues: prefillTrainingForm(formData),\r\n  });\r\n\r\n  const [action, setAction] = useState();\r\n\r\n  const [sent, setSent] = useState(false);\r\n  const [currentID, setCurrentID] = useState(formData ? formData.id : 0);\r\n  const [notification, setNotification] = useState();\r\n  const [employees, setEmployees] = useState([]);\r\n  const [attendees, setAttendees] = useState([]);\r\n  const [emptyAttendees, setEmptyAttendees] = useState([true]);\r\n  useEffect(() => setNotification(undefined), emptyAttendees);\r\n\r\n  useEffect(() => {\r\n    fetch(proxy_url + \"/employees/all\", {\r\n      method: \"GET\",\r\n    })\r\n      .then((response) => response.json())\r\n      .then((res) => {\r\n        setEmployees(res);\r\n        setAttendees(getEmployeesNames(formData, res));\r\n      })\r\n      .catch((e) => console.log(e));\r\n  }, []);\r\n\r\n  const onSubmit = (data) => {\r\n    console.log(\"data onSubmit\", data);\r\n    if (!attendees.length) {\r\n      setNotification(badMsg(\"At least one employee is required\"));\r\n      return;\r\n    }\r\n\r\n    setSubmitData(data);\r\n\r\n    if (action === \"send\") {\r\n      setShowModal(true);\r\n    } else {\r\n      executeSubmit(data);\r\n    }\r\n  };\r\n\r\n  const executeSubmit = (data) => {\r\n    data = correctTrainingFormData(data || submitData, attendees);\r\n\r\n    if (action === \"save\") {\r\n      if (currentID) {\r\n        data = { ...data, id: currentID };\r\n        upsert(data, \"update\");\r\n        updateSavedRec(data);\r\n      } else {\r\n        upsert(data, \"create\").then((r) => setCurrentID(r?.id));\r\n      }\r\n    }\r\n    if (action === \"send\") {\r\n      if (currentID) {\r\n        data = { ...data, id: currentID };\r\n        if (actual) {\r\n          upsertConfirm(data, \"create/confirm\").then((r) =>\r\n            setCurrentID(r?.id)\r\n          );\r\n        } else {\r\n          upsertConfirm(data, \"update/confirm\");\r\n        }\r\n      } else {\r\n        upsertConfirm(data, \"create/confirm\").then((r) => setCurrentID(r?.id));\r\n      }\r\n      setSent(true);\r\n    }\r\n  };\r\n\r\n  const upsert = (data, action) => {\r\n    return fetch(proxy_url + `/training/${action}`, {\r\n      method: \"POST\",\r\n      body: JSON.stringify(data),\r\n    })\r\n      .then((res) => {\r\n        if (successResponse(res)) {\r\n          setNotification(goodMsg(`${action} was successful`));\r\n        } else {\r\n          setNotification(badMsg(`${action} failed`));\r\n        }\r\n        return res.json();\r\n      })\r\n      .catch((e) => console.log(\"error\", e));\r\n  };\r\n\r\n  const upsertConfirm = (data, action) => {\r\n    console.log(data);\r\n    return fetch(proxy_url + `/training/${action}`, {\r\n      method: \"POST\",\r\n      body: JSON.stringify(data),\r\n    })\r\n      .then((res) => {\r\n        if (successResponse(res)) {\r\n          setNotification(goodMsg(`${action} was successful`));\r\n          if (setRecords) filterSavedRec(data); // update table data\r\n          if (setFormData) setFormData(undefined); // hide modal\r\n        } else {\r\n          setNotification(badMsg(`${action} failed`));\r\n        }\r\n        console.log(res);\r\n        return res.json();\r\n      })\r\n      .catch((e) => console.log(\"error\", e));\r\n  };\r\n\r\n  const filterSavedRec = (data) => {\r\n    setRecords((prevState) => prevState.filter((p) => p.id !== data.id));\r\n  };\r\n\r\n  const updateSavedRec = (data) => {\r\n    if (!setRecords) return;\r\n\r\n    setRecords((prevState) => {\r\n      let update = prevState;\r\n      const foundID = prevState.findIndex((p) => p.id === data.id);\r\n      update[foundID] = data;\r\n      return update;\r\n    });\r\n  };\r\n\r\n  const addAttendees = (attendee) => {\r\n    setAttendees(attendee);\r\n    setEmptyAttendees([false]);\r\n  };\r\n\r\n  return (\r\n    <Form\r\n      onChange={() => setNotification(undefined)}\r\n      onSubmit={handleSubmit(onSubmit)}\r\n    >\r\n      {/* NAME */}\r\n      <MyFormGroup\r\n        label=\"Training name*\"\r\n        name=\"name\"\r\n        placeholder=\"Enter document name\"\r\n        register={register}\r\n        required\r\n      />\r\n      {/* TRAINEE */}\r\n      <MyFormGroup\r\n        label=\"Name of lector\"\r\n        name=\"lector\"\r\n        placeholder=\"Enter document link to sharepoint\"\r\n        register={register}\r\n      />\r\n      {/* AGENCY */}\r\n      <MyFormGroup\r\n        label=\"Name of agency\"\r\n        name=\"agency\"\r\n        placeholder=\"Enter agency\"\r\n        register={register}\r\n      />\r\n      {/* PLACE */}\r\n      <MyFormGroup\r\n        label=\"Place\"\r\n        name=\"place\"\r\n        placeholder=\"Enter place\"\r\n        register={register}\r\n      />\r\n      {/* DATE */}\r\n      <MyFormGroup\r\n        label=\"Date*\"\r\n        name=\"date\"\r\n        type=\"date\"\r\n        placeholder=\"Enter date\"\r\n        register={register}\r\n        required\r\n      />\r\n      {/* DEADLINE */}\r\n      <MyFormGroup\r\n        label=\"Days to deadline*\"\r\n        name=\"deadline\"\r\n        type=\"date\"\r\n        defaultValue=\"14\"\r\n        register={register}\r\n        required\r\n      />\r\n      {/* DURATION */}\r\n      <MyFormGroup\r\n        label=\"Duration\"\r\n        name=\"duration\"\r\n        type=\"number\"\r\n        placeholder=\"Enter duration\"\r\n        register={register({ valueAsNumber: true })}\r\n      />\r\n      {/* AGENDA */}\r\n      <MyFormGroup\r\n        label=\"Agenda*\"\r\n        name=\"agenda\"\r\n        as=\"textarea\"\r\n        placeholder=\"Enter agenda\"\r\n        register={register}\r\n        required\r\n      />\r\n      <input hidden name=\"complete\" ref={register} />\r\n      {/* LIST OF EMPLOYEES */}\r\n      <Form.Group as={Row}>\r\n        <Form.Label column sm=\"3\">\r\n          Add employees*\r\n        </Form.Label>\r\n        <Col>\r\n          <Typeahead\r\n            id=\"basic-typeahead-single\"\r\n            name=\"employees\"\r\n            labelKey={(e) => getEmployeeLabel(e, pairs.departments)}\r\n            multiple\r\n            placeholder=\"Choose an employees...\"\r\n            selected={attendees}\r\n            options={employees}\r\n            onChange={(selected) => {\r\n              addAttendees(selected);\r\n              // this._typeahead.getInstance().focus();\r\n            }}\r\n            // ref={typeahead => this._typeahead = typeahead}\r\n          />\r\n        </Col>\r\n      </Form.Group>\r\n      {/* ALERTS */}\r\n      {notification && <CustomAlert notification={notification} />}\r\n      {/* SAVE | SEND BUTTONS */}\r\n      <div className=\"pt-1 btn-block text-right\">\r\n        <Button\r\n          variant=\"outline-primary\"\r\n          type=\"submit\"\r\n          className=\"mr-1\"\r\n          disabled={sent}\r\n          onClick={() => setAction(\"save\")}\r\n        >\r\n          Save\r\n        </Button>\r\n        <Button type=\"submit\" onClick={() => setAction(\"send\")} disabled={sent}>\r\n          Send\r\n        </Button>\r\n      </div>\r\n      {showModal && (\r\n        <ConfirmModal\r\n          handleAccept={executeSubmit}\r\n          showModal={showModal}\r\n          setShowModal={setShowModal}\r\n          modalInfo={{\r\n            body: \"Do you really want to send the record to the employees?\",\r\n          }}\r\n        />\r\n      )}\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default TrainingForm;\r\n","import React, { useState } from \"react\";\r\nimport { Button, ButtonGroup, Container } from \"react-bootstrap\";\r\nimport DocumentForm from \"../components/Forms/DocumentForm\";\r\nimport TrainingForm from \"../components/Forms/TrainingForm\";\r\n\r\nconst AddRecordPage = () => {\r\n  const [formType, setFormType] = useState(\"document\");\r\n\r\n  const handleClick = (event) => setFormType(event.target.id);\r\n  const active = (id) => formType === id && \"active\";\r\n\r\n  return (\r\n    <Container className=\"w-75\">\r\n      <ButtonGroup onClick={handleClick} className=\"btn-group btn-header\">\r\n        <Button id=\"document\" className={active(\"document\")}>\r\n          Document\r\n        </Button>\r\n        <Button id=\"training\" className={active(\"training\")}>\r\n          Online training\r\n        </Button>\r\n      </ButtonGroup>\r\n      {formType === \"document\" && <DocumentForm />}\r\n      {formType === \"training\" && <TrainingForm />}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default AddRecordPage;\r\n","import Button from \"react-bootstrap/Button\";\r\nimport React from \"react\";\r\n\r\nconst EditBtn = (cell, row, index, { setFormData }) => {\r\n  return (\r\n    <Button\r\n      variant=\"outline-primary\"\r\n      onClick={() => setFormData(row)}\r\n      size=\"sm\"\r\n    >\r\n      Edit\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default EditBtn;\r\n","import {\r\n  FormattedDate,\r\n  FormattedDeadline,\r\n  FormattedRelease,\r\n} from \"../utils/Formatter\";\r\nimport { buttonColumn } from \"../utils/functions\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport React from \"react\";\r\nimport EditBtn from \"../components/Buttons/EditBtn\";\r\n\r\nconst SendBtn = (cell, row, index, { setRow, setShowModal }) => {\r\n  return (\r\n    <Button\r\n      id=\"save\"\r\n      size=\"sm\"\r\n      onClick={() => {\r\n        setRow(row);\r\n        setShowModal(true);\r\n      }}\r\n    >\r\n      Send\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport const savedDocumentsColumns = (setFormData, setRow, setShowModal) => [\r\n  {\r\n    dataField: \"name\",\r\n    text: \"Name\",\r\n    sort: true,\r\n    headerStyle: { width: \"33%\" },\r\n  },\r\n  {\r\n    dataField: \"release_date.Time\",\r\n    text: \"Release\",\r\n    sort: true,\r\n    formatter: FormattedRelease,\r\n    headerStyle: { width: \"32%\" },\r\n  },\r\n  {\r\n    dataField: \"deadline.Time\",\r\n    text: \"Deadline\",\r\n    sort: true,\r\n    formatter: FormattedDeadline,\r\n    headerStyle: { width: \"33%\" },\r\n  },\r\n  {\r\n    ...buttonColumn(\"EditBtn\"),\r\n    formatter: EditBtn,\r\n    formatExtraData: {\r\n      setFormData: setFormData,\r\n    },\r\n  },\r\n  {\r\n    ...buttonColumn(\"SendBtn\"),\r\n    formatter: SendBtn,\r\n    formatExtraData: {\r\n      setRow: setRow,\r\n      setShowModal: setShowModal,\r\n    },\r\n  },\r\n];\r\n\r\nexport const savedTrainingsColumns = (setFormData, setRow, setShowModal) => [\r\n  {\r\n    dataField: \"name\",\r\n    text: \"Name\",\r\n    sort: true,\r\n    headerStyle: { width: \"33%\" },\r\n  },\r\n  {\r\n    dataField: \"date.Time\",\r\n    text: \"Release\",\r\n    sort: true,\r\n    formatter: FormattedDate,\r\n    headerStyle: { width: \"32%\" },\r\n  },\r\n  {\r\n    dataField: \"place\",\r\n    text: \"Place\",\r\n    sort: true,\r\n    headerStyle: { width: \"33%\" },\r\n  },\r\n  {\r\n    ...buttonColumn(\"EditBtn\"),\r\n    formatter: EditBtn,\r\n    formatExtraData: {\r\n      setFormData: setFormData,\r\n    },\r\n  },\r\n  {\r\n    ...buttonColumn(\"SendBtn\"),\r\n    formatter: SendBtn,\r\n    formatExtraData: {\r\n      setRow: setRow,\r\n      setShowModal: setShowModal,\r\n    },\r\n  },\r\n];\r\n","import React from \"react\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport DocumentForm from \"../Forms/DocumentForm\";\r\nimport TrainingForm from \"../Forms/TrainingForm\";\r\nimport { recordType } from \"../../utils/functions\";\r\n\r\nconst EditRecordModal = ({ setRecords, formData, setFormData, actual }) => {\r\n  const closeModal = () => setFormData(undefined);\r\n  const type = recordType(formData);\r\n\r\n  const props = { setRecords, formData, setFormData, actual };\r\n\r\n  return (\r\n    <Modal show={true} onHide={closeModal} centered size=\"lg\">\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Edit {type}</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        {type === \"document\" ? (\r\n          <DocumentForm {...props} />\r\n        ) : (\r\n          <TrainingForm {...props} />\r\n        )}\r\n      </Modal.Body>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default EditRecordModal;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport MyBootstrapTable from \"../components/Tables/MyBootstrapTable\";\r\nimport { savedDocumentsColumns, savedTrainingsColumns } from \"./columns\";\r\nimport useDataApi from \"../utils/useDataApi\";\r\nimport { FetchError, FetchLoading } from \"../components/FetchComponents\";\r\nimport {\r\n  badMsg,\r\n  goodMsg,\r\n  orderBy,\r\n  recordType,\r\n  successResponse,\r\n} from \"../utils/functions\";\r\nimport { CustomAlert } from \"../components/CustomAlert\";\r\nimport EditRecordModal from \"../components/Modals/EditRecordModal\";\r\nimport { proxy_url } from \"../utils/data\";\r\nimport ConfirmModal from \"../components/Modals/ConfirmModal\";\r\n\r\nconst SavedRecordsPage = () => {\r\n  const [doc_data, isLoaded, error] = useDataApi(\"/document/edited\");\r\n  const [trn_data, isLoaded2, error2] = useDataApi(\"/training/edited\");\r\n\r\n  const [documents, setDocuments] = useState([]);\r\n  const [trainings, setTrainings] = useState([]);\r\n\r\n  const [notification, setNotification] = useState();\r\n  const [formData, setFormData] = useState();\r\n\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [row, setRow] = useState();\r\n\r\n  useEffect(() => {\r\n    if (doc_data && trn_data) {\r\n      setDocuments(doc_data);\r\n      setTrainings(trn_data);\r\n    }\r\n  }, [doc_data, trn_data]);\r\n\r\n  /** Send record to relevant employees */\r\n  const handleClick = () => {\r\n    fetch(proxy_url + `/${recordType(row)}/confirm/${row.id}`, {\r\n      method: \"GET\",\r\n    })\r\n      .then((res) => {\r\n        if (successResponse(res)) {\r\n          updateSavedRec();\r\n          setNotification(goodMsg(`Record ${row.name} was successfully sent`));\r\n        } else {\r\n          setNotification(badMsg(`Record ${row.name} failed`));\r\n        }\r\n      })\r\n      .catch((e) => console.log(e));\r\n  };\r\n\r\n  /** Remove sent record */\r\n  const updateSavedRec = () => {\r\n    if (recordType(row) === \"document\") {\r\n      setDocuments((prev) => prev.filter((rec) => rec.id !== row.id));\r\n    } else {\r\n      setTrainings((prev) => prev.filter((rec) => rec.id !== row.id));\r\n    }\r\n  };\r\n\r\n  if (error) {\r\n    return <FetchError e={`Error: ${error.message}`} />;\r\n  } else if (error2) {\r\n    return <FetchError e={`Error: ${error2.message}`} />;\r\n  } else if (!isLoaded || !doc_data || !isLoaded2 || !trn_data) {\r\n    return <FetchLoading />;\r\n  }\r\n\r\n  const trn_columns = savedTrainingsColumns(setFormData, setRow, setShowModal);\r\n  const doc_columns = savedDocumentsColumns(setFormData, setRow, setShowModal);\r\n\r\n  return (\r\n    <>\r\n      {/* DOCUMENTS */}\r\n      <MyBootstrapTable\r\n        title=\"Saved documents\"\r\n        data={documents}\r\n        columns={doc_columns}\r\n        order={orderBy(\"deadline.Time\")}\r\n      />\r\n      {/* TRAININGS */}\r\n      <MyBootstrapTable\r\n        title=\"Saved trainings\"\r\n        data={trainings}\r\n        columns={trn_columns}\r\n        order={orderBy(\"deadline.Time\")}\r\n      />\r\n      {notification && <CustomAlert notification={notification} />}\r\n      {formData && (\r\n        <EditRecordModal\r\n          setRecords={\r\n            recordType(formData) === \"document\" ? setDocuments : setTrainings\r\n          }\r\n          formData={formData}\r\n          setFormData={setFormData}\r\n        />\r\n      )}\r\n      {showModal && (\r\n        <ConfirmModal\r\n          handleAccept={handleClick}\r\n          showModal={showModal}\r\n          setShowModal={setShowModal}\r\n          modalInfo={{\r\n            body: \"Do you really want to send the record to the employees?\",\r\n          }}\r\n          // style={{ border: \"10px solid #6c757d\" }}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SavedRecordsPage;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Button, Form } from \"react-bootstrap\";\r\nimport {\r\n  badMsg,\r\n  getSelectOptions,\r\n  goodMsg,\r\n  successResponse,\r\n  warningMsg,\r\n} from \"../utils/functions\";\r\nimport { proxy_url } from \"../utils/data\";\r\nimport { CustomAlert } from \"../components/CustomAlert\";\r\n\r\nconst SettingsPage = () => {\r\n  const import_types = [\r\n    \"GEFCO SLOVAKIA\",\r\n    \"GEFCO Forwarding Slovakia\",\r\n    \"VCM\",\r\n    \"Leasing\",\r\n  ];\r\n\r\n  const [selectedType, setSelectedType] = useState();\r\n\r\n  const [cardsFile, setCardsFile] = useState();\r\n  const [employeesFile, setEmployeesFile] = useState();\r\n\r\n  const [notification, setNotification] = useState();\r\n  const [notification2, setNotification2] = useState();\r\n\r\n  const changeCards = (e) => setCardsFile(e.target.files[0]);\r\n\r\n  const uploadCards = () => {\r\n    clearErrors();\r\n\r\n    const data = new FormData();\r\n    let name = `kiosk_upload_${Date.now()}`;\r\n\r\n    data.append(\"file\", cardsFile);\r\n    data.append(\"name\", name);\r\n\r\n    console.log(cardsFile);\r\n\r\n    if (!cardsFile) {\r\n      setNotification(badMsg(\"File is not set\"));\r\n      return;\r\n    }\r\n\r\n    fetch(proxy_url + \"/file/upload\", {\r\n      method: \"POST\",\r\n      body: data,\r\n    })\r\n      .then((response) => {\r\n        console.log(response);\r\n        if (successResponse(response)) {\r\n          setNotification(goodMsg(\"Successfully uploaded.\"));\r\n        } else {\r\n          setNotification(badMsg(\"Import was unsuccessful\"));\r\n        }\r\n      })\r\n      .catch((e) => setNotification(badMsg(\"Error submitting form! \" + e)));\r\n  };\r\n\r\n  const changeEmployees = (e) => setEmployeesFile(e.target.files[0]);\r\n\r\n  const uploadEmployees = () => {\r\n    clearErrors();\r\n\r\n    const data = new FormData();\r\n    let name = `employees_upload_${Date.now()}`;\r\n\r\n    if (!selectedType) {\r\n      setNotification2(badMsg(\"Select type\"));\r\n      return;\r\n    }\r\n\r\n    data.append(\"file\", employeesFile);\r\n    data.append(\"name\", name);\r\n    data.append(\"import\", selectedType);\r\n\r\n    if (!employeesFile) {\r\n      setNotification2(badMsg(\"File is not set\"));\r\n      return;\r\n    }\r\n\r\n    fetch(proxy_url + \"/file/upload\", {\r\n      method: \"POST\",\r\n      body: data,\r\n    })\r\n      .then((response) => {\r\n        console.log(\"rrr\", response);\r\n        if (successResponse(response)) {\r\n          return response.json();\r\n        } else {\r\n          throw new Error(\"Import was unsuccessful\");\r\n        }\r\n      })\r\n      .then((res) => {\r\n        if (res.IsWarning) {\r\n          setNotification2(warningMsg(res.Msg));\r\n        } else {\r\n          setNotification2(goodMsg(\"Successfully uploaded.\")); // accept\r\n        }\r\n      })\r\n      .catch((e) => setNotification2(badMsg(\"Error \" + e)));\r\n  };\r\n\r\n  const clearErrors = () => {\r\n    setNotification(undefined);\r\n    setNotification2(undefined);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <script crossOrigin=\"true\" />\r\n      <p className=\"pt-5\">\r\n        <strong>IMPORT EMPLOYEES</strong>\r\n      </p>\r\n      <Form>\r\n        <select\r\n          onChange={(e) => setSelectedType(e.target.value)}\r\n          // ref={register({validate: v => v !== \"\"})}\r\n          name=\"type\"\r\n          required\r\n          value={selectedType}\r\n        >\r\n          {getSelectOptions(import_types)}\r\n        </select>\r\n        <span> Choose import</span>\r\n        <br />\r\n        <input type=\"file\" required onChange={changeEmployees} />\r\n        <Button type=\"button\" onClick={uploadEmployees}>\r\n          Upload\r\n        </Button>\r\n        {/* ALERTS */}\r\n        {notification2 && <CustomAlert notification={notification2} />}\r\n      </Form>\r\n      <hr />\r\n      <p className=\"pt-5\">\r\n        <strong>IMPORT CARDS</strong>\r\n      </p>\r\n      <Form>\r\n        <p style={{ marginBottom: \"4px\" }}>\r\n          Upload file with employee card information\r\n        </p>\r\n        <input type=\"file\" id=\"cardsFile\" onChange={changeCards} />\r\n        <Button type=\"button\" onClick={uploadCards}>\r\n          Upload\r\n        </Button>\r\n        {/* ALERTS */}\r\n        {notification && <CustomAlert notification={notification} />}\r\n      </Form>\r\n      <hr />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SettingsPage;\r\n","import React, { useContext, useState } from \"react\";\r\nimport { Button, Col, Form, Row } from \"react-bootstrap\";\r\nimport Select from \"react-select\";\r\nimport { PairContext } from \"../App\";\r\nimport {\r\n  getFetch,\r\n  getOptionsForSelect,\r\n  postFetch,\r\n  prepareFoundDocs,\r\n  resolveFilter,\r\n} from \"../utils/functions\";\r\nimport { proxy_url } from \"../utils/data\";\r\n\r\nconst FilterDocuments = ({\r\n  employees,\r\n  showSM,\r\n  setShowSM,\r\n  setSMData,\r\n  setDocuments,\r\n  getAllRecords,\r\n}) => {\r\n  const pairs = useContext(PairContext);\r\n  const [person, setPerson] = useState(initPerson);\r\n\r\n  const optionsStructure = getOptionsForSelect(pairs);\r\n  const [combination, setCombinations] = useState(initCombination);\r\n\r\n  const [searchType, setSearchType] = useState(\"structure\");\r\n  const [searched, setSearched] = useState(false);\r\n\r\n  const handleSearch = (type, toggle) => {\r\n    setSearched(true);\r\n    setSearchType(type);\r\n\r\n    let sm = showSM;\r\n    if (toggle) {\r\n      sm = !showSM;\r\n      setShowSM((prev) => !prev);\r\n    }\r\n\r\n    sm ? searchForMatrix(type) : searchForTable(type);\r\n  };\r\n\r\n  const searchForTable = (type) => {\r\n    console.log(\"searching for TABLE\", type);\r\n    type === \"person\" ? tableByPerson() : tableByCombination();\r\n  };\r\n\r\n  const tableByPerson = () => {\r\n    if (!person.employee) {\r\n      getAllRecords();\r\n      return;\r\n    }\r\n\r\n    const id = person.employee.value;\r\n    getFetch(`/document/manager/${id}`)\r\n      .then((res) => {\r\n        console.log(\"tableByPerson\", res);\r\n        setDocuments(prepareFoundDocs(res, pairs));\r\n      })\r\n      .catch((e) => {\r\n        setDocuments([]);\r\n      });\r\n  };\r\n\r\n  const tableByCombination = () => {\r\n    const filter = resolveFilter(combination);\r\n    postFetch(`/document/filter`, JSON.stringify(filter)).then((res) => {\r\n      console.log(\"tableByCombination\", res);\r\n      setDocuments(prepareFoundDocs(res, pairs));\r\n    });\r\n  };\r\n\r\n  const searchForMatrix = (type) => {\r\n    console.log(\"searching for MATRIX\", type);\r\n    type === \"person\" ? matrixByPerson() : matrixByCombination();\r\n  };\r\n\r\n  const matrixByPerson = () => {\r\n    fetch(proxy_url + `/skill/matrix`, {\r\n      method: \"POST\",\r\n      body: new URLSearchParams(`superior_id=${person.employee.value}`),\r\n    })\r\n      .then((result) => result.json())\r\n      .then((res) => {\r\n        console.log(\"matrixByPerson\", res);\r\n        setSMData(res);\r\n      });\r\n  };\r\n\r\n  const matrixByCombination = () => {\r\n    const filter = resolveFilter(combination);\r\n    fetch(proxy_url + `/skill/matrix`, {\r\n      method: \"POST\",\r\n      body: new URLSearchParams(`filter=${JSON.stringify(filter)}`),\r\n    })\r\n      .then((result) => result.json())\r\n      .then((res) => {\r\n        console.log(\"matrixByCombination\", res);\r\n        setSMData(res);\r\n      });\r\n  };\r\n\r\n  const getBtnStyle = (type) => {\r\n    const colors = searched && searchType === type ? activeBtn : passiveBtn;\r\n    return {\r\n      border: \"none\",\r\n      width: \"10%\",\r\n      ...colors,\r\n    };\r\n  };\r\n\r\n  const selectPerson = (data, { name: field }) => {\r\n    setSearched(false);\r\n    setPerson({ ...person, [field]: data });\r\n  };\r\n\r\n  const selectorPerson = () => (\r\n    <div style={style}>\r\n      <Select\r\n        isClearable\r\n        value={person.employee}\r\n        name={\"employee\"}\r\n        placeholder={\"Select employee\"}\r\n        options={employees}\r\n        onChange={(data, p) => selectPerson(data, p)}\r\n      />\r\n    </div>\r\n  );\r\n\r\n  const selectStructure = (data, { name: field }) => {\r\n    setSearched(false);\r\n    setCombinations({ ...combination, [field]: data });\r\n  };\r\n\r\n  const selectorStructure = (name) => (\r\n    <div style={style}>\r\n      <Select\r\n        isClearable\r\n        isMulti\r\n        value={combination[name]}\r\n        name={name}\r\n        placeholder={`Select ${name}`}\r\n        options={optionsStructure[name]}\r\n        onChange={(data, s) => selectStructure(data, s)}\r\n      />\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <Form style={{ marginLeft: \"16px\" }}>\r\n      {/* EMPLOYEE ROW*/}\r\n      <Row className=\"pb-2\">\r\n        <Button\r\n          style={getBtnStyle(\"person\")}\r\n          onClick={() => handleSearch(\"person\")}\r\n        >\r\n          {showSM ? \"Search manager\" : \"Search employee\" }\r\n        </Button>\r\n        {selectorPerson()}\r\n        <Col className=\"text-right pr-0\">\r\n          <Button\r\n            className=\"mr-3\"\r\n            variant=\"primary\"\r\n            onClick={() => handleSearch(searchType, true)}\r\n          >\r\n            {`Show ${showSM ? \"table\" : \"skill matrix\"}`}\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n      {/* STRUCTURE ROW*/}\r\n      <Row>\r\n        <Button\r\n          style={getBtnStyle(\"structure\")}\r\n          onClick={() => handleSearch(\"structure\")}\r\n        >\r\n          Search combination\r\n        </Button>\r\n        {selectorStructure(\"branches\")}\r\n        {selectorStructure(\"divisions\")}\r\n        {selectorStructure(\"departments\")}\r\n        {selectorStructure(\"cities\")}\r\n      </Row>\r\n    </Form>\r\n  );\r\n};\r\n\r\nconst initCombination = {\r\n  branches: [],\r\n  cities: [],\r\n  departments: [],\r\n  divisions: [],\r\n};\r\n\r\nconst initPerson = {\r\n  employee: \"\",\r\n  lector: \"\",\r\n};\r\n\r\nconst style = {\r\n  width: \"22%\",\r\n  marginLeft: \"5px\",\r\n};\r\n\r\nconst activeBtn = {\r\n  backgroundColor: \"#f3c404f2\",\r\n  color: \"black\",\r\n};\r\n\r\nconst passiveBtn = {\r\n  backgroundColor: \"#343a40\",\r\n};\r\n\r\nexport default FilterDocuments;\r\n","import React from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nconst ToggleBtn = (c, row, rowIndex, { id, data, setData, i }) => {\r\n  const document = data[rowIndex];\r\n  let state = document.employees[i]?.state;\r\n  if (state === undefined) {\r\n    state = \"_\";\r\n  }\r\n  const mark = state.includes(\"X\");\r\n  if (mark) state = unMarkState();\r\n\r\n  function markState() {\r\n    return \"X\" + state;\r\n  }\r\n\r\n  function unMarkState() {\r\n    if (!state.includes(\"X\")) return state;\r\n    if (state.length === 1 && state !== \"X\") return state;\r\n    return state.substr(1);\r\n  }\r\n\r\n  const handleClick = () => {\r\n    const stt = mark ? unMarkState() : markState();\r\n\r\n    const new_employees = [...document.employees];\r\n    new_employees[i] = {\r\n      ...new_employees[i],\r\n      state: stt,\r\n    };\r\n\r\n    const copy = [...data];\r\n    copy[rowIndex] = { ...document, employees: new_employees };\r\n    setData(copy);\r\n  };\r\n\r\n  const getColor = (state) => {\r\n    switch (state) {\r\n      case \"-\":\r\n        return \"gray\";\r\n      case \"_\":\r\n        return \"cornflowerblue\";\r\n      case \"es\":\r\n        return \"tomato\";\r\n      case \"e\":\r\n        return \"orange\";\r\n      case \"s\":\r\n        return \"gold\";\r\n      default:\r\n        return \"green\";\r\n      // TODO implement *\r\n    }\r\n  };\r\n\r\n  const getLabel = () => {\r\n    const labels = [\r\n      { state: \"-\", label: \"no need\" },\r\n      { state: \"es\", label: \"miss e+s\" },\r\n      { state: \"e\", label: \"miss e\" },\r\n      { state: \"s\", label: \"miss s\" },\r\n      { state: \"\", label: \"well done\" },\r\n      { state: \"X\", label: \"bug\" },\r\n      { state: \"_\", label: \"not send\" },\r\n    ];\r\n    return labels.find((l) => l.state === state)?.label;\r\n  };\r\n\r\n  const styledBtn = {\r\n    backgroundColor: getColor(state),\r\n    color: state === \"s\" ? \"black\" : \"white\",\r\n    borderColor: mark ? \"black\" : \"white\",\r\n    borderWidth: \"5px\",\r\n  };\r\n\r\n  return (\r\n    <Button style={styledBtn} onClick={handleClick} className=\"btn-block\">\r\n      {getLabel()}\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default ToggleBtn;\r\n","import React from \"react\";\r\nimport { Button, ButtonGroup, Col, Row, Card } from \"react-bootstrap\";\r\nimport { ExclamationTriangle } from \"react-bootstrap-icons\";\r\n\r\nexport const RowButtons = ({\r\n  data,\r\n  setAction,\r\n  setModalInfo,\r\n  setShowModal,\r\n  handleAccept,\r\n  showLegend,\r\n  setShowLegend,\r\n}) => {\r\n  const handleClick = (e) => {\r\n    const action = e.target.id;\r\n    setAction(action);\r\n    if (action === \"cancel\") {\r\n      handleAccept();\r\n    } else {\r\n      setModalInfo({\r\n        body: `Do you really want to ${action} selected signatures?`,\r\n      });\r\n      setShowModal(true);\r\n    }\r\n  };\r\n\r\n  const disabled = data.length === 0;\r\n\r\n  return (\r\n    <Row className=\"mb-3\">\r\n      <Col className=\"text-left\">\r\n        <ButtonGroup className=\"div-btn\" size=\"sm\">\r\n          {/* maybe https://react-bootstrap.github.io/components/overlays/ ? */}\r\n          <Button onClick={() => setShowLegend(!showLegend)}>\r\n            {showLegend ? \"Hide legend\" : \"Show legend\"}\r\n          </Button>\r\n        </ButtonGroup>\r\n      </Col>\r\n      <Col className=\"text-right\">\r\n        <ButtonGroup className=\"div-btn\" onClick={handleClick} size=\"sm\">\r\n          <Button id=\"sign\" size=\"sm\" disabled={disabled}>\r\n            Sign\r\n          </Button>\r\n          <Button id=\"cancelDuty\" size=\"sm\" disabled={disabled}>\r\n            Cancel duty\r\n          </Button>\r\n          <Button id=\"trainAgain\" size=\"sm\" disabled={disabled}>\r\n            Train again\r\n          </Button>\r\n          <Button\r\n            id=\"cancel\"\r\n            size=\"sm\"\r\n            onClick={handleClick}\r\n            disabled={disabled}\r\n          >\r\n            Cancel\r\n          </Button>\r\n        </ButtonGroup>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport const Legend = () => {\r\n  const Badge = ({ color, textColor = \"white\", label, text }) => {\r\n    const style = {\r\n      background: color,\r\n      borderColor: color,\r\n      color: textColor,\r\n      width: \"80px\",\r\n      height: \"20px\",\r\n      fontSize: \".7rem\",\r\n      fontWeight: \"bold\",\r\n      padding: \"0\",\r\n    };\r\n    return (\r\n      <p>\r\n        <span>\r\n          <Button style={style}>{label}</Button>\r\n          {` ${text}`}\r\n        </span>\r\n      </p>\r\n    );\r\n  };\r\n\r\n  const cardStyle = {\r\n    width: \"30rem\",\r\n    marginTop: \"1rem\",\r\n    fontSize: \".7rem\",\r\n    marginBottom: \".75rem\",\r\n  };\r\n\r\n  return (\r\n    <Card style={cardStyle}>\r\n      <Card.Body>\r\n        <Card.Subtitle className=\"mb-3 text-muted\">Legend:</Card.Subtitle>\r\n        <Card.Text>\r\n          <Badge\r\n            label=\"no need\"\r\n            text=\"Zamestnanec bol odznačený z potreby oboznámenia\"\r\n            color=\"gray\"\r\n          />\r\n          <Badge\r\n            label=\"miss e+s\"\r\n            text=\"Ani zamestnanec ani nadriadený ešte nepotvrdili\"\r\n            color=\"tomato\"\r\n          />\r\n          <Badge label=\"miss e\" text=\"Zamestnanec nepotvrdil\" color=\"orange\" />\r\n          <Badge\r\n            label=\"miss s\"\r\n            text=\"Nadriadený nepotvrdil\"\r\n            color=\"gold\"\r\n            textColor=\"white\"\r\n          />\r\n          <Badge label=\"well done\" text=\"Dokument je potvrdený\" color=\"green\" />\r\n          <Badge\r\n            label=\"not sent\"\r\n            text=\"Este neodoslane\"\r\n            color=\"cornflowerblue\"\r\n          />\r\n          <p>\r\n            <ExclamationTriangle\r\n              style={{ color: \"red\", marginBottom: \"4px\" }}\r\n            />{\" \"}\r\n            Uplynul deadline a chýbajú podpisy\r\n          </p>\r\n          <p>\r\n            hviezdička <strong>*</strong> znamena, ze zamestnanec sa opakovane\r\n            preškoluje\r\n          </p>\r\n        </Card.Text>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport ToggleBtn from \"./ToggleBtn\";\r\nimport ConfirmModal from \"../../components/Modals/ConfirmModal\";\r\nimport { Legend, RowButtons } from \"./SkillMatrixComponents\";\r\nimport {\r\n  buttonColumn,\r\n  prepareSMData,\r\n  sortEmployeesByName,\r\n} from \"../../utils/functions\";\r\nimport { DocumentLabel } from \"../../utils/Formatter\";\r\nimport MyBootstrapTable from \"../../components/Tables/MyBootstrapTable\";\r\nimport { proxy_url } from \"../../utils/data\";\r\n\r\nconst SkillMatrix = ({ SMData }) => {\r\n  const [data, setData] = useState([]);\r\n  const [employees, setEmployees] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (!SMData.documents) return;\r\n\r\n    const sample = SMData.documents[0];\r\n    if (!sample || !sample.signatures) {\r\n      setData([]);\r\n      return;\r\n    }\r\n\r\n    const sortedEmployees = sortEmployeesByName(SMData.employees);\r\n    setEmployees(sortedEmployees);\r\n\r\n    const sm = [];\r\n    let signatures = [];\r\n\r\n    SMData.documents.forEach((doc, j) => {\r\n      sortedEmployees.forEach((emp, i) => {\r\n        const signature = doc.signatures.find(\r\n          (sign) => sign.employee_id === emp.id\r\n        );\r\n        signatures.push(\r\n          signature || {\r\n            employee: {\r\n              id: emp.id,\r\n            },\r\n            sign: {\r\n              id: null,\r\n            },\r\n          }\r\n        );\r\n      });\r\n\r\n      sm.push({\r\n        ...doc,\r\n        signatures: signatures,\r\n      });\r\n\r\n      doc.signatures = signatures;\r\n\r\n      signatures = [];\r\n    });\r\n\r\n    setData(prepareSMData(SMData.documents));\r\n  }, [SMData, SMData.documents]);\r\n\r\n  const [showLegend, setShowLegend] = useState(false);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [modalInfo, setModalInfo] = useState({});\r\n  const [action, setAction] = useState(\"\");\r\n\r\n  const columns = getColumns();\r\n\r\n  function getColumns() {\r\n    const columns = [\r\n      {\r\n        dataField: \"name\",\r\n        text: \"\",\r\n        formatter: DocumentLabel,\r\n        headerStyle: { width: \"1%\" },\r\n      },\r\n    ];\r\n\r\n    let counter = 0;\r\n\r\n    employees.forEach((e) => {\r\n      const name = `${e.first_name} ${e.last_name}, ${e.job_title}`;\r\n      columns.push({\r\n        ...buttonColumn(e.id, name),\r\n        // headerFormatter: FormattedEmployee,\r\n        // headerTitle: (col, row) => \"e.job\",\r\n        formatter: ToggleBtn,\r\n        formatExtraData: {\r\n          id: e.id,\r\n          data: data,\r\n          setData: setData,\r\n          // signatures: signatures,\r\n          // setSignatures: setSignatures,\r\n          i: counter++ % employees.length,\r\n        },\r\n      });\r\n    });\r\n\r\n    return columns;\r\n  }\r\n\r\n  function changedState(e) {\r\n    return e.state.includes(\"X\");\r\n  }\r\n\r\n  function sign(state) {\r\n    if (state === \"s\") return \"\";\r\n    return \"e\";\r\n  }\r\n\r\n  function cancelSign() {\r\n    return \"-\";\r\n  }\r\n\r\n  function resetSign(require_superior) {\r\n    return require_superior ? \"es\" : \"s\";\r\n  }\r\n\r\n  function updateState(require_superior, e) {\r\n    if (!changedState(e)) return e;\r\n    console.log(\"e\", e);\r\n    let state = e.state.replace(\"X\", \"\");\r\n\r\n    if (action === \"sign\") {\r\n      if (state === \"-\" || state === \"e\" || state === \"\") {\r\n        return { ...e, state: state };\r\n      }\r\n      fetch(proxy_url + \"/sign/superior\", {\r\n        method: \"POST\",\r\n        body: new URLSearchParams(`id=${e.sign_id}`),\r\n      });\r\n      // }).then((res) => {\r\n      // if (successResponse(res)) {\r\n      return { ...e, state: sign(state) };\r\n      // }\r\n      // });\r\n    }\r\n    if (action === \"cancelDuty\") {\r\n      if (state === \"-\") return { ...e, state: state };\r\n      fetch(proxy_url + \"/cancels\", {\r\n        method: \"POST\",\r\n        body: new URLSearchParams(e.sign_id.toString()),\r\n      });\r\n      return { ...e, state: cancelSign() };\r\n    }\r\n    if (action === \"trainAgain\") {\r\n      if (require_superior && state === \"es\") return { ...e, state: state };\r\n      if (!require_superior && !state) return { ...e, state: \"e\" };\r\n      fetch(proxy_url + \"/resigns\", {\r\n        method: \"POST\",\r\n        body: new URLSearchParams(e.sign_id.toString()),\r\n      });\r\n      state = resetSign(require_superior);\r\n      return { ...e, state: state };\r\n    }\r\n  }\r\n\r\n  const handleAccept = () => {\r\n    const update = data.map((d) => {\r\n      return {\r\n        ...d,\r\n        employees: d.employees.map((e) => updateState(d.require_superior, e)),\r\n      };\r\n    });\r\n    setData(update);\r\n  };\r\n\r\n  const handleExport = () => {\r\n    // TODO Export\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <MyBootstrapTable\r\n        title=\"SkillMatrix\"\r\n        classes=\"skill-matrix-table\"\r\n        data={data}\r\n        columns={columns}\r\n        // horizontal scroll\r\n        wrapperClasses=\"table-responsive\"\r\n        rowClasses=\"text-nowrap\"\r\n      />\r\n      <RowButtons\r\n        data={data}\r\n        setAction={setAction}\r\n        setModalInfo={setModalInfo}\r\n        setShowModal={setShowModal}\r\n        handleAccept={handleAccept}\r\n        handleExport={handleExport}\r\n        showLegend={showLegend}\r\n        setShowLegend={setShowLegend}\r\n      />\r\n      {showLegend && <Legend />}\r\n      <ConfirmModal\r\n        showModal={showModal}\r\n        setShowModal={setShowModal}\r\n        modalInfo={modalInfo}\r\n        handleAccept={handleAccept}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SkillMatrix;\r\n","import React from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { recordType } from \"../../utils/functions\";\r\n\r\nconst ReportBtn = (cell, row, index, { setReport }) => {\r\n  return (\r\n    <Button\r\n      // href={`/${recordType(row)}/reports/${row.id}`}\r\n      // type={\"link\"}\r\n      onClick={() => setReport(row.id)}\r\n      size=\"sm\"\r\n    >\r\n      Report\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default ReportBtn;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport {\r\n  getFetch,\r\n  getTimestamp,\r\n  orderBy,\r\n  postFetch,\r\n} from \"../../utils/functions\";\r\nimport MyBootstrapTable from \"../../components/Tables/MyBootstrapTable\";\r\nimport { format_date } from \"../../utils/Formatter\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport { useReactToPrint } from \"react-to-print\";\r\n\r\nconst ReportDocumentModal = ({ id, closeModal }) => {\r\n  const [reports, setReports] = useState([]);\r\n  const [activeReport, setActiveReport] = useState();\r\n\r\n  const [employees, setEmployees] = useState([]);\r\n  const [reqSuperior, setReqSuperior] = useState(false);\r\n\r\n  const [preData, setPreData] = useState([]);\r\n\r\n  const componentRef = useRef();\r\n  const handlePrint = useReactToPrint({\r\n    content: () => componentRef.current,\r\n  });\r\n\r\n  useEffect(() => {\r\n    getFetch(`/document/report/${id}`).then((res) => {\r\n      console.log(\"report data\", res);\r\n\r\n      const rep = res.find((r) => r.id == id);\r\n      prepareReport(rep);\r\n\r\n      if (res.length > 1) {\r\n        const sorted = res.sort(function (a, b) {\r\n          return a.id - b.id;\r\n        });\r\n        setReports(sorted);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  const prepareReport = (res) => {\r\n    setActiveReport(res);\r\n    setReqSuperior(res.require_superior);\r\n\r\n    setPreData([\r\n      {\r\n        label: \"Názov dokumentu:\",\r\n        value: res.name,\r\n      },\r\n    ]);\r\n\r\n    if (res.require_superior) {\r\n      let superiors = [];\r\n      res.signatures.forEach((sign) => {\r\n        if (sign.superior_id !== 0) {\r\n          superiors.push(sign.superior_id);\r\n        }\r\n      });\r\n      superiors = `[${superiors.join(\",\")}]`;\r\n\r\n      postFetch(`/employees/ids`, JSON.stringify({ ids: superiors })).then(\r\n        (res2) => {\r\n          console.log(\"res\", res2);\r\n          setPreData((prev) => [\r\n            ...prev,\r\n            {\r\n              label: \"Školiteľ:\",\r\n              value: res2\r\n                .map((s) => s.first_name + \" \" + s.last_name)\r\n                .join(\", \"),\r\n            },\r\n          ]);\r\n        }\r\n      );\r\n    }\r\n\r\n    const emps = res.signatures.map((sign) => {\r\n      const { employee: e } = sign;\r\n      return {\r\n        id: sign.employee_id,\r\n        name: `${e.first_name} ${e.last_name}`,\r\n        e_date: format_date(sign.e_date),\r\n        s_date: format_date(sign.s_date),\r\n      };\r\n    });\r\n\r\n    // setEmployees([...emps, ...emps, ...emps]);\r\n    setEmployees(emps);\r\n  };\r\n\r\n  const title = `Prezenčná listina`;\r\n\r\n  const preColumns = [\r\n    {\r\n      dataField: \"label\",\r\n      text: \"\",\r\n    },\r\n    {\r\n      dataField: \"value\",\r\n      text: \"\",\r\n    },\r\n  ];\r\n\r\n  const columns = [\r\n    {\r\n      dataField: \"name\",\r\n      text: \"Full name\",\r\n      sort: true,\r\n    },\r\n    {\r\n      dataField: \"e_date\",\r\n      text: \"Sign Date\",\r\n      sort: true,\r\n    },\r\n  ];\r\n\r\n  if (reqSuperior) {\r\n    columns.push({\r\n      dataField: \"s_date\",\r\n      text: \"Superior\",\r\n      sort: true,\r\n    });\r\n  }\r\n\r\n  const ReportLink = ({ rep }) => {\r\n    const row = `${rep.name}, version: ${rep.version}, date: ${format_date(\r\n      rep.release_date\r\n    )}`;\r\n    return (\r\n      <p style={{ marginBottom: \"4px\", marginRight: \"24px\" }}>\r\n        {rep.id === activeReport?.id ? (\r\n          <span>{row}</span>\r\n        ) : (\r\n          <Button\r\n            variant=\"link\"\r\n            onClick={() => prepareReport(rep)}\r\n            style={{ padding: \"0\" }}\r\n          >\r\n            {row}\r\n          </Button>\r\n        )}\r\n      </p>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Modal show={true} onHide={closeModal} centered size=\"lg\">\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>\r\n          <span>{title}</span>\r\n          <Button\r\n            size=\"sm\"\r\n            variant=\"dark\"\r\n            style={{ position: \"absolute\", right: \"3.5rem\" }}\r\n            onClick={handlePrint}\r\n          >\r\n            Print this out!\r\n          </Button>\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <div id=\"print-page content\" ref={componentRef}>\r\n          <div\r\n            className=\"no-print\"\r\n            style={{\r\n              marginBottom: \"1rem\",\r\n            }}\r\n          >\r\n            {reports.map((rep) => (\r\n              <ReportLink rep={rep} />\r\n            ))}\r\n          </div>\r\n          <div\r\n            className=\"print header\"\r\n            style={{\r\n              position: \"relative\",\r\n              marginBottom: \"5rem\",\r\n              marginTop: \"2rem\",\r\n              display: \"none\",\r\n            }}\r\n          >\r\n            <img\r\n              src=\"/images/logo-header.png\"\r\n              style={{\r\n                position: \"absolute\",\r\n                left: \"0\",\r\n              }}\r\n            />\r\n            <h2\r\n              style={{\r\n                textAlign: \"center\",\r\n              }}\r\n            >\r\n              {title}\r\n            </h2>\r\n          </div>\r\n          <MyBootstrapTable\r\n            data={preData}\r\n            columns={preColumns}\r\n            defaultSorted={orderBy(\"name\")}\r\n            headerClasses=\"d-none\"\r\n            classes=\"report mb-2\"\r\n          />\r\n          <MyBootstrapTable\r\n            data={employees}\r\n            columns={columns}\r\n            defaultSorted={orderBy(\"name\")}\r\n            // horizontal scroll\r\n            wrapperClasses=\"table-responsive\"\r\n            rowClasses=\"text-nowrap\"\r\n          />\r\n          <p\r\n            id=\"pageFooter\"\r\n            className=\"print footer\"\r\n            style={{ display: \"none\", position: \"absolute\", bottom: \"0\" }}\r\n          >\r\n            {getTimestamp()}\r\n          </p>\r\n          <div\r\n            style={{\r\n              display: \"none\",\r\n              position: \"absolute\",\r\n              bottom: \"0\",\r\n              right: \"0\",\r\n            }}\r\n            className=\"page-number print\"\r\n          />\r\n        </div>\r\n      </Modal.Body>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ReportDocumentModal;\r\n","import React, { useState } from \"react\";\r\nimport EditBtn from \"../components/Buttons/EditBtn\";\r\nimport EditRecordModal from \"../components/Modals/EditRecordModal\";\r\nimport ReportBtn from \"./report/ReportBtn\";\r\nimport { buttonColumn, orderBy } from \"../utils/functions\";\r\nimport { FormattedRelease, Percentage } from \"../utils/Formatter\";\r\nimport MyBootstrapTable from \"../components/Tables/MyBootstrapTable\";\r\nimport ReportDocumentModal from \"./report/ReportDocumentModal\";\r\n\r\nconst FoundDocuments = ({ found, setFound }) => {\r\n  const [formData, setFormData] = useState();\r\n  const [report, setReport] = useState();\r\n\r\n  const columns = [\r\n    {\r\n      dataField: \"name\",\r\n      text: \"Name\",\r\n      sort: true,\r\n    },\r\n    {\r\n      dataField: \"release_date.Time\",\r\n      text: \"Release\",\r\n      formatter: FormattedRelease,\r\n      sort: true,\r\n    },\r\n    {\r\n      dataField: \"type\",\r\n      text: \"Type\",\r\n      sort: true,\r\n    },\r\n    {\r\n      dataField: \"branches\",\r\n      text: \"Branches\",\r\n      sort: true,\r\n    },\r\n    {\r\n      dataField: \"divisions\",\r\n      text: \"Divisions\",\r\n      sort: true,\r\n    },\r\n    {\r\n      dataField: \"departments\",\r\n      text: \"Departments\",\r\n      sort: true,\r\n    },\r\n    {\r\n      dataField: \"cities\",\r\n      text: \"Cities\",\r\n      sort: true,\r\n    },\r\n    {\r\n      dataField: \"complete\",\r\n      text: \"State\",\r\n      formatter: Percentage,\r\n      sort: true,\r\n      headerStyle: { width: \"1%\" },\r\n    },\r\n    {\r\n      ...buttonColumn(\"EditBtn\"),\r\n      formatter: EditBtn,\r\n      formatExtraData: {\r\n        setFormData: setFormData,\r\n      },\r\n    },\r\n    {\r\n      ...buttonColumn(\"ReportBtn\"),\r\n      formatter: ReportBtn,\r\n      formatExtraData: {\r\n        setReport: setReport,\r\n      },\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <MyBootstrapTable\r\n        title=\"Found documents\"\r\n        data={found}\r\n        columns={columns}\r\n        defaultSorted={orderBy(\"name\")}\r\n        // horizontal scroll\r\n        wrapperClasses=\"table-responsive\"\r\n        rowClasses=\"text-nowrap\"\r\n      />\r\n      {formData && (\r\n        <EditRecordModal\r\n          setRecords={setFound}\r\n          formData={formData}\r\n          setFormData={setFormData}\r\n          actual={true}\r\n        />\r\n      )}\r\n      {report && (\r\n        <ReportDocumentModal\r\n          id={report}\r\n          closeModal={() => setReport(undefined)}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FoundDocuments;\r\n","import React, { useContext, useEffect, useRef, useState } from \"react\";\r\nimport { getFetch, orderBy } from \"../../utils/functions\";\r\nimport MyBootstrapTable from \"../../components/Tables/MyBootstrapTable\";\r\nimport { format_date } from \"../../utils/Formatter\";\r\nimport { PairContext } from \"../../App\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { useReactToPrint } from \"react-to-print\";\r\n\r\nconst ReportTrainingModal = ({ id, closeModal }) => {\r\n  const pairs = useContext(PairContext);\r\n\r\n  const [preData, setPreData] = useState([]);\r\n  const [employees, setEmployees] = useState([]);\r\n\r\n  const componentRef = useRef();\r\n  const handlePrint = useReactToPrint({\r\n    content: () => componentRef.current,\r\n  });\r\n\r\n  useEffect(() => {\r\n    getFetch(`/training/report/${id}`).then((res) => {\r\n      setPreData([\r\n        {\r\n          label: \"Názov školenia:\",\r\n          value: res.name,\r\n        },\r\n        {\r\n          label: \"Dátum a miesto konania školenia:\",\r\n          value: format_date(res.date) + \" \" + res.place,\r\n        },\r\n        {\r\n          label: \"Názov vzdelávacej agentúry:\",\r\n          value: res.agency,\r\n        },\r\n        {\r\n          label: \"Meno a priezvisko školiteľa:\",\r\n          value: res.lector,\r\n        },\r\n      ]);\r\n\r\n      setEmployees(\r\n        res.signatures.map((sign) => {\r\n          const e = sign.employee;\r\n          return {\r\n            id: e.id,\r\n            name: `${e.first_name} ${e.last_name}`,\r\n            date: format_date(sign.date),\r\n            department: pairs.departments.find(\r\n              (dep) => dep.id === e.department_id\r\n            )?.name,\r\n          };\r\n        })\r\n      );\r\n    });\r\n  }, []);\r\n\r\n  const title = `Prezenčná listina`;\r\n\r\n  const preColumns = [\r\n    {\r\n      dataField: \"label\",\r\n      text: \"\",\r\n    },\r\n    {\r\n      dataField: \"value\",\r\n      text: \"\",\r\n    },\r\n  ];\r\n\r\n  const columns = [\r\n    {\r\n      dataField: \"name\",\r\n      text: \"Full name\",\r\n      sort: true,\r\n    },\r\n    {\r\n      dataField: \"department\",\r\n      text: \"Department\",\r\n      sort: true,\r\n    },\r\n    {\r\n      dataField: \"date\",\r\n      text: \"Sign Date\",\r\n      sort: true,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Modal show={true} onHide={closeModal} centered size=\"lg\">\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>\r\n          <span>{title}</span>\r\n          <Button\r\n            size=\"sm\"\r\n            variant=\"dark\"\r\n            style={{ position: \"absolute\", right: \"3.5rem\" }}\r\n            onClick={handlePrint}\r\n          >\r\n            Print this out!\r\n          </Button>\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <div id=\"print-page content\" ref={componentRef}>\r\n          <div>\r\n            <MyBootstrapTable\r\n              data={preData}\r\n              columns={preColumns}\r\n              defaultSorted={orderBy(\"name\")}\r\n              headerClasses=\"d-none\"\r\n              classes=\"report\"\r\n            />\r\n            <br />\r\n            <MyBootstrapTable\r\n              data={employees}\r\n              columns={columns}\r\n              defaultSorted={orderBy(\"name\")}\r\n              // horizontal scroll\r\n              wrapperClasses=\"table-responsive\"\r\n              rowClasses=\"text-nowrap\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </Modal.Body>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ReportTrainingModal;\r\n","import React, { useState } from \"react\";\r\nimport EditBtn from \"../components/Buttons/EditBtn\";\r\nimport EditRecordModal from \"../components/Modals/EditRecordModal\";\r\nimport ReportBtn from \"./report/ReportBtn\";\r\nimport { buttonColumn, orderBy } from \"../utils/functions\";\r\nimport { FormattedDate, Percentage } from \"../utils/Formatter\";\r\nimport MyBootstrapTable from \"../components/Tables/MyBootstrapTable\";\r\nimport { Redirect } from \"react-router\";\r\nimport ReportDocumentModal from \"./report/ReportDocumentModal\";\r\nimport ReportTrainingModal from \"./report/ReportTrainingModal\";\r\n\r\nconst FoundTrainings = ({ found, setFound }) => {\r\n  const [formData, setFormData] = useState();\r\n  const [report, setReport] = useState();\r\n\r\n  const columns = [\r\n    {\r\n      dataField: \"name\",\r\n      text: \"Name\",\r\n      sort: true,\r\n    },\r\n    {\r\n      dataField: \"date.Time\",\r\n      text: \"Release\",\r\n      formatter: FormattedDate,\r\n      sort: true,\r\n    },\r\n    {\r\n      dataField: \"lector\",\r\n      text: \"Lector\",\r\n      sort: true,\r\n    },\r\n    {\r\n      dataField: \"agency\",\r\n      text: \"Agency\",\r\n      sort: true,\r\n    },\r\n    {\r\n      dataField: \"place\",\r\n      text: \"Place\",\r\n      sort: true,\r\n    },\r\n    {\r\n      dataField: \"complete\",\r\n      text: \"State\",\r\n      formatter: Percentage,\r\n      sort: true,\r\n      headerStyle: { width: \"1%\" },\r\n    },\r\n    {\r\n      ...buttonColumn(\"EditBtn\"),\r\n      formatter: EditBtn,\r\n      formatExtraData: {\r\n        setFormData: setFormData,\r\n      },\r\n    },\r\n    {\r\n      ...buttonColumn(\"ReportBtn\"),\r\n      formatter: ReportBtn,\r\n      formatExtraData: {\r\n        setReport: setReport,\r\n      },\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <MyBootstrapTable\r\n        title=\"Found trainings\"\r\n        data={found}\r\n        columns={columns}\r\n        defaultSorted={orderBy(\"name\")}\r\n        // horizontal scroll\r\n        wrapperClasses=\"table-responsive\"\r\n        rowClasses=\"text-nowrap\"\r\n      />\r\n      {formData && (\r\n        <EditRecordModal\r\n          setRecords={setFound}\r\n          formData={formData}\r\n          setFormData={setFormData}\r\n          actual={true}\r\n        />\r\n      )}\r\n      {report && (\r\n        <ReportTrainingModal\r\n          id={report}\r\n          closeModal={() => setReport(undefined)}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FoundTrainings;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Button, Form, Row } from \"react-bootstrap\";\r\nimport Select from \"react-select\";\r\nimport { getFetch, postFetch } from \"../utils/functions\";\r\n\r\nconst FilterTrainings = ({ employees, setTrainings, getAllRecords }) => {\r\n  const [lectors, setLectors] = useState([]); // all lectors\r\n  const [persons, setPersons] = useState({\r\n    employee: \"\",\r\n    lector: \"\",\r\n  });\r\n\r\n  const [searched, setSearched] = useState(false);\r\n\r\n  useEffect(() => {\r\n    getFetch(\"/lectors/all\").then((res) => {\r\n      setLectors(\r\n        res.map((l) => {\r\n          console.log(\"lector\", l);\r\n          return { value: l, label: l };\r\n        })\r\n      );\r\n    });\r\n  }, []);\r\n\r\n  const selectPerson = (data, { name: field }) => {\r\n    setSearched(false);\r\n    setPersons({ ...persons, [field]: data });\r\n  };\r\n\r\n  const handleSearch = () => {\r\n    setSearched(true);\r\n\r\n    if (!persons.employee && !persons.lector) {\r\n      getAllRecords();\r\n      return;\r\n    }\r\n    console.log(\r\n      \"post\",\r\n      `${JSON.stringify({\r\n        employee: \"\" + persons.employee?.value || \"\",\r\n        lector: persons.lector?.value || \"\",\r\n      })}`\r\n    );\r\n    postFetch(\r\n      `/training/filter`,\r\n      `${JSON.stringify({\r\n        employee: \"\" + persons.employee?.value || \"\",\r\n        lector: persons.lector?.value || \"\",\r\n      })}`\r\n    ).then((res) => {\r\n      console.log(\"found trainings\", res);\r\n      setTrainings(res);\r\n    });\r\n  };\r\n\r\n  const getBtnStyle = () => {\r\n    const colors = searched ? activeBtn : passiveBtn;\r\n    return {\r\n      border: \"none\",\r\n      width: \"10%\",\r\n      ...colors,\r\n    };\r\n  };\r\n\r\n  const selectorPerson = (name, options, value) => (\r\n    <div style={style}>\r\n      <Select\r\n        isClearable\r\n        value={value}\r\n        name={name}\r\n        placeholder={`Select ${name}`}\r\n        options={options}\r\n        onChange={(data, p) => selectPerson(data, p)}\r\n      />\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <Form style={{ marginTop: \"3rem\", marginLeft: \"14px\" }}>\r\n      <Row>\r\n        <Button style={getBtnStyle()} onClick={handleSearch}>\r\n          Search trainings\r\n        </Button>\r\n        {selectorPerson(\"employee\", employees, persons.employee)}\r\n        {selectorPerson(\"lector\", lectors, persons.lector)}\r\n      </Row>\r\n    </Form>\r\n  );\r\n};\r\n\r\nconst style = {\r\n  width: \"20%\",\r\n  marginLeft: \"4px\",\r\n};\r\n\r\nconst activeBtn = {\r\n  backgroundColor: \"#f3c404f2\",\r\n  color: \"black\",\r\n};\r\n\r\nconst passiveBtn = {\r\n  backgroundColor: \"#343a40\",\r\n};\r\n\r\nexport default FilterTrainings;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport FilterDocuments from \"./FilterDocuments\";\r\nimport SkillMatrix from \"./skill-matrix/SkillMatrix\";\r\nimport {\r\n  getFetch,\r\n  prepareEmployees,\r\n  prepareFoundDocs,\r\n} from \"../utils/functions\";\r\nimport FoundDocuments from \"./FoundDocuments\";\r\nimport FoundTrainings from \"./FoundTrainings\";\r\nimport FilterTrainings from \"./FilterTrainings\";\r\nimport { PairContext } from \"../App\";\r\n\r\nconst FinderPage = () => {\r\n  const pairs = useContext(PairContext);\r\n  const [employees, setEmployees] = useState([]);\r\n\r\n  const [showSM, setShowSM] = useState();\r\n  const [SMData, setSMData] = useState([]);\r\n  const [documents, setDocuments] = useState([]);\r\n  const [trainings, setTrainings] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getAllRecords();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getFetch(\"/employees/all\").then((res) => {\r\n      setEmployees(prepareEmployees(res, pairs.departments));\r\n    });\r\n  }, [pairs]);\r\n\r\n  const getAllRecords = () => {\r\n    getFetch(\"/document/actual\").then((res) => {\r\n      setDocuments(prepareFoundDocs(res, pairs));\r\n    });\r\n    getFetch(\"/training/all\").then((res) => {\r\n      setTrainings(res);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div style={{ marginTop: \"1%\" }} className=\"finder\">\r\n      <FilterDocuments\r\n        employees={employees}\r\n        showSM={showSM}\r\n        setShowSM={setShowSM}\r\n        setSMData={setSMData}\r\n        setDocuments={setDocuments}\r\n        getAllRecords={getAllRecords}\r\n      />\r\n      {showSM ? (\r\n        <SkillMatrix SMData={SMData} />\r\n      ) : (\r\n        <>\r\n          <FoundDocuments found={documents} setFound={setDocuments} />\r\n          <FilterTrainings\r\n            employees={employees}\r\n            setTrainings={setTrainings}\r\n            getAllRecords={getAllRecords}\r\n          />\r\n          <FoundTrainings found={trainings} setFound={setTrainings} />\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FinderPage;\r\n","import React from \"react\";\r\nimport { useLocation } from \"react-router\";\r\n\r\nconst Page404 = () => {\r\n  const pathname = useLocation().pathname;\r\n\r\n  return (\r\n    <>\r\n      <h2 className=\"pt-5\">Error 404: Page not found</h2>\r\n      <h5 className=\"pt-3\">\r\n        Not match for <code>{pathname}</code>\r\n      </h5>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Page404;\r\n","import React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport { Redirect } from \"react-router\";\r\n\r\nimport Container from \"react-bootstrap/Container\";\r\nimport { getUser, isAdmin } from \"./utils/functions\";\r\n\r\nimport RecordsToSignPage from \"./unsigned-records/RecordsToSignPage\";\r\nimport LoginPage from \"./login/LoginPage\";\r\nimport LogoutPage from \"./login/LogoutPage\";\r\nimport SignedRecordsPage from \"./signed-records/SignedRecordsPage\";\r\nimport AddRecordPage from \"./add-record/AddRecordPage\";\r\nimport SavedRecordsPage from \"./saved-records/SavedRecordsPage\";\r\nimport SettingsPage from \"./settings/SettingsPage\";\r\nimport FinderPage from \"./finder/FinderPage\";\r\nimport Page404 from \"./Page404\";\r\n\r\nconst Routes = () => {\r\n  const user = getUser();\r\n  const admin = isAdmin();\r\n\r\n  /** Show the component only when the user is logged in\r\n   *  Otherwise, redirect the user to login page */\r\n  const Private = ({ component: Component, ...rest }) => {\r\n    if (!user) {\r\n      return <Redirect to=\"/login\" />;\r\n    }\r\n    return <Route {...rest} component={Component} />;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Container>\r\n        <Switch>\r\n          {/* HomeRoute */}\r\n          <Route\r\n            exact\r\n            path=\"/\"\r\n            render={() => {\r\n              return getUser() ? (\r\n                <Redirect to=\"/records-to-sign\" component={RecordsToSignPage} />\r\n              ) : (\r\n                <Redirect to=\"/login\" component={LoginPage} />\r\n              );\r\n            }}\r\n          />\r\n          <Route path=\"/login\" component={LoginPage} />\r\n          <Route path=\"/logout\" component={LogoutPage} />\r\n          <Private path=\"/records-to-sign\" component={RecordsToSignPage} />\r\n          <Private path=\"/signed-records\" component={SignedRecordsPage} />\r\n          {admin && (\r\n            <>\r\n              <Private path=\"/add-record\" component={AddRecordPage} />\r\n              <Private path=\"/saved-record\" component={SavedRecordsPage} />\r\n              <Private path=\"/settings\" component={SettingsPage} />\r\n            </>\r\n          )}\r\n          <Route path=\"*\" component={Page404} />\r\n        </Switch>\r\n      </Container>\r\n      <div className=\"large-container\">\r\n        {admin && <Private path=\"/finder\" component={FinderPage} />}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Routes;\r\n","export default __webpack_public_path__ + \"static/media/logo.923adaad.png\";","import React from \"react\";\r\nimport { Navbar, Nav, NavLink } from \"react-bootstrap\";\r\nimport { getLanguage, getUser, isAdmin } from \"./utils/functions\";\r\nimport { wording } from \"./utils/wording\";\r\nimport { useLocation } from \"react-router\";\r\nimport logo from \"./images/logo.png\"\r\nconst Navigation = () => {\r\n  const user = getUser();\r\n  const admin = isAdmin();\r\n\r\n  const language = getLanguage();\r\n  let x = language === \"sk\" ? wording.sk : wording.en; // TODO languages !!!\r\n  x = x.navigation;\r\n\r\n  const LoginNav = () => (\r\n    <>\r\n      <NavLink href=\"/records-to-sign\">{x.recordsToSign}</NavLink>\r\n      <NavLink href=\"/signed-records\">{x.signedRecords}</NavLink>\r\n      {admin && (\r\n        <>\r\n          <NavLink href=\"/add-record\">{x.addRecord}</NavLink>\r\n          <NavLink href=\"/saved-record\">{x.savedRecords}</NavLink>\r\n          <NavLink href=\"/finder\">{x.finder}</NavLink>\r\n          <NavLink href=\"/settings\">{x.settings}</NavLink>\r\n        </>\r\n      )}\r\n      <NavLink href=\"/logout\">{x.logout}</NavLink>\r\n    </>\r\n  );\r\n\r\n  const LogoutNav = () => <NavLink href=\"/login\">{x.login}</NavLink>;\r\n\r\n  const Name = () => {\r\n    const name = user ? `${user.first_name} ${user.last_name}` : \"\";\r\n    return <span style={{ color: \"white\" }}>{name}</span>;\r\n  };\r\n\r\n  return (\r\n    <Navbar\r\n      expand=\"md\"\r\n      bg=\"dark\"\r\n      variant=\"dark\"\r\n      sticky=\"top\"\r\n      className=\"navigation\"\r\n    >\r\n      <Navbar.Brand href=\"/\">\r\n        <img\r\n          alt=\"logo\"\r\n          src={logo}\r\n          width=\"50\"\r\n          height=\"50\"\r\n          className=\"d-inline-block align-top\"\r\n        />\r\n      </Navbar.Brand>\r\n      <Name />\r\n      <Navbar.Toggle />\r\n      <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n        <Nav\r\n          className=\"ml-auto\"\r\n          variant=\"pills\"\r\n          activeKey={useLocation().pathname}\r\n        >\r\n          {user ? <LoginNav /> : <LogoutNav />}\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","class IdleTimer {\r\n\r\n  constructor({ timeout, onTimeout }) {\r\n    this.timeout = timeout;\r\n    this.onTimeout = onTimeout;\r\n\r\n    this.eventHandler = this.updateExpiredTime.bind(this);\r\n    this.tracker();\r\n    this.startInterval();\r\n  }\r\n\r\n  startInterval() {\r\n    this.updateExpiredTime();\r\n\r\n    this.interval = setInterval(() => {\r\n      const expiredTime = parseInt(localStorage.getItem(\"_expiredTime\"), 10);\r\n      if (expiredTime < Date.now()) {\r\n        if (this.onTimeout) {\r\n          this.onTimeout();\r\n          this.cleanUp();\r\n        }\r\n      }\r\n    }, 1000);\r\n  }\r\n\r\n  updateExpiredTime() {\r\n    if (this.timeoutTracker) {\r\n      clearTimeout(this.timeoutTracker);\r\n    }\r\n    this.timeoutTracker = setTimeout(() => {\r\n      localStorage.setItem(\"_expiredTime\", Date.now() + this.timeout * 1000);\r\n    }, 300);\r\n  }\r\n\r\n  tracker() {\r\n    window.addEventListener(\"mousemove\", this.eventHandler);\r\n    window.addEventListener(\"scroll\", this.eventHandler);\r\n    window.addEventListener(\"keydown\", this.eventHandler);\r\n  }\r\n\r\n  cleanUp() {\r\n    localStorage.removeItem(\"_expiredTime\");\r\n    clearInterval(this.interval);\r\n    window.removeEventListener(\"mousemove\", this.eventHandler);\r\n    window.removeEventListener(\"scroll\", this.eventHandler);\r\n    window.removeEventListener(\"keydown\", this.eventHandler);\r\n  }\r\n}\r\nexport default IdleTimer;\r\n","import React, { createContext, useEffect, useState } from \"react\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport Routes from \"./Routes\";\r\n\r\nimport Navigation from \"./Navigation.jsx\";\r\nimport { getUser, removeUser, getFetch, redirectTo } from \"./utils/functions\";\r\nimport IdleTimer from \"./utils/IdleTimer\";\r\n\r\nimport { comboFields, TIMEOUT } from \"./utils/data\";\r\n\r\nexport const PairContext = createContext(undefined);\r\n\r\nfunction App() {\r\n  const [pairs, setPairs] = useState({\r\n    branches: [],\r\n    divisions: [],\r\n    cities: [],\r\n    departments: [],\r\n  });\r\n\r\n  /** Load all branches, divisions etc. to easily find names for their ids */\r\n  useEffect(() => {\r\n    const _pairs = {};\r\n    comboFields.forEach((field) => {\r\n      getFetch(`/${field}`).then((data) => (_pairs[field] = data));\r\n    });\r\n    setPairs(_pairs);\r\n  }, []);\r\n\r\n  /** Set timer to logout not active user after TIMEOUT expired\r\n   *  onTimeOut the user will be logout and redirect to /login\r\n   *  - TIMEOUT can be changed in ./utils/data */\r\n  useEffect(() => {\r\n    const timer = new IdleTimer({\r\n      timeout: TIMEOUT,\r\n      onTimeout: () => {\r\n        if (getUser()) {\r\n          removeUser();\r\n          redirectTo(\"/login\");\r\n        }\r\n      },\r\n    });\r\n    return () => timer.cleanUp();\r\n  }, []);\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <Navigation />\r\n      <PairContext.Provider value={pairs}>\r\n        <Routes />\r\n      </PairContext.Provider>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './main.css';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}